/* Generated by the Nim Compiler v1.4.0 */
var framePtr = null;
var excHandler = 0;
var lastJSError = null;
if (typeof Int8Array === 'undefined') Int8Array = Array;
if (typeof Int16Array === 'undefined') Int16Array = Array;
if (typeof Int32Array === 'undefined') Int32Array = Array;
if (typeof Uint8Array === 'undefined') Uint8Array = Array;
if (typeof Uint16Array === 'undefined') Uint16Array = Array;
if (typeof Uint32Array === 'undefined') Uint32Array = Array;
if (typeof Float32Array === 'undefined') Float32Array = Array;
if (typeof Float64Array === 'undefined') Float64Array = Array;
var NTI12936044 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI1194623 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI12571057 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1188007 = {size: 0,kind: 37,base: null,node: null,finalizer: null};
var NTI12571064 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1194621 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1194643 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1194645 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI11726506 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI12685648 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2492002 = {size: 0,kind: 34,base: null,node: null,finalizer: null};
var NTI2316069 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI12685677 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI12685674 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI12685671 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI12755843 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI14713215 = {size: 0,kind: 43,base: null,node: null,finalizer: null};
var NTI14713402 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1194641 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI12795076 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI12571084 = {size: 0,kind: 16,base: null,node: null,finalizer: null};
var NTI12571076 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1194657 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI12571247 = {size: 0,kind: 16,base: null,node: null,finalizer: null};
var NTI1188005 = {size: 0,kind: 36,base: null,node: null,finalizer: null};
var NTI12571239 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI12571243 = {size: 0,kind: 16,base: null,node: null,finalizer: null};
var NTI12571202 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI12571233 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI12571232 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI14605081 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI14335050 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI14335060 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI14335047 = {size: 0,kind: 16,base: null,node: null,finalizer: null};
var NTI14331121 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI14331086 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI12795116 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI12795113 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI12795103 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI12795101 = {size: 0,kind: 21,base: null,node: null,finalizer: null};
var NTI1188044 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI10603276 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI10603237 = {size: 0,kind: 20,base: null,node: null,finalizer: null};
var NTI1188052 = {size: 0,kind: 35,base: null,node: null,finalizer: null};
var NTI10603239 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI12795096 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI12795127 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI1194649 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1188064 = {size: 0,kind: 1,base: null,node: null,finalizer: null};
var NTI1188056 = {size: 0,kind: 41,base: null,node: null,finalizer: null};
var NTI12571080 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1194653 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1194635 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1194408 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1194728 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI1188013 = {size: 0,kind: 28,base: null,node: null,finalizer: null};
var NTI1188015 = {size: 0,kind: 29,base: null,node: null,finalizer: null};
var NTI1194723 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI1194617 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1194619 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1194633 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1194637 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NNI1194637 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1194637.node = NNI1194637;
var NNI1194633 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1194633.node = NNI1194633;
var NNI1194619 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1194619.node = NNI1194619;
NTI1194723.base = NTI1194617;
NTI1194728.base = NTI1194617;
var NNI1194617 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI1194723, name: "parent", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI1188015, name: "name", sons: null}, 
{kind: 1, offset: "message", len: 0, typ: NTI1188013, name: "msg", sons: null}, 
{kind: 1, offset: "trace", len: 0, typ: NTI1188013, name: "trace", sons: null}, 
{kind: 1, offset: "up", len: 0, typ: NTI1194728, name: "up", sons: null}]};
NTI1194617.node = NNI1194617;
var NNI1194408 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1194408.node = NNI1194408;
NTI1194617.base = NTI1194408;
NTI1194619.base = NTI1194617;
NTI1194633.base = NTI1194619;
NTI1194637.base = NTI1194633;
var NNI1194635 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1194635.node = NNI1194635;
NTI1194635.base = NTI1194633;
var NNI1194653 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1194653.node = NNI1194653;
NTI1194653.base = NTI1194619;
var NNI12571080 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1188056, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI1188056, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI1188056, name: "Field2", sons: null}]};
NTI12571080.node = NNI12571080;
var NNI1194649 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1194649.node = NNI1194649;
NTI1194649.base = NTI1194619;
NTI10603237.base = NTI10603276;
var NNI10603239 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "seconds", len: 0, typ: NTI1188052, name: "seconds", sons: null}, 
{kind: 1, offset: "nanosecond", len: 0, typ: NTI10603237, name: "nanosecond", sons: null}]};
NTI10603239.node = NNI10603239;
NTI12795101.base = NTI12795096;
NTI12795103.base = NTI12795096;
var NNI12795096 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "name", len: 0, typ: NTI1188013, name: "name", sons: null}, 
{kind: 1, offset: "start", len: 0, typ: NTI10603239, name: "start", sons: null}, 
{kind: 1, offset: "time", len: 0, typ: NTI1188052, name: "time", sons: null}, 
{kind: 1, offset: "count", len: 0, typ: NTI1188044, name: "count", sons: null}, 
{kind: 1, offset: "parent", len: 0, typ: NTI12795101, name: "parent", sons: null}, 
{kind: 1, offset: "children", len: 0, typ: NTI12795103, name: "children", sons: null}]};
NTI12795096.node = NNI12795096;
NTI12795127.base = NTI12795096;
NTI12795116.base = NTI12795096;
var NNI12795113 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI12795116, name: "data", sons: null}, 
{kind: 1, offset: "head", len: 0, typ: NTI1188044, name: "head", sons: null}, 
{kind: 1, offset: "tail", len: 0, typ: NTI1188044, name: "tail", sons: null}, 
{kind: 1, offset: "size", len: 0, typ: NTI1188044, name: "size", sons: null}, 
{kind: 1, offset: "length", len: 0, typ: NTI1188044, name: "length", sons: null}]};
NTI12795113.node = NNI12795113;
var NNI14331121 = {kind: 1, offset: "length", len: 0, typ: NTI1188044, name: "length", sons: null};
NTI14331121.node = NNI14331121;
NTI14331121.base = NTI1194408;
NTI14331086.base = NTI14331121;
NTI14335060.base = NTI14335050;
NTI14335047.base = NTI14335060;
var NNI12571202 = {kind: 2, offset: 0, typ: null, name: null, len: 2, sons: {"0": {kind: 1, offset: 0, typ: NTI12571202, name: "Keyboard", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI12571202, name: "Gamepad", len: 0, sons: null}}};
NTI12571202.node = NNI12571202;
var NNI12571239 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1188005, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI1188005, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI1188044, name: "Field2", sons: null}]};
NTI12571239.node = NNI12571239;
NTI12571243.base = NTI12571239;
NTI12571247.base = NTI1188044;
var NNI12571233 = {kind: 2, len: 9, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "kind", len: 0, typ: NTI12571202, name: "kind", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI1188013, name: "name", sons: null}, 
{kind: 1, offset: "id", len: 0, typ: NTI1188044, name: "id", sons: null}, 
{kind: 1, offset: "axes", len: 0, typ: NTI12571243, name: "axes", sons: null}, 
{kind: 1, offset: "buttons", len: 0, typ: NTI12571247, name: "buttons", sons: null}, 
{kind: 1, offset: "deadzone", len: 0, typ: NTI1188005, name: "deadzone", sons: null}, 
{kind: 1, offset: "invertX", len: 0, typ: NTI1188064, name: "invertX", sons: null}, 
{kind: 1, offset: "invertY", len: 0, typ: NTI1188064, name: "invertY", sons: null}, 
{kind: 1, offset: "useRightStick", len: 0, typ: NTI1188064, name: "useRightStick", sons: null}]};
NTI12571233.node = NNI12571233;
NTI12571232.base = NTI12571233;
NTI14605081.base = NTI12571232;
var NNI1194657 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1194657.node = NNI1194657;
NTI1194657.base = NTI1194619;
NTI12571084.base = NTI12571080;
var NNI12571076 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1188044, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI12571084, name: "Field1", sons: null}]};
NTI12571076.node = NNI12571076;
var NNI12795076 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1188056, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI1188056, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI1188056, name: "Field2", sons: null}]};
NTI12795076.node = NNI12795076;
var NNI1194641 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1194641.node = NNI1194641;
NTI1194641.base = NTI1194619;
var NNI14713402 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a0", len: 0, typ: NTI14713215, name: "a0", sons: null}, 
{kind: 1, offset: "a1", len: 0, typ: NTI14713215, name: "a1", sons: null}]};
NTI14713402.node = NNI14713402;
NTI12755843.base = NTI1188056;
var NNI12685648 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1188044, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI1188044, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI1188044, name: "Field2", sons: null}, 
{kind: 1, offset: "Field3", len: 0, typ: NTI1188044, name: "Field3", sons: null}]};
NTI12685648.node = NNI12685648;
var NNI12685677 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2316069, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2492002, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI12685648, name: "Field2", sons: null}]};
NTI12685677.node = NNI12685677;
NTI12685674.base = NTI12685677;
var NNI12685671 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI12685674, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI1188044, name: "counter", sons: null}]};
NTI12685671.node = NNI12685671;
var NNI11726506 = {kind: 2, offset: 0, typ: null, name: null, len: 240, sons: {"0": {kind: 1, offset: 0, typ: NTI11726506, name: "K_UNKNOWN", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI11726506, name: "K_BACKSPACE", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI11726506, name: "K_TAB", len: 0, sons: null}, 
"13": {kind: 1, offset: 13, typ: NTI11726506, name: "K_RETURN", len: 0, sons: null}, 
"27": {kind: 1, offset: 27, typ: NTI11726506, name: "K_ESCAPE", len: 0, sons: null}, 
"32": {kind: 1, offset: 32, typ: NTI11726506, name: "K_SPACE", len: 0, sons: null}, 
"33": {kind: 1, offset: 33, typ: NTI11726506, name: "K_EXCLAIM", len: 0, sons: null}, 
"34": {kind: 1, offset: 34, typ: NTI11726506, name: "K_QUOTEDBL", len: 0, sons: null}, 
"35": {kind: 1, offset: 35, typ: NTI11726506, name: "K_HASH", len: 0, sons: null}, 
"36": {kind: 1, offset: 36, typ: NTI11726506, name: "K_DOLLAR", len: 0, sons: null}, 
"37": {kind: 1, offset: 37, typ: NTI11726506, name: "K_PERCENT", len: 0, sons: null}, 
"38": {kind: 1, offset: 38, typ: NTI11726506, name: "K_AMPERSAND", len: 0, sons: null}, 
"39": {kind: 1, offset: 39, typ: NTI11726506, name: "K_QUOTE", len: 0, sons: null}, 
"40": {kind: 1, offset: 40, typ: NTI11726506, name: "K_LEFTPAREN", len: 0, sons: null}, 
"41": {kind: 1, offset: 41, typ: NTI11726506, name: "K_RIGHTPAREN", len: 0, sons: null}, 
"42": {kind: 1, offset: 42, typ: NTI11726506, name: "K_ASTERISK", len: 0, sons: null}, 
"43": {kind: 1, offset: 43, typ: NTI11726506, name: "K_PLUS", len: 0, sons: null}, 
"44": {kind: 1, offset: 44, typ: NTI11726506, name: "K_COMMA", len: 0, sons: null}, 
"45": {kind: 1, offset: 45, typ: NTI11726506, name: "K_MINUS", len: 0, sons: null}, 
"46": {kind: 1, offset: 46, typ: NTI11726506, name: "K_PERIOD", len: 0, sons: null}, 
"47": {kind: 1, offset: 47, typ: NTI11726506, name: "K_SLASH", len: 0, sons: null}, 
"48": {kind: 1, offset: 48, typ: NTI11726506, name: "K_0", len: 0, sons: null}, 
"49": {kind: 1, offset: 49, typ: NTI11726506, name: "K_1", len: 0, sons: null}, 
"50": {kind: 1, offset: 50, typ: NTI11726506, name: "K_2", len: 0, sons: null}, 
"51": {kind: 1, offset: 51, typ: NTI11726506, name: "K_3", len: 0, sons: null}, 
"52": {kind: 1, offset: 52, typ: NTI11726506, name: "K_4", len: 0, sons: null}, 
"53": {kind: 1, offset: 53, typ: NTI11726506, name: "K_5", len: 0, sons: null}, 
"54": {kind: 1, offset: 54, typ: NTI11726506, name: "K_6", len: 0, sons: null}, 
"55": {kind: 1, offset: 55, typ: NTI11726506, name: "K_7", len: 0, sons: null}, 
"56": {kind: 1, offset: 56, typ: NTI11726506, name: "K_8", len: 0, sons: null}, 
"57": {kind: 1, offset: 57, typ: NTI11726506, name: "K_9", len: 0, sons: null}, 
"58": {kind: 1, offset: 58, typ: NTI11726506, name: "K_COLON", len: 0, sons: null}, 
"59": {kind: 1, offset: 59, typ: NTI11726506, name: "K_SEMICOLON", len: 0, sons: null}, 
"60": {kind: 1, offset: 60, typ: NTI11726506, name: "K_LESS", len: 0, sons: null}, 
"61": {kind: 1, offset: 61, typ: NTI11726506, name: "K_EQUALS", len: 0, sons: null}, 
"62": {kind: 1, offset: 62, typ: NTI11726506, name: "K_GREATER", len: 0, sons: null}, 
"63": {kind: 1, offset: 63, typ: NTI11726506, name: "K_QUESTION", len: 0, sons: null}, 
"64": {kind: 1, offset: 64, typ: NTI11726506, name: "K_AT", len: 0, sons: null}, 
"91": {kind: 1, offset: 91, typ: NTI11726506, name: "K_LEFTBRACKET", len: 0, sons: null}, 
"92": {kind: 1, offset: 92, typ: NTI11726506, name: "K_BACKSLASH", len: 0, sons: null}, 
"93": {kind: 1, offset: 93, typ: NTI11726506, name: "K_RIGHTBRACKET", len: 0, sons: null}, 
"94": {kind: 1, offset: 94, typ: NTI11726506, name: "K_CARET", len: 0, sons: null}, 
"95": {kind: 1, offset: 95, typ: NTI11726506, name: "K_UNDERSCORE", len: 0, sons: null}, 
"96": {kind: 1, offset: 96, typ: NTI11726506, name: "K_BACKQUOTE", len: 0, sons: null}, 
"97": {kind: 1, offset: 97, typ: NTI11726506, name: "K_a", len: 0, sons: null}, 
"98": {kind: 1, offset: 98, typ: NTI11726506, name: "K_b", len: 0, sons: null}, 
"99": {kind: 1, offset: 99, typ: NTI11726506, name: "K_c", len: 0, sons: null}, 
"100": {kind: 1, offset: 100, typ: NTI11726506, name: "K_d", len: 0, sons: null}, 
"101": {kind: 1, offset: 101, typ: NTI11726506, name: "K_e", len: 0, sons: null}, 
"102": {kind: 1, offset: 102, typ: NTI11726506, name: "K_f", len: 0, sons: null}, 
"103": {kind: 1, offset: 103, typ: NTI11726506, name: "K_g", len: 0, sons: null}, 
"104": {kind: 1, offset: 104, typ: NTI11726506, name: "K_h", len: 0, sons: null}, 
"105": {kind: 1, offset: 105, typ: NTI11726506, name: "K_i", len: 0, sons: null}, 
"106": {kind: 1, offset: 106, typ: NTI11726506, name: "K_j", len: 0, sons: null}, 
"107": {kind: 1, offset: 107, typ: NTI11726506, name: "K_k", len: 0, sons: null}, 
"108": {kind: 1, offset: 108, typ: NTI11726506, name: "K_l", len: 0, sons: null}, 
"109": {kind: 1, offset: 109, typ: NTI11726506, name: "K_m", len: 0, sons: null}, 
"110": {kind: 1, offset: 110, typ: NTI11726506, name: "K_n", len: 0, sons: null}, 
"111": {kind: 1, offset: 111, typ: NTI11726506, name: "K_o", len: 0, sons: null}, 
"112": {kind: 1, offset: 112, typ: NTI11726506, name: "K_p", len: 0, sons: null}, 
"113": {kind: 1, offset: 113, typ: NTI11726506, name: "K_q", len: 0, sons: null}, 
"114": {kind: 1, offset: 114, typ: NTI11726506, name: "K_r", len: 0, sons: null}, 
"115": {kind: 1, offset: 115, typ: NTI11726506, name: "K_s", len: 0, sons: null}, 
"116": {kind: 1, offset: 116, typ: NTI11726506, name: "K_t", len: 0, sons: null}, 
"117": {kind: 1, offset: 117, typ: NTI11726506, name: "K_u", len: 0, sons: null}, 
"118": {kind: 1, offset: 118, typ: NTI11726506, name: "K_v", len: 0, sons: null}, 
"119": {kind: 1, offset: 119, typ: NTI11726506, name: "K_w", len: 0, sons: null}, 
"120": {kind: 1, offset: 120, typ: NTI11726506, name: "K_x", len: 0, sons: null}, 
"121": {kind: 1, offset: 121, typ: NTI11726506, name: "K_y", len: 0, sons: null}, 
"122": {kind: 1, offset: 122, typ: NTI11726506, name: "K_z", len: 0, sons: null}, 
"127": {kind: 1, offset: 127, typ: NTI11726506, name: "K_DELETE", len: 0, sons: null}, 
"1073741881": {kind: 1, offset: 1073741881, typ: NTI11726506, name: "K_CAPSLOCK", len: 0, sons: null}, 
"1073741882": {kind: 1, offset: 1073741882, typ: NTI11726506, name: "K_F1", len: 0, sons: null}, 
"1073741883": {kind: 1, offset: 1073741883, typ: NTI11726506, name: "K_F2", len: 0, sons: null}, 
"1073741884": {kind: 1, offset: 1073741884, typ: NTI11726506, name: "K_F3", len: 0, sons: null}, 
"1073741885": {kind: 1, offset: 1073741885, typ: NTI11726506, name: "K_F4", len: 0, sons: null}, 
"1073741886": {kind: 1, offset: 1073741886, typ: NTI11726506, name: "K_F5", len: 0, sons: null}, 
"1073741887": {kind: 1, offset: 1073741887, typ: NTI11726506, name: "K_F6", len: 0, sons: null}, 
"1073741888": {kind: 1, offset: 1073741888, typ: NTI11726506, name: "K_F7", len: 0, sons: null}, 
"1073741889": {kind: 1, offset: 1073741889, typ: NTI11726506, name: "K_F8", len: 0, sons: null}, 
"1073741890": {kind: 1, offset: 1073741890, typ: NTI11726506, name: "K_F9", len: 0, sons: null}, 
"1073741891": {kind: 1, offset: 1073741891, typ: NTI11726506, name: "K_F10", len: 0, sons: null}, 
"1073741892": {kind: 1, offset: 1073741892, typ: NTI11726506, name: "K_F11", len: 0, sons: null}, 
"1073741893": {kind: 1, offset: 1073741893, typ: NTI11726506, name: "K_F12", len: 0, sons: null}, 
"1073741894": {kind: 1, offset: 1073741894, typ: NTI11726506, name: "K_PRINTSCREEN", len: 0, sons: null}, 
"1073741895": {kind: 1, offset: 1073741895, typ: NTI11726506, name: "K_SCROLLLOCK", len: 0, sons: null}, 
"1073741896": {kind: 1, offset: 1073741896, typ: NTI11726506, name: "K_PAUSE", len: 0, sons: null}, 
"1073741897": {kind: 1, offset: 1073741897, typ: NTI11726506, name: "K_INSERT", len: 0, sons: null}, 
"1073741898": {kind: 1, offset: 1073741898, typ: NTI11726506, name: "K_HOME", len: 0, sons: null}, 
"1073741899": {kind: 1, offset: 1073741899, typ: NTI11726506, name: "K_PAGEUP", len: 0, sons: null}, 
"1073741901": {kind: 1, offset: 1073741901, typ: NTI11726506, name: "K_END", len: 0, sons: null}, 
"1073741902": {kind: 1, offset: 1073741902, typ: NTI11726506, name: "K_PAGEDOWN", len: 0, sons: null}, 
"1073741903": {kind: 1, offset: 1073741903, typ: NTI11726506, name: "K_RIGHT", len: 0, sons: null}, 
"1073741904": {kind: 1, offset: 1073741904, typ: NTI11726506, name: "K_LEFT", len: 0, sons: null}, 
"1073741905": {kind: 1, offset: 1073741905, typ: NTI11726506, name: "K_DOWN", len: 0, sons: null}, 
"1073741906": {kind: 1, offset: 1073741906, typ: NTI11726506, name: "K_UP", len: 0, sons: null}, 
"1073741907": {kind: 1, offset: 1073741907, typ: NTI11726506, name: "K_NUMLOCKCLEAR", len: 0, sons: null}, 
"1073741908": {kind: 1, offset: 1073741908, typ: NTI11726506, name: "K_KP_DIVIDE", len: 0, sons: null}, 
"1073741909": {kind: 1, offset: 1073741909, typ: NTI11726506, name: "K_KP_MULTIPLY", len: 0, sons: null}, 
"1073741910": {kind: 1, offset: 1073741910, typ: NTI11726506, name: "K_KP_MINUS", len: 0, sons: null}, 
"1073741911": {kind: 1, offset: 1073741911, typ: NTI11726506, name: "K_KP_PLUS", len: 0, sons: null}, 
"1073741912": {kind: 1, offset: 1073741912, typ: NTI11726506, name: "K_KP_ENTER", len: 0, sons: null}, 
"1073741913": {kind: 1, offset: 1073741913, typ: NTI11726506, name: "K_KP_1", len: 0, sons: null}, 
"1073741914": {kind: 1, offset: 1073741914, typ: NTI11726506, name: "K_KP_2", len: 0, sons: null}, 
"1073741915": {kind: 1, offset: 1073741915, typ: NTI11726506, name: "K_KP_3", len: 0, sons: null}, 
"1073741916": {kind: 1, offset: 1073741916, typ: NTI11726506, name: "K_KP_4", len: 0, sons: null}, 
"1073741917": {kind: 1, offset: 1073741917, typ: NTI11726506, name: "K_KP_5", len: 0, sons: null}, 
"1073741918": {kind: 1, offset: 1073741918, typ: NTI11726506, name: "K_KP_6", len: 0, sons: null}, 
"1073741919": {kind: 1, offset: 1073741919, typ: NTI11726506, name: "K_KP_7", len: 0, sons: null}, 
"1073741920": {kind: 1, offset: 1073741920, typ: NTI11726506, name: "K_KP_8", len: 0, sons: null}, 
"1073741921": {kind: 1, offset: 1073741921, typ: NTI11726506, name: "K_KP_9", len: 0, sons: null}, 
"1073741922": {kind: 1, offset: 1073741922, typ: NTI11726506, name: "K_KP_0", len: 0, sons: null}, 
"1073741923": {kind: 1, offset: 1073741923, typ: NTI11726506, name: "K_KP_PERIOD", len: 0, sons: null}, 
"1073741925": {kind: 1, offset: 1073741925, typ: NTI11726506, name: "K_APPLICATION", len: 0, sons: null}, 
"1073741926": {kind: 1, offset: 1073741926, typ: NTI11726506, name: "K_POWER", len: 0, sons: null}, 
"1073741927": {kind: 1, offset: 1073741927, typ: NTI11726506, name: "K_KP_EQUALS", len: 0, sons: null}, 
"1073741928": {kind: 1, offset: 1073741928, typ: NTI11726506, name: "K_F13", len: 0, sons: null}, 
"1073741929": {kind: 1, offset: 1073741929, typ: NTI11726506, name: "K_F14", len: 0, sons: null}, 
"1073741930": {kind: 1, offset: 1073741930, typ: NTI11726506, name: "K_F15", len: 0, sons: null}, 
"1073741931": {kind: 1, offset: 1073741931, typ: NTI11726506, name: "K_F16", len: 0, sons: null}, 
"1073741932": {kind: 1, offset: 1073741932, typ: NTI11726506, name: "K_F17", len: 0, sons: null}, 
"1073741933": {kind: 1, offset: 1073741933, typ: NTI11726506, name: "K_F18", len: 0, sons: null}, 
"1073741934": {kind: 1, offset: 1073741934, typ: NTI11726506, name: "K_F19", len: 0, sons: null}, 
"1073741935": {kind: 1, offset: 1073741935, typ: NTI11726506, name: "K_F20", len: 0, sons: null}, 
"1073741936": {kind: 1, offset: 1073741936, typ: NTI11726506, name: "K_F21", len: 0, sons: null}, 
"1073741937": {kind: 1, offset: 1073741937, typ: NTI11726506, name: "K_F22", len: 0, sons: null}, 
"1073741938": {kind: 1, offset: 1073741938, typ: NTI11726506, name: "K_F23", len: 0, sons: null}, 
"1073741939": {kind: 1, offset: 1073741939, typ: NTI11726506, name: "K_F24", len: 0, sons: null}, 
"1073741940": {kind: 1, offset: 1073741940, typ: NTI11726506, name: "K_EXECUTE", len: 0, sons: null}, 
"1073741941": {kind: 1, offset: 1073741941, typ: NTI11726506, name: "K_HELP", len: 0, sons: null}, 
"1073741942": {kind: 1, offset: 1073741942, typ: NTI11726506, name: "K_MENU", len: 0, sons: null}, 
"1073741943": {kind: 1, offset: 1073741943, typ: NTI11726506, name: "K_SELECT", len: 0, sons: null}, 
"1073741944": {kind: 1, offset: 1073741944, typ: NTI11726506, name: "K_STOP", len: 0, sons: null}, 
"1073741945": {kind: 1, offset: 1073741945, typ: NTI11726506, name: "K_AGAIN", len: 0, sons: null}, 
"1073741946": {kind: 1, offset: 1073741946, typ: NTI11726506, name: "K_UNDO", len: 0, sons: null}, 
"1073741947": {kind: 1, offset: 1073741947, typ: NTI11726506, name: "K_CUT", len: 0, sons: null}, 
"1073741948": {kind: 1, offset: 1073741948, typ: NTI11726506, name: "K_COPY", len: 0, sons: null}, 
"1073741949": {kind: 1, offset: 1073741949, typ: NTI11726506, name: "K_PASTE", len: 0, sons: null}, 
"1073741950": {kind: 1, offset: 1073741950, typ: NTI11726506, name: "K_FIND", len: 0, sons: null}, 
"1073741951": {kind: 1, offset: 1073741951, typ: NTI11726506, name: "K_MUTE", len: 0, sons: null}, 
"1073741952": {kind: 1, offset: 1073741952, typ: NTI11726506, name: "K_VOLUMEUP", len: 0, sons: null}, 
"1073741953": {kind: 1, offset: 1073741953, typ: NTI11726506, name: "K_VOLUMEDOWN", len: 0, sons: null}, 
"1073741957": {kind: 1, offset: 1073741957, typ: NTI11726506, name: "K_KP_COMMA", len: 0, sons: null}, 
"1073741958": {kind: 1, offset: 1073741958, typ: NTI11726506, name: "K_KP_EQUALSAS400", len: 0, sons: null}, 
"1073741977": {kind: 1, offset: 1073741977, typ: NTI11726506, name: "K_ALTERASE", len: 0, sons: null}, 
"1073741978": {kind: 1, offset: 1073741978, typ: NTI11726506, name: "K_SYSREQ", len: 0, sons: null}, 
"1073741979": {kind: 1, offset: 1073741979, typ: NTI11726506, name: "K_CANCEL", len: 0, sons: null}, 
"1073741980": {kind: 1, offset: 1073741980, typ: NTI11726506, name: "K_CLEAR", len: 0, sons: null}, 
"1073741981": {kind: 1, offset: 1073741981, typ: NTI11726506, name: "K_PRIOR", len: 0, sons: null}, 
"1073741982": {kind: 1, offset: 1073741982, typ: NTI11726506, name: "K_RETURN2", len: 0, sons: null}, 
"1073741983": {kind: 1, offset: 1073741983, typ: NTI11726506, name: "K_SEPARATOR", len: 0, sons: null}, 
"1073741984": {kind: 1, offset: 1073741984, typ: NTI11726506, name: "K_OUT", len: 0, sons: null}, 
"1073741985": {kind: 1, offset: 1073741985, typ: NTI11726506, name: "K_OPER", len: 0, sons: null}, 
"1073741986": {kind: 1, offset: 1073741986, typ: NTI11726506, name: "K_CLEARAGAIN", len: 0, sons: null}, 
"1073741987": {kind: 1, offset: 1073741987, typ: NTI11726506, name: "K_CRSEL", len: 0, sons: null}, 
"1073741988": {kind: 1, offset: 1073741988, typ: NTI11726506, name: "K_EXSEL", len: 0, sons: null}, 
"1073742000": {kind: 1, offset: 1073742000, typ: NTI11726506, name: "K_KP_00", len: 0, sons: null}, 
"1073742001": {kind: 1, offset: 1073742001, typ: NTI11726506, name: "K_KP_000", len: 0, sons: null}, 
"1073742002": {kind: 1, offset: 1073742002, typ: NTI11726506, name: "K_THOUSANDSSEPARATOR", len: 0, sons: null}, 
"1073742003": {kind: 1, offset: 1073742003, typ: NTI11726506, name: "K_DECIMALSEPARATOR", len: 0, sons: null}, 
"1073742004": {kind: 1, offset: 1073742004, typ: NTI11726506, name: "K_CURRENCYUNIT", len: 0, sons: null}, 
"1073742005": {kind: 1, offset: 1073742005, typ: NTI11726506, name: "K_CURRENCYSUBUNIT", len: 0, sons: null}, 
"1073742006": {kind: 1, offset: 1073742006, typ: NTI11726506, name: "K_KP_LEFTPAREN", len: 0, sons: null}, 
"1073742007": {kind: 1, offset: 1073742007, typ: NTI11726506, name: "K_KP_RIGHTPAREN", len: 0, sons: null}, 
"1073742008": {kind: 1, offset: 1073742008, typ: NTI11726506, name: "K_KP_LEFTBRACE", len: 0, sons: null}, 
"1073742009": {kind: 1, offset: 1073742009, typ: NTI11726506, name: "K_KP_RIGHTBRACE", len: 0, sons: null}, 
"1073742010": {kind: 1, offset: 1073742010, typ: NTI11726506, name: "K_KP_TAB", len: 0, sons: null}, 
"1073742011": {kind: 1, offset: 1073742011, typ: NTI11726506, name: "K_KP_BACKSPACE", len: 0, sons: null}, 
"1073742012": {kind: 1, offset: 1073742012, typ: NTI11726506, name: "K_KP_A", len: 0, sons: null}, 
"1073742013": {kind: 1, offset: 1073742013, typ: NTI11726506, name: "K_KP_B", len: 0, sons: null}, 
"1073742014": {kind: 1, offset: 1073742014, typ: NTI11726506, name: "K_KP_C", len: 0, sons: null}, 
"1073742015": {kind: 1, offset: 1073742015, typ: NTI11726506, name: "K_KP_D", len: 0, sons: null}, 
"1073742016": {kind: 1, offset: 1073742016, typ: NTI11726506, name: "K_KP_E", len: 0, sons: null}, 
"1073742017": {kind: 1, offset: 1073742017, typ: NTI11726506, name: "K_KP_F", len: 0, sons: null}, 
"1073742018": {kind: 1, offset: 1073742018, typ: NTI11726506, name: "K_KP_XOR", len: 0, sons: null}, 
"1073742019": {kind: 1, offset: 1073742019, typ: NTI11726506, name: "K_KP_POWER", len: 0, sons: null}, 
"1073742020": {kind: 1, offset: 1073742020, typ: NTI11726506, name: "K_KP_PERCENT", len: 0, sons: null}, 
"1073742021": {kind: 1, offset: 1073742021, typ: NTI11726506, name: "K_KP_LESS", len: 0, sons: null}, 
"1073742022": {kind: 1, offset: 1073742022, typ: NTI11726506, name: "K_KP_GREATER", len: 0, sons: null}, 
"1073742023": {kind: 1, offset: 1073742023, typ: NTI11726506, name: "K_KP_AMPERSAND", len: 0, sons: null}, 
"1073742024": {kind: 1, offset: 1073742024, typ: NTI11726506, name: "K_KP_DBLAMPERSAND", len: 0, sons: null}, 
"1073742025": {kind: 1, offset: 1073742025, typ: NTI11726506, name: "K_KP_VERTICALBAR", len: 0, sons: null}, 
"1073742026": {kind: 1, offset: 1073742026, typ: NTI11726506, name: "K_KP_DBLVERTICALBAR", len: 0, sons: null}, 
"1073742027": {kind: 1, offset: 1073742027, typ: NTI11726506, name: "K_KP_COLON", len: 0, sons: null}, 
"1073742028": {kind: 1, offset: 1073742028, typ: NTI11726506, name: "K_KP_HASH", len: 0, sons: null}, 
"1073742029": {kind: 1, offset: 1073742029, typ: NTI11726506, name: "K_KP_SPACE", len: 0, sons: null}, 
"1073742030": {kind: 1, offset: 1073742030, typ: NTI11726506, name: "K_KP_AT", len: 0, sons: null}, 
"1073742031": {kind: 1, offset: 1073742031, typ: NTI11726506, name: "K_KP_EXCLAM", len: 0, sons: null}, 
"1073742032": {kind: 1, offset: 1073742032, typ: NTI11726506, name: "K_KP_MEMSTORE", len: 0, sons: null}, 
"1073742033": {kind: 1, offset: 1073742033, typ: NTI11726506, name: "K_KP_MEMRECALL", len: 0, sons: null}, 
"1073742034": {kind: 1, offset: 1073742034, typ: NTI11726506, name: "K_KP_MEMCLEAR", len: 0, sons: null}, 
"1073742035": {kind: 1, offset: 1073742035, typ: NTI11726506, name: "K_KP_MEMADD", len: 0, sons: null}, 
"1073742036": {kind: 1, offset: 1073742036, typ: NTI11726506, name: "K_KP_MEMSUBTRACT", len: 0, sons: null}, 
"1073742037": {kind: 1, offset: 1073742037, typ: NTI11726506, name: "K_KP_MEMMULTIPLY", len: 0, sons: null}, 
"1073742038": {kind: 1, offset: 1073742038, typ: NTI11726506, name: "K_KP_MEMDIVIDE", len: 0, sons: null}, 
"1073742039": {kind: 1, offset: 1073742039, typ: NTI11726506, name: "K_KP_PLUSMINUS", len: 0, sons: null}, 
"1073742040": {kind: 1, offset: 1073742040, typ: NTI11726506, name: "K_KP_CLEAR", len: 0, sons: null}, 
"1073742041": {kind: 1, offset: 1073742041, typ: NTI11726506, name: "K_KP_CLEARENTRY", len: 0, sons: null}, 
"1073742042": {kind: 1, offset: 1073742042, typ: NTI11726506, name: "K_KP_BINARY", len: 0, sons: null}, 
"1073742043": {kind: 1, offset: 1073742043, typ: NTI11726506, name: "K_KP_OCTAL", len: 0, sons: null}, 
"1073742044": {kind: 1, offset: 1073742044, typ: NTI11726506, name: "K_KP_DECIMAL", len: 0, sons: null}, 
"1073742045": {kind: 1, offset: 1073742045, typ: NTI11726506, name: "K_KP_HEXADECIMAL", len: 0, sons: null}, 
"1073742048": {kind: 1, offset: 1073742048, typ: NTI11726506, name: "K_LCTRL", len: 0, sons: null}, 
"1073742049": {kind: 1, offset: 1073742049, typ: NTI11726506, name: "K_LSHIFT", len: 0, sons: null}, 
"1073742050": {kind: 1, offset: 1073742050, typ: NTI11726506, name: "K_LALT", len: 0, sons: null}, 
"1073742051": {kind: 1, offset: 1073742051, typ: NTI11726506, name: "K_LGUI", len: 0, sons: null}, 
"1073742052": {kind: 1, offset: 1073742052, typ: NTI11726506, name: "K_RCTRL", len: 0, sons: null}, 
"1073742053": {kind: 1, offset: 1073742053, typ: NTI11726506, name: "K_RSHIFT", len: 0, sons: null}, 
"1073742054": {kind: 1, offset: 1073742054, typ: NTI11726506, name: "K_RALT", len: 0, sons: null}, 
"1073742055": {kind: 1, offset: 1073742055, typ: NTI11726506, name: "K_RGUI", len: 0, sons: null}, 
"1073742081": {kind: 1, offset: 1073742081, typ: NTI11726506, name: "K_MODE", len: 0, sons: null}, 
"1073742082": {kind: 1, offset: 1073742082, typ: NTI11726506, name: "K_AUDIONEXT", len: 0, sons: null}, 
"1073742083": {kind: 1, offset: 1073742083, typ: NTI11726506, name: "K_AUDIOPREV", len: 0, sons: null}, 
"1073742084": {kind: 1, offset: 1073742084, typ: NTI11726506, name: "K_AUDIOSTOP", len: 0, sons: null}, 
"1073742085": {kind: 1, offset: 1073742085, typ: NTI11726506, name: "K_AUDIOPLAY", len: 0, sons: null}, 
"1073742086": {kind: 1, offset: 1073742086, typ: NTI11726506, name: "K_AUDIOMUTE", len: 0, sons: null}, 
"1073742087": {kind: 1, offset: 1073742087, typ: NTI11726506, name: "K_MEDIASELECT", len: 0, sons: null}, 
"1073742088": {kind: 1, offset: 1073742088, typ: NTI11726506, name: "K_WWW", len: 0, sons: null}, 
"1073742089": {kind: 1, offset: 1073742089, typ: NTI11726506, name: "K_MAIL", len: 0, sons: null}, 
"1073742090": {kind: 1, offset: 1073742090, typ: NTI11726506, name: "K_CALCULATOR", len: 0, sons: null}, 
"1073742091": {kind: 1, offset: 1073742091, typ: NTI11726506, name: "K_COMPUTER", len: 0, sons: null}, 
"1073742092": {kind: 1, offset: 1073742092, typ: NTI11726506, name: "K_AC_SEARCH", len: 0, sons: null}, 
"1073742093": {kind: 1, offset: 1073742093, typ: NTI11726506, name: "K_AC_HOME", len: 0, sons: null}, 
"1073742094": {kind: 1, offset: 1073742094, typ: NTI11726506, name: "K_AC_BACK", len: 0, sons: null}, 
"1073742095": {kind: 1, offset: 1073742095, typ: NTI11726506, name: "K_AC_FORWARD", len: 0, sons: null}, 
"1073742096": {kind: 1, offset: 1073742096, typ: NTI11726506, name: "K_AC_STOP", len: 0, sons: null}, 
"1073742097": {kind: 1, offset: 1073742097, typ: NTI11726506, name: "K_AC_REFRESH", len: 0, sons: null}, 
"1073742098": {kind: 1, offset: 1073742098, typ: NTI11726506, name: "K_AC_BOOKMARKS", len: 0, sons: null}, 
"1073742099": {kind: 1, offset: 1073742099, typ: NTI11726506, name: "K_BRIGHTNESSDOWN", len: 0, sons: null}, 
"1073742100": {kind: 1, offset: 1073742100, typ: NTI11726506, name: "K_BRIGHTNESSUP", len: 0, sons: null}, 
"1073742101": {kind: 1, offset: 1073742101, typ: NTI11726506, name: "K_DISPLAYSWITCH", len: 0, sons: null}, 
"1073742102": {kind: 1, offset: 1073742102, typ: NTI11726506, name: "K_KBDILLUMTOGGLE", len: 0, sons: null}, 
"1073742103": {kind: 1, offset: 1073742103, typ: NTI11726506, name: "K_KBDILLUMDOWN", len: 0, sons: null}, 
"1073742104": {kind: 1, offset: 1073742104, typ: NTI11726506, name: "K_KBDILLUMUP", len: 0, sons: null}, 
"1073742105": {kind: 1, offset: 1073742105, typ: NTI11726506, name: "K_EJECT", len: 0, sons: null}, 
"1073742106": {kind: 1, offset: 1073742106, typ: NTI11726506, name: "K_SLEEP", len: 0, sons: null}, 
"1073742107": {kind: 1, offset: 1073742107, typ: NTI11726506, name: "K_APP1", len: 0, sons: null}, 
"1073742108": {kind: 1, offset: 1073742108, typ: NTI11726506, name: "K_APP2", len: 0, sons: null}, 
"1073742109": {kind: 1, offset: 1073742109, typ: NTI11726506, name: "K_AUDIOREWIND", len: 0, sons: null}, 
"1073742110": {kind: 1, offset: 1073742110, typ: NTI11726506, name: "K_AUDIOFASTFORWARD", len: 0, sons: null}}};
NTI11726506.node = NNI11726506;
var NNI1194645 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1194645.node = NNI1194645;
var NNI1194643 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1194643.node = NNI1194643;
var NNI1194621 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1194621.node = NNI1194621;
NTI1194621.base = NTI1194617;
NTI1194643.base = NTI1194621;
NTI1194645.base = NTI1194643;
var NNI12571057 = {kind: 2, offset: 0, typ: null, name: null, len: 5, sons: {"0": {kind: 1, offset: 0, typ: NTI12571057, name: "tsStarted", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI12571057, name: "tsHeld", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI12571057, name: "tsMoved", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI12571057, name: "tsEnded", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI12571057, name: "tsCancelled", len: 0, sons: null}}};
NTI12571057.node = NNI12571057;
var NNI12571064 = {kind: 2, len: 10, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "id", len: 0, typ: NTI1188044, name: "id", sons: null}, 
{kind: 1, offset: "x", len: 0, typ: NTI1188044, name: "x", sons: null}, 
{kind: 1, offset: "y", len: 0, typ: NTI1188044, name: "y", sons: null}, 
{kind: 1, offset: "sx", len: 0, typ: NTI1188007, name: "sx", sons: null}, 
{kind: 1, offset: "sy", len: 0, typ: NTI1188007, name: "sy", sons: null}, 
{kind: 1, offset: "xrel", len: 0, typ: NTI1188007, name: "xrel", sons: null}, 
{kind: 1, offset: "yrel", len: 0, typ: NTI1188007, name: "yrel", sons: null}, 
{kind: 1, offset: "xrelraw", len: 0, typ: NTI1188007, name: "xrelraw", sons: null}, 
{kind: 1, offset: "yrelraw", len: 0, typ: NTI1188007, name: "yrelraw", sons: null}, 
{kind: 1, offset: "state", len: 0, typ: NTI12571057, name: "state", sons: null}]};
NTI12571064.node = NNI12571064;
var NNI1194623 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1194623.node = NNI1194623;
NTI1194623.base = NTI1194621;
NTI12936044.base = NTI1188056;
function makeNimstrLit(c_1455062) {
      var ln = c_1455062.length;
  var result = new Array(ln);
  for (var i = 0; i < ln; ++i) {
    result[i] = c_1455062.charCodeAt(i);
  }
  return result;
  

  
}
function toJSStr(s_1455096) {
                    var Tmp5;
            var Tmp7;

  var result_1455097 = null;

    var res_1455170 = newSeq_1455128((s_1455096).length);
    var i_1455172 = 0;
    var j_1455174 = 0;
    L1: do {
        L2: while (true) {
        if (!(i_1455172 < (s_1455096).length)) break L2;
          var c_1455175 = s_1455096[i_1455172];
          if ((c_1455175 < 128)) {
          res_1455170[j_1455174] = String.fromCharCode(c_1455175);
          i_1455172 += 1;
          }
          else {
            var helper_1455198 = newSeq_1455128(0);
            L3: do {
                L4: while (true) {
                if (!true) break L4;
                  var code_1455199 = c_1455175.toString(16);
                  if (((code_1455199).length == 1)) {
                  helper_1455198.push("%0");;
                  }
                  else {
                  helper_1455198.push("%");;
                  }
                  
                  helper_1455198.push(code_1455199);;
                  i_1455172 += 1;
                    if (((s_1455096).length <= i_1455172)) Tmp5 = true; else {                      Tmp5 = (s_1455096[i_1455172] < 128);                    }                  if (Tmp5) {
                  break L3;
                  }
                  
                  c_1455175 = s_1455096[i_1455172];
                }
            } while(false);
++excHandler;
            Tmp7 = framePtr;
            try {
            res_1455170[j_1455174] = decodeURIComponent(helper_1455198.join(""));
--excHandler;
} catch (EXC) {
 var prevJSError = lastJSError;
 lastJSError = EXC;
 --excHandler;
            framePtr = Tmp7;
            res_1455170[j_1455174] = helper_1455198.join("");
            lastJSError = prevJSError;
            } finally {
            framePtr = Tmp7;
            }
          }
          
          j_1455174 += 1;
        }
    } while(false);
    if (res_1455170.length < j_1455174) { for (var i=res_1455170.length;i<j_1455174;++i) res_1455170.push(null); }
               else { res_1455170.length = j_1455174; };
    result_1455097 = res_1455170.join("");

  return result_1455097;

}
function raiseException(e_1420218, ename_1420219) {
    e_1420218.name = ename_1420219;
    if ((excHandler == 0)) {
    unhandledException(e_1420218);
    }
    
    throw e_1420218;

  
}
function addInt(a_1460419, b_1460420) {
        var result = a_1460419 + b_1460420;
    checkOverflowInt(result);
    return result;
  

  
}
function divInt(a_1460473, b_1460474) {
        if (b_1460474 == 0) raiseDivByZero();
    if (b_1460474 == -1 && a_1460473 == 2147483647) raiseOverflow();
    return Math.trunc(a_1460473 / b_1460474);
  

  
}
function mulInt(a_1460455, b_1460456) {
        var result = a_1460455 * b_1460456;
    checkOverflowInt(result);
    return result;
  

  
}
function chckRange(i_1485016, a_1485017, b_1485018) {
      var Tmp1;

  var result_1485019 = 0;

  BeforeRet: do {
      if (!(a_1485017 <= i_1485016)) Tmp1 = false; else {        Tmp1 = (i_1485016 <= b_1485018);      }    if (Tmp1) {
    result_1485019 = i_1485016;
    break BeforeRet;
    }
    else {
    raiseRangeError();
    }
    
  } while (false);

  return result_1485019;

}
function arrayConstr(len_1480067, value_1480068, typ_1480069) {
        var result = new Array(len_1480067);
    for (var i = 0; i < len_1480067; ++i) result[i] = nimCopy(null, value_1480068, typ_1480069);
    return result;
  

  
}
function setConstr() {
        var result = {};
    for (var i = 0; i < arguments.length; ++i) {
      var x = arguments[i];
      if (typeof(x) == "object") {
        for (var j = x[0]; j <= x[1]; ++j) {
          result[j] = true;
        }
      } else {
        result[x] = true;
      }
    }
    return result;
  

  
}
var ConstSet1 = setConstr(17, 16, 4, 18, 27, 19, 23, 22, 21);
function nimCopy(dest_1470023, src_1470024, ti_1470025) {
  var result_1475219 = null;

    switch (ti_1470025.kind) {
    case 21:
    case 22:
    case 23:
    case 5:
      if (!(isFatPointer_1465401(ti_1470025))) {
      result_1475219 = src_1470024;
      }
      else {
        result_1475219 = [src_1470024[0], src_1470024[1]];
      }
      
      break;
    case 19:
            if (dest_1470023 === null || dest_1470023 === undefined) {
        dest_1470023 = {};
      }
      else {
        for (var key in dest_1470023) { delete dest_1470023[key]; }
      }
      for (var key in src_1470024) { dest_1470023[key] = src_1470024[key]; }
      result_1475219 = dest_1470023;
    
      break;
    case 18:
    case 17:
      if (!((ti_1470025.base == null))) {
      result_1475219 = nimCopy(dest_1470023, src_1470024, ti_1470025.base);
      }
      else {
      if ((ti_1470025.kind == 17)) {
      result_1475219 = (dest_1470023 === null || dest_1470023 === undefined) ? {m_type: ti_1470025} : dest_1470023;
      }
      else {
        result_1475219 = (dest_1470023 === null || dest_1470023 === undefined) ? {} : dest_1470023;
      }
      }
      nimCopyAux(result_1475219, src_1470024, ti_1470025.node);
      break;
    case 24:
    case 4:
    case 27:
    case 16:
            if (src_1470024 === null) {
        result_1475219 = null;
      }
      else {
        if (dest_1470023 === null || dest_1470023 === undefined) {
          dest_1470023 = new Array(src_1470024.length);
        }
        else {
          dest_1470023.length = src_1470024.length;
        }
        result_1475219 = dest_1470023;
        for (var i = 0; i < src_1470024.length; ++i) {
          result_1475219[i] = nimCopy(result_1475219[i], src_1470024[i], ti_1470025.base);
        }
      }
    
      break;
    case 28:
            if (src_1470024 !== null) {
        result_1475219 = src_1470024.slice(0);
      }
    
      break;
    default: 
      result_1475219 = src_1470024;
      break;
    }

  return result_1475219;

}
function cstrToNimstr(c_1455079) {
      var ln = c_1455079.length;
  var result = new Array(ln);
  var r = 0;
  for (var i = 0; i < ln; ++i) {
    var ch = c_1455079.charCodeAt(i);

    if (ch < 128) {
      result[r] = ch;
    }
    else {
      if (ch < 2048) {
        result[r] = (ch >> 6) | 192;
      }
      else {
        if (ch < 55296 || ch >= 57344) {
          result[r] = (ch >> 12) | 224;
        }
        else {
            ++i;
            ch = 65536 + (((ch & 1023) << 10) | (c_1455079.charCodeAt(i) & 1023));
            result[r] = (ch >> 18) | 240;
            ++r;
            result[r] = ((ch >> 12) & 63) | 128;
        }
        ++r;
        result[r] = ((ch >> 6) & 63) | 128;
      }
      ++r;
      result[r] = (ch & 63) | 128;
    }
    ++r;
  }
  return result;
  

  
}
function chckIndx(i_1480086, a_1480087, b_1480088) {
      var Tmp1;

  var result_1480089 = 0;

  BeforeRet: do {
      if (!(a_1480087 <= i_1480086)) Tmp1 = false; else {        Tmp1 = (i_1480086 <= b_1480088);      }    if (Tmp1) {
    result_1480089 = i_1480086;
    break BeforeRet;
    }
    else {
    raiseIndexError(i_1480086, a_1480087, b_1480088);
    }
    
  } while (false);

  return result_1480089;

}
function rawEcho() {
          var buf = "";
      for (var i = 0; i < arguments.length; ++i) {
        buf += toJSStr(arguments[i]);
      }
      console.log(buf);
    

  
}
function subInt(a_1460437, b_1460438) {
        var result = a_1460437 - b_1460438;
    checkOverflowInt(result);
    return result;
  

  
}
function reprEnum(e_1545272, typ_1545273) {
  var result_1545274 = [];

    var tmp_1545275 = false;
    var item_1545276 = typ_1545273.node.sons[e_1545272];
    tmp_1545275 = item_1545276 !== undefined
    if (tmp_1545275) {
    result_1545274 = nimCopy(null, makeNimstrLit(item_1545276.name), NTI1188013);
    }
    else {
      result_1545274 = nimCopy(null, (cstrToNimstr((e_1545272)+"") || []).concat(makeNimstrLit(" (invalid data!)") || []), NTI1188013);
    }
    

  return result_1545274;

}
function isObj(obj_1500062, subclass_1500063) {
  var result_1500064 = false;

  BeforeRet: do {
    var x_1500065 = obj_1500062;
    if ((x_1500065 == subclass_1500063)) {
    result_1500064 = true;
    break BeforeRet;
    }
    
    L1: do {
        L2: while (true) {
        if (!!((x_1500065 == subclass_1500063))) break L2;
          if ((x_1500065 == null)) {
          result_1500064 = false;
          break BeforeRet;
          }
          
          x_1500065 = x_1500065.base;
        }
    } while(false);
    result_1500064 = true;
    break BeforeRet;
  } while (false);

  return result_1500064;

}
function reraiseException() {
    if ((lastJSError == null)) {
    raiseException({message: makeNimstrLit("no exception to reraise"), parent: null, m_type: NTI1194657, name: null, trace: [], up: null}, "ReraiseDefect");
    }
    else {
      if ((excHandler == 0)) {
      if (isNimException_1375704()) {
      unhandledException(lastJSError);
      }
      
      }
      
      throw lastJSError;
    }
    

  
}
function mnewString(len_1460044) {
        return new Array(len_1460044);
  

  
}
function nimFloatToString(a_1460649) {
  var result_1460650 = null;

        function nimOnlyDigitsOrMinus(n) {
      return n.toString().match(/^-?\d+$/);
    }
    if (Number.isSafeInteger(a_1460649)) result_1460650 =  a_1460649+".0"
    else {
      result_1460650 = a_1460649+""
      if(nimOnlyDigitsOrMinus(result_1460650)){
        result_1460650 = a_1460649+".0"
      }
    }
  

  return result_1460650;

}
function negInt(a_1460615) {
  var result_1460616 = 0;

    result_1460616 = (a_1460615 * -1);

  return result_1460616;

}
var ConstSet2 = setConstr(13, 10);
function modInt(a_1460491, b_1460492) {
        if (b_1460492 == 0) raiseDivByZero();
    if (b_1460492 == -1 && a_1460491 == 2147483647) raiseOverflow();
    return Math.trunc(a_1460491 % b_1460492);
  

  
}
var ConstSet3 = setConstr(13, 10);
function nimMax(a_1460821, b_1460822) {
    var Tmp1;

  var result_1460823 = 0;

  BeforeRet: do {
    if ((b_1460822 <= a_1460821)) {
    Tmp1 = a_1460821;
    }
    else {
    Tmp1 = b_1460822;
    }
    
    result_1460823 = Tmp1;
    break BeforeRet;
  } while (false);

  return result_1460823;

}
function nimMin(a_1460803, b_1460804) {
    var Tmp1;

  var result_1460805 = 0;

  BeforeRet: do {
    if ((a_1460803 <= b_1460804)) {
    Tmp1 = a_1460803;
    }
    else {
    Tmp1 = b_1460804;
    }
    
    result_1460805 = Tmp1;
    break BeforeRet;
  } while (false);

  return result_1460805;

}
var globalRaiseHook_1357018 = [null];
var localRaiseHook_1357023 = [null];
var outOfMemHook_1357026 = [null];
var unhandledExceptionHook_1357031 = [null];
if (!Math.trunc) {
  Math.trunc = function(v) {
    v = +v;
    if (!isFinite(v)) return v;
    return (v - v % 1) || (v < 0 ? -0 : v === 0 ? v : 0);
  };
}

var objectID_2320031 = [0];
var utcInstance_11155231 = [null];
var localInstance_11155232 = [null];
function nextPowerOfTwo_2285014(x_2285016) {
  var result_2285017 = 0;

    result_2285017 = (x_2285016 - 1);
    result_2285017 = (result_2285017 | (result_2285017 >> 16));
    result_2285017 = (result_2285017 | (result_2285017 >> 8));
    result_2285017 = (result_2285017 | (result_2285017 >> 4));
    result_2285017 = (result_2285017 | (result_2285017 >> 2));
    result_2285017 = (result_2285017 | (result_2285017 >> 1));
    result_2285017 += (1 + ((x_2285016 <= 0) ? 1:0));

  return result_2285017;

}
function add_1357042(x_1357045, x_1357045_Idx, y_1357046) {
          if (x_1357045[x_1357045_Idx] === null) { x_1357045[x_1357045_Idx] = []; }
      var off = x_1357045[x_1357045_Idx].length;
      x_1357045[x_1357045_Idx].length += y_1357046.length;
      for (var i = 0; i < y_1357046.length; ++i) {
        x_1357045[x_1357045_Idx][off+i] = y_1357046.charCodeAt(i);
      }
    

  
}
function newSeq_1455128(len_1455131) {
  var result_1455133 = [];

    result_1455133 = new Array(len_1455131); for (var i=0;i<len_1455131;++i) {result_1455133[i]=null;}
  return result_1455133;

}
function unhandledException(e_1415059) {
    var buf_1415060 = [[]];
    if (!(((e_1415059.message).length == 0))) {
    buf_1415060[0].push.apply(buf_1415060[0], makeNimstrLit("Error: unhandled exception: "));;
    buf_1415060[0].push.apply(buf_1415060[0], e_1415059.message);;
    }
    else {
    buf_1415060[0].push.apply(buf_1415060[0], makeNimstrLit("Error: unhandled exception"));;
    }
    
    buf_1415060[0].push.apply(buf_1415060[0], makeNimstrLit(" ["));;
    add_1357042(buf_1415060, 0, e_1415059.name);
    buf_1415060[0].push.apply(buf_1415060[0], makeNimstrLit("]\x0A"));;
    var cbuf_1420201 = toJSStr(buf_1415060[0]);
    framePtr = null;
      if (typeof(Error) !== "undefined") {
    throw new Error(cbuf_1420201);
  }
  else {
    throw cbuf_1420201;
  }
  

  
}
function raiseOverflow() {
    raiseException({message: makeNimstrLit("over- or underflow"), parent: null, m_type: NTI1194637, name: null, trace: [], up: null}, "OverflowDefect");

  
}
function checkOverflowInt(a_1460403) {
        if (a_1460403 > 2147483647 || a_1460403 < -2147483648) raiseOverflow();
  

  
}
function raiseDivByZero() {
    raiseException({message: makeNimstrLit("division by zero"), parent: null, m_type: NTI1194635, name: null, trace: [], up: null}, "DivByZeroDefect");

  
}
function slotsNeeded_2395048(count_2395050) {
  var result_2395051 = 0;

    result_2395051 = nextPowerOfTwo_2285014(addInt(divInt(mulInt(count_2395050, 3), 2), 4));

  return result_2395051;

}
function raiseRangeError() {
    raiseException({message: makeNimstrLit("value out of range"), parent: null, m_type: NTI1194653, name: null, trace: [], up: null}, "RangeDefect");

  
}
function initTable_12677016(initialSize_12677020) {
  var result_12677036 = ({data: [], counter: 0});

    var correctSizeHEX60gensym0_12680001 = slotsNeeded_2395048(chckRange(initialSize_12677020, 0, 2147483647));
    result_12677036.counter = 0;
    result_12677036.data = new Array(chckRange(correctSizeHEX60gensym0_12680001, 0, 2147483647)); for (var i=0;i<chckRange(correctSizeHEX60gensym0_12680001, 0, 2147483647);++i) {result_12677036.data[i]={Field0: 0, Field1: 0, Field2: 0};}
  return result_12677036;

}
var keysDown_12685629 = [initTable_12677016(32)];
var aKeyWasPressed_12685630 = [false];
var aKeyWasReleased_12685631 = [false];
function isFatPointer_1465401(ti_1465403) {
  var result_1465404 = false;

  BeforeRet: do {
    result_1465404 = !((ConstSet1[ti_1465403.base.kind] != undefined));
    break BeforeRet;
  } while (false);

  return result_1465404;

}
function nimCopyAux(dest_1470028, src_1470029, n_1470031) {
    switch (n_1470031.kind) {
    case 0:
      break;
    case 1:
            dest_1470028[n_1470031.offset] = nimCopy(dest_1470028[n_1470031.offset], src_1470029[n_1470031.offset], n_1470031.typ);
    
      break;
    case 2:
          for (var i = 0; i < n_1470031.sons.length; i++) {
      nimCopyAux(dest_1470028, src_1470029, n_1470031.sons[i]);
    }
    
      break;
    case 3:
            dest_1470028[n_1470031.offset] = nimCopy(dest_1470028[n_1470031.offset], src_1470029[n_1470031.offset], n_1470031.typ);
      for (var i = 0; i < n_1470031.sons.length; ++i) {
        nimCopyAux(dest_1470028, src_1470029, n_1470031.sons[i][1]);
      }
    
      break;
    }

  
}
function toFloat_1216659(i_1216661) {
  var result_1216662 = 0.0;

    result_1216662 = i_1216661;

  return result_1216662;

}
function HEX2F_1555648(x_1555650, y_1555651) {
  var result_1555652 = 0.0;

    result_1555652 = (toFloat_1216659(x_1555650) / toFloat_1216659(y_1555651));

  return result_1555652;

}
function raiseIndexError(i_1440047, a_1440048, b_1440049) {
    var Tmp1;

    if ((b_1440049 < a_1440048)) {
    Tmp1 = makeNimstrLit("index out of bounds, the container is empty");
    }
    else {
    Tmp1 = (makeNimstrLit("index ") || []).concat(cstrToNimstr((i_1440047)+"") || [],makeNimstrLit(" not in ") || [],cstrToNimstr((a_1440048)+"") || [],makeNimstrLit(" .. ") || [],cstrToNimstr((b_1440049)+"") || []);
    }
    
    raiseException({message: nimCopy(null, Tmp1, NTI1188013), parent: null, m_type: NTI1194649, name: null, trace: [], up: null}, "IndexDefect");

  
}
        var Tmp4;
var currentPalette_12755140 = [{Field0: 0, Field1: arrayConstr(256, {Field0: 0, Field1: 0, Field2: 0}, NTI12571080)}];
var touches_12755142 = [[]];
var touchMouseEmulation_12755143 = [false];
var masterVolume_12755144 = [1.0000000000000000e+00];
var sfxVolume_12755145 = [1.0000000000000000e+00];
var musicVolume_12755146 = [1.0000000000000000e+00];
var sampleRate_12755147 = [4.4100000000000000e+04];
var invSampleRate_12755148 = [(1.0000000000000000e+00 / sampleRate_12755147[0])];
var tickFunc_12755151 = [null];
var currentBpm_12755153 = [128];
var currentTpb_12755154 = [4];
var initialized_12755155 = [false];
var running_12755156 = [false];
var keyListeners_12755173 = [[]];
var eventListeners_12755190 = [[]];
var loading_12755191 = [0];
var cursorX_12755193 = [0];
var cursorY_12755195 = [0];
var swCanvas_12755196 = [null];
var stencilBuffer_12755197 = [null];
var stencilMode_12755207 = [0];
var stencilWrite_12755208 = [false];
var stencilRef_12755209 = [0];
var targetScreenWidth_12755212 = [128];
var targetScreenHeight_12755215 = [128];
var fixedScreenSize_12755216 = [true];
var integerScreenScale_12755217 = [false];
var screenWidth_12755220 = [128];
var screenHeight_12755223 = [128];
var screenPaddingX_12755225 = [0];
var screenPaddingY_12755227 = [0];
var keymap_12755232 = [[[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], []]];
var controllerAddedFunc_12755236 = [null];
var controllerRemovedFunc_12755240 = [null];
var controllers_12755242 = [[]];
var focused_12755243 = [true];
var recordSeconds_12755245 = [30];
var fullSpeedGif_12755246 = [true];
var mixerChannels_12755248 = [0];
var gDitherPattern_12755250 = [65535];
var frameRate_12755252 = [60];
var timeStep_12755253 = [HEX2F_1555648(1, frameRate_12755252[0])];
var frameMult_12755255 = [1];
var basePath_12755256 = [[]];
var assetPath_12755257 = [[]];
var writePath_12755258 = [[]];
var screenScale_12755259 = [4.0000000000000000e+00];
var spritesheets_12755263 = [[null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]];
var spritesheet_12755264 = [null];
var tilemaps_12755268 = [[({data: [], w: 0, h: 0, hex: false, hexOffset: 0, tw: 0, th: 0}), ({data: [], w: 0, h: 0, hex: false, hexOffset: 0, tw: 0, th: 0}), ({data: [], w: 0, h: 0, hex: false, hexOffset: 0, tw: 0, th: 0}), ({data: [], w: 0, h: 0, hex: false, hexOffset: 0, tw: 0, th: 0}), ({data: [], w: 0, h: 0, hex: false, hexOffset: 0, tw: 0, th: 0}), ({data: [], w: 0, h: 0, hex: false, hexOffset: 0, tw: 0, th: 0}), ({data: [], w: 0, h: 0, hex: false, hexOffset: 0, tw: 0, th: 0}), ({data: [], w: 0, h: 0, hex: false, hexOffset: 0, tw: 0, th: 0}), ({data: [], w: 0, h: 0, hex: false, hexOffset: 0, tw: 0, th: 0}), ({data: [], w: 0, h: 0, hex: false, hexOffset: 0, tw: 0, th: 0}), ({data: [], w: 0, h: 0, hex: false, hexOffset: 0, tw: 0, th: 0}), ({data: [], w: 0, h: 0, hex: false, hexOffset: 0, tw: 0, th: 0}), ({data: [], w: 0, h: 0, hex: false, hexOffset: 0, tw: 0, th: 0}), ({data: [], w: 0, h: 0, hex: false, hexOffset: 0, tw: 0, th: 0}), ({data: [], w: 0, h: 0, hex: false, hexOffset: 0, tw: 0, th: 0}), ({data: [], w: 0, h: 0, hex: false, hexOffset: 0, tw: 0, th: 0})]];
var currentTilemap_12755270 = [null];
var initFunc_12755273 = [null];
var updateFunc_12755277 = [null];
var drawFunc_12755280 = [null];
var textFunc_12755284 = [null];
var resizeFuncs_12755286 = [[]];
var fonts_12755290 = [[null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]];
var currentFont_12755291 = [null];
var currentFontId_12755292 = [0];
var frame_12755294 = [0];
var cameraX_12755295 = [0];
var cameraY_12755296 = [0];
var paletteMapDraw_12755300 = [new Int32Array(256)];
var paletteMapDisplay_12755304 = [new Int32Array(256)];
var paletteTransparent_12755308 = [arrayConstr(256, false, NTI1188064)];
L1: do {
  var i_12755317 = [0];
  var i_12755717 = 0;
  L2: do {
      L3: while (true) {
      if (!(i_12755717 < 256)) break L3;
        i_12755317[0] = i_12755717;
        paletteMapDraw_12755300[0][chckIndx(i_12755317[0], 0, (paletteMapDraw_12755300[0]).length-1)] = i_12755317[0];
        paletteMapDisplay_12755304[0][chckIndx(i_12755317[0], 0, (paletteMapDisplay_12755304[0]).length-1)] = i_12755317[0];
        if ((i_12755317[0] == 0)) {
        Tmp4 = true;
        }
        else {
        Tmp4 = false;
        }
        
        paletteTransparent_12755308[0][chckIndx(i_12755317[0], 0, (paletteTransparent_12755308[0]).length-1)] = Tmp4;
        i_12755717 = addInt(i_12755717, 1);
      }
  } while(false);
} while(false);
var currentColor_12755318 = [0];
var keepRunning_12755319 = [true];
var muteAudio_12755320 = [false];
var currentMusicId_12755332 = [-1];
var clipMinX_12755333 = [0];
var clipMaxX_12755334 = [0];
var clipMinY_12755335 = [0];
var clipMaxY_12755336 = [0];
var clippingRect_12755337 = [{Field0: 0, Field1: 0, Field2: 0, Field3: 0}];
var mouseDetected_12755338 = [false];
var mouseX_12755339 = [0];
var mouseY_12755340 = [0];
var mouseRawX_12755341 = [0];
var mouseRawY_12755342 = [0];
var mouseRelX_12755343 = [0.0];
var mouseRelY_12755344 = [0.0];
var lastMouseX_12755345 = [0];
var lastMouseY_12755346 = [0];
var lastMouseRawX_12755347 = [0];
var lastMouseRawY_12755348 = [0];
var mouseButtonsDown_12755352 = [[false, false, false]];
var mouseButtons_12755356 = [new Int32Array(3)];
var mouseWheelState_12755357 = [0];
function newSeq_12795123(len_12795126) {
  var result_12795128 = [];

    result_12795128 = new Array(len_12795126); for (var i=0;i<len_12795126;++i) {result_12795128[i]=({name: [], start: ({seconds: 0, nanosecond: 0}), time: 0, count: 0, parent: null, children: []});}
  return result_12795128;

}
function newRingBuffer_12795107(length_12795110) {
  var result_12795121 = ({data: [], head: 0, tail: 0, size: 0, length: 0});

    var s_12795179 = newSeq_12795123(chckRange(length_12795110, 0, 2147483647));
    nimCopy(result_12795121, {data: nimCopy(null, s_12795179, NTI12795127), head: 0, tail: -1, size: 0, length: length_12795110}, NTI12795113);

  return result_12795121;

}
var profileCollect_12795105 = [true];
var profileHistory_12795224 = [newRingBuffer_12795107(256)];
var AudioContext = window.AudioContext || window.webkitAudioContext || null;

var ctx_14332014 = [null];
var swCanvas32_14332015 = [null];
var canvas_14332016 = [null];
var interval_14332018 = [null];
var audioContext_14332019 = [null];
var noiseBuffer_14332020 = [null];
var noiseBuffer2_14332021 = [null];
var audioChannels_14332102 = [[({kind: 0, source: null, callback: null, musicId: 0, loop: 0, phase: 0.0, freq: 0.0, basefreq: 0.0, targetFreq: 0.0, width: 0.0, pan: 0.0, shape: 0, gain: null, synthData: {Field0: 0, Field1: [{Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}], Field2: 0, Field3: 0}, synthDataIndex: 0, init: 0, env: 0, envValue: 0.0, envPhase: 0, length: 0, vibspeed: 0, vibamount: 0, glide: 0, pchange: 0, trigger: false, lfsr: 0, lfsr2: 0, nextClick: 0, outvalue: 0.0, priority: 0.0, wavData: new Uint8Array(32)}), ({kind: 0, source: null, callback: null, musicId: 0, loop: 0, phase: 0.0, freq: 0.0, basefreq: 0.0, targetFreq: 0.0, width: 0.0, pan: 0.0, shape: 0, gain: null, synthData: {Field0: 0, Field1: [{Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}], Field2: 0, Field3: 0}, synthDataIndex: 0, init: 0, env: 0, envValue: 0.0, envPhase: 0, length: 0, vibspeed: 0, vibamount: 0, glide: 0, pchange: 0, trigger: false, lfsr: 0, lfsr2: 0, nextClick: 0, outvalue: 0.0, priority: 0.0, wavData: new Uint8Array(32)}), ({kind: 0, source: null, callback: null, musicId: 0, loop: 0, phase: 0.0, freq: 0.0, basefreq: 0.0, targetFreq: 0.0, width: 0.0, pan: 0.0, shape: 0, gain: null, synthData: {Field0: 0, Field1: [{Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}], Field2: 0, Field3: 0}, synthDataIndex: 0, init: 0, env: 0, envValue: 0.0, envPhase: 0, length: 0, vibspeed: 0, vibamount: 0, glide: 0, pchange: 0, trigger: false, lfsr: 0, lfsr2: 0, nextClick: 0, outvalue: 0.0, priority: 0.0, wavData: new Uint8Array(32)}), ({kind: 0, source: null, callback: null, musicId: 0, loop: 0, phase: 0.0, freq: 0.0, basefreq: 0.0, targetFreq: 0.0, width: 0.0, pan: 0.0, shape: 0, gain: null, synthData: {Field0: 0, Field1: [{Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}], Field2: 0, Field3: 0}, synthDataIndex: 0, init: 0, env: 0, envValue: 0.0, envPhase: 0, length: 0, vibspeed: 0, vibamount: 0, glide: 0, pchange: 0, trigger: false, lfsr: 0, lfsr2: 0, nextClick: 0, outvalue: 0.0, priority: 0.0, wavData: new Uint8Array(32)}), ({kind: 0, source: null, callback: null, musicId: 0, loop: 0, phase: 0.0, freq: 0.0, basefreq: 0.0, targetFreq: 0.0, width: 0.0, pan: 0.0, shape: 0, gain: null, synthData: {Field0: 0, Field1: [{Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}], Field2: 0, Field3: 0}, synthDataIndex: 0, init: 0, env: 0, envValue: 0.0, envPhase: 0, length: 0, vibspeed: 0, vibamount: 0, glide: 0, pchange: 0, trigger: false, lfsr: 0, lfsr2: 0, nextClick: 0, outvalue: 0.0, priority: 0.0, wavData: new Uint8Array(32)}), ({kind: 0, source: null, callback: null, musicId: 0, loop: 0, phase: 0.0, freq: 0.0, basefreq: 0.0, targetFreq: 0.0, width: 0.0, pan: 0.0, shape: 0, gain: null, synthData: {Field0: 0, Field1: [{Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}], Field2: 0, Field3: 0}, synthDataIndex: 0, init: 0, env: 0, envValue: 0.0, envPhase: 0, length: 0, vibspeed: 0, vibamount: 0, glide: 0, pchange: 0, trigger: false, lfsr: 0, lfsr2: 0, nextClick: 0, outvalue: 0.0, priority: 0.0, wavData: new Uint8Array(32)}), ({kind: 0, source: null, callback: null, musicId: 0, loop: 0, phase: 0.0, freq: 0.0, basefreq: 0.0, targetFreq: 0.0, width: 0.0, pan: 0.0, shape: 0, gain: null, synthData: {Field0: 0, Field1: [{Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}], Field2: 0, Field3: 0}, synthDataIndex: 0, init: 0, env: 0, envValue: 0.0, envPhase: 0, length: 0, vibspeed: 0, vibamount: 0, glide: 0, pchange: 0, trigger: false, lfsr: 0, lfsr2: 0, nextClick: 0, outvalue: 0.0, priority: 0.0, wavData: new Uint8Array(32)}), ({kind: 0, source: null, callback: null, musicId: 0, loop: 0, phase: 0.0, freq: 0.0, basefreq: 0.0, targetFreq: 0.0, width: 0.0, pan: 0.0, shape: 0, gain: null, synthData: {Field0: 0, Field1: [{Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}], Field2: 0, Field3: 0}, synthDataIndex: 0, init: 0, env: 0, envValue: 0.0, envPhase: 0, length: 0, vibspeed: 0, vibamount: 0, glide: 0, pchange: 0, trigger: false, lfsr: 0, lfsr2: 0, nextClick: 0, outvalue: 0.0, priority: 0.0, wavData: new Uint8Array(32)}), ({kind: 0, source: null, callback: null, musicId: 0, loop: 0, phase: 0.0, freq: 0.0, basefreq: 0.0, targetFreq: 0.0, width: 0.0, pan: 0.0, shape: 0, gain: null, synthData: {Field0: 0, Field1: [{Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}], Field2: 0, Field3: 0}, synthDataIndex: 0, init: 0, env: 0, envValue: 0.0, envPhase: 0, length: 0, vibspeed: 0, vibamount: 0, glide: 0, pchange: 0, trigger: false, lfsr: 0, lfsr2: 0, nextClick: 0, outvalue: 0.0, priority: 0.0, wavData: new Uint8Array(32)}), ({kind: 0, source: null, callback: null, musicId: 0, loop: 0, phase: 0.0, freq: 0.0, basefreq: 0.0, targetFreq: 0.0, width: 0.0, pan: 0.0, shape: 0, gain: null, synthData: {Field0: 0, Field1: [{Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}], Field2: 0, Field3: 0}, synthDataIndex: 0, init: 0, env: 0, envValue: 0.0, envPhase: 0, length: 0, vibspeed: 0, vibamount: 0, glide: 0, pchange: 0, trigger: false, lfsr: 0, lfsr2: 0, nextClick: 0, outvalue: 0.0, priority: 0.0, wavData: new Uint8Array(32)}), ({kind: 0, source: null, callback: null, musicId: 0, loop: 0, phase: 0.0, freq: 0.0, basefreq: 0.0, targetFreq: 0.0, width: 0.0, pan: 0.0, shape: 0, gain: null, synthData: {Field0: 0, Field1: [{Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}], Field2: 0, Field3: 0}, synthDataIndex: 0, init: 0, env: 0, envValue: 0.0, envPhase: 0, length: 0, vibspeed: 0, vibamount: 0, glide: 0, pchange: 0, trigger: false, lfsr: 0, lfsr2: 0, nextClick: 0, outvalue: 0.0, priority: 0.0, wavData: new Uint8Array(32)}), ({kind: 0, source: null, callback: null, musicId: 0, loop: 0, phase: 0.0, freq: 0.0, basefreq: 0.0, targetFreq: 0.0, width: 0.0, pan: 0.0, shape: 0, gain: null, synthData: {Field0: 0, Field1: [{Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}], Field2: 0, Field3: 0}, synthDataIndex: 0, init: 0, env: 0, envValue: 0.0, envPhase: 0, length: 0, vibspeed: 0, vibamount: 0, glide: 0, pchange: 0, trigger: false, lfsr: 0, lfsr2: 0, nextClick: 0, outvalue: 0.0, priority: 0.0, wavData: new Uint8Array(32)}), ({kind: 0, source: null, callback: null, musicId: 0, loop: 0, phase: 0.0, freq: 0.0, basefreq: 0.0, targetFreq: 0.0, width: 0.0, pan: 0.0, shape: 0, gain: null, synthData: {Field0: 0, Field1: [{Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}], Field2: 0, Field3: 0}, synthDataIndex: 0, init: 0, env: 0, envValue: 0.0, envPhase: 0, length: 0, vibspeed: 0, vibamount: 0, glide: 0, pchange: 0, trigger: false, lfsr: 0, lfsr2: 0, nextClick: 0, outvalue: 0.0, priority: 0.0, wavData: new Uint8Array(32)}), ({kind: 0, source: null, callback: null, musicId: 0, loop: 0, phase: 0.0, freq: 0.0, basefreq: 0.0, targetFreq: 0.0, width: 0.0, pan: 0.0, shape: 0, gain: null, synthData: {Field0: 0, Field1: [{Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}], Field2: 0, Field3: 0}, synthDataIndex: 0, init: 0, env: 0, envValue: 0.0, envPhase: 0, length: 0, vibspeed: 0, vibamount: 0, glide: 0, pchange: 0, trigger: false, lfsr: 0, lfsr2: 0, nextClick: 0, outvalue: 0.0, priority: 0.0, wavData: new Uint8Array(32)}), ({kind: 0, source: null, callback: null, musicId: 0, loop: 0, phase: 0.0, freq: 0.0, basefreq: 0.0, targetFreq: 0.0, width: 0.0, pan: 0.0, shape: 0, gain: null, synthData: {Field0: 0, Field1: [{Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}], Field2: 0, Field3: 0}, synthDataIndex: 0, init: 0, env: 0, envValue: 0.0, envPhase: 0, length: 0, vibspeed: 0, vibamount: 0, glide: 0, pchange: 0, trigger: false, lfsr: 0, lfsr2: 0, nextClick: 0, outvalue: 0.0, priority: 0.0, wavData: new Uint8Array(32)}), ({kind: 0, source: null, callback: null, musicId: 0, loop: 0, phase: 0.0, freq: 0.0, basefreq: 0.0, targetFreq: 0.0, width: 0.0, pan: 0.0, shape: 0, gain: null, synthData: {Field0: 0, Field1: [{Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}], Field2: 0, Field3: 0}, synthDataIndex: 0, init: 0, env: 0, envValue: 0.0, envPhase: 0, length: 0, vibspeed: 0, vibamount: 0, glide: 0, pchange: 0, trigger: false, lfsr: 0, lfsr2: 0, nextClick: 0, outvalue: 0.0, priority: 0.0, wavData: new Uint8Array(32)})]];
var tickFunc_14332105 = [null];
var currentBpm_14335033 = [128];
var currentTpb_14335034 = [4];
var sfxData_14335038 = [arrayConstr(64, null, NTI14331086)];
var musicData_14335042 = [arrayConstr(64, null, NTI14331086)];
var currentMusic_14335043 = [null];
var sfxGain_14335044 = [null];
var musicGain_14335045 = [null];
var masterGain_14335046 = [null];
nimCopy(keymap_12755232[0], [[37, 65], [39, 68], [38, 87], [40, 83], [90, 78], [88, 77], [67, 72], [86, 74], [70], [71], [72], [86], [66], [78], [13, 32], [27, 8]], NTI14335047);
var requestedFullscreen_14345291 = [false];
function clearSaveData() {
    window.localStorage.clear();

  
}
function mute() {
  BeforeRet: do {
    if ((audioContext_14332019[0] == null)) {
    break BeforeRet;
    }
    
    if (!((masterGain_14335046[0].gain.value == 0.0))) {
    rawEcho(makeNimstrLit("muting audio"));
    masterGain_14335046[0].gain.value = 0.0;
    }
    else {
      rawEcho(makeNimstrLit("unmuting audio"));
      masterGain_14335046[0].gain.value = 1.0000000000000000e+00;
    }
    
  } while (false);

  
}
var state_14713405 = [{a0: 1773455756, a1: 4275166512}];
clipMaxX_12755334[0] = subInt(screenWidth_12755220[0], 1);
clipMaxY_12755336[0] = subInt(screenHeight_12755223[0], 1);
var ditherColor_15065339 = [-1];
var defaultFontSurface_16150071 = {w: 381, h: 8, channels: 1, tw: 4, th: 4, filename: [], data: [2, 0, 0, 0, 2, 0, 1, 0, 2, 1, 0, 1, 2, 1, 0, 1, 2, 1, 1, 1, 2, 1, 0, 1, 2, 1, 1, 0, 2, 0, 1, 0, 2, 0, 1, 0, 2, 0, 1, 0, 2, 1, 0, 1, 2, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 1, 2, 1, 1, 1, 2, 1, 1, 0, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 0, 1, 2, 1, 1, 1, 2, 1, 0, 0, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 2, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 1, 2, 0, 0, 0, 2, 1, 0, 0, 2, 1, 1, 1, 2, 1, 1, 1, 2, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 2, 1, 1, 0, 2, 1, 0, 0, 2, 0, 1, 1, 2, 0, 1, 0, 2, 0, 0, 0, 2, 0, 1, 0, 2, 1, 1, 1, 2, 1, 1, 0, 2, 0, 1, 1, 2, 1, 1, 0, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 0, 1, 2, 1, 1, 1, 2, 0, 0, 1, 2, 1, 0, 1, 2, 1, 0, 0, 2, 1, 1, 1, 2, 1, 1, 0, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 2, 0, 1, 1, 2, 1, 1, 1, 2, 1, 0, 1, 2, 1, 0, 1, 2, 1, 0, 1, 2, 1, 0, 1, 2, 1, 0, 1, 2, 1, 1, 1, 2, 0, 1, 1, 2, 1, 1, 0, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 0, 0, 0, 2, 0, 1, 0, 2, 1, 0, 1, 2, 1, 1, 1, 2, 1, 1, 0, 2, 0, 0, 1, 2, 1, 1, 0, 2, 1, 0, 0, 2, 1, 0, 0, 2, 0, 0, 1, 2, 0, 1, 0, 2, 0, 1, 0, 2, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 2, 0, 1, 0, 2, 1, 0, 1, 2, 0, 1, 0, 2, 0, 0, 1, 2, 0, 0, 1, 2, 1, 0, 1, 2, 1, 0, 0, 2, 1, 0, 0, 2, 0, 0, 1, 2, 1, 0, 1, 2, 1, 0, 1, 2, 0, 1, 0, 2, 0, 1, 0, 2, 0, 1, 0, 2, 1, 1, 1, 2, 0, 1, 0, 2, 0, 0, 1, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 0, 2, 1, 1, 1, 2, 1, 1, 0, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 0, 1, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 0, 1, 2, 1, 0, 0, 2, 1, 1, 1, 2, 1, 1, 0, 2, 0, 1, 1, 2, 1, 1, 1, 2, 0, 1, 0, 2, 1, 1, 1, 2, 0, 1, 1, 2, 1, 1, 1, 2, 1, 0, 1, 2, 1, 0, 1, 2, 1, 0, 1, 2, 1, 0, 1, 2, 1, 0, 1, 2, 1, 1, 1, 2, 1, 0, 0, 2, 0, 1, 0, 2, 0, 0, 1, 2, 1, 0, 1, 2, 0, 0, 0, 2, 0, 0, 1, 2, 1, 0, 1, 2, 1, 0, 1, 2, 1, 0, 0, 2, 1, 0, 1, 2, 1, 0, 0, 2, 1, 0, 0, 2, 1, 0, 0, 2, 1, 0, 1, 2, 0, 1, 0, 2, 0, 0, 1, 2, 1, 0, 1, 2, 1, 0, 0, 2, 1, 1, 1, 2, 1, 0, 1, 2, 1, 0, 1, 2, 1, 0, 1, 2, 1, 0, 1, 2, 1, 0, 1, 2, 1, 0, 0, 2, 0, 1, 0, 2, 1, 0, 1, 2, 1, 0, 1, 2, 1, 0, 1, 2, 1, 0, 1, 2, 1, 0, 1, 2, 0, 0, 1, 2, 0, 1, 0, 2, 0, 1, 0, 2, 0, 0, 1, 2, 2, 2, 2, 2, 2, 0, 0, 0, 2, 0, 1, 0, 2, 0, 0, 0, 2, 1, 0, 1, 2, 1, 1, 1, 2, 0, 1, 0, 2, 1, 1, 0, 2, 0, 0, 0, 2, 1, 0, 0, 2, 0, 0, 1, 2, 1, 1, 1, 2, 1, 1, 1, 2, 0, 0, 0, 2, 1, 1, 1, 2, 0, 0, 0, 2, 0, 1, 0, 2, 1, 0, 1, 2, 0, 1, 0, 2, 1, 1, 1, 2, 0, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 2, 0, 0, 1, 2, 1, 1, 1, 2, 1, 1, 1, 2, 0, 0, 0, 2, 0, 0, 0, 2, 1, 0, 0, 2, 0, 0, 0, 2, 0, 0, 1, 2, 0, 1, 1, 2, 1, 1, 1, 2, 1, 0, 1, 2, 1, 1, 0, 2, 1, 0, 0, 2, 1, 0, 1, 2, 1, 1, 0, 2, 1, 1, 0, 2, 1, 0, 0, 2, 1, 0, 1, 2, 0, 1, 0, 2, 0, 1, 0, 2, 1, 1, 0, 2, 1, 0, 0, 2, 1, 1, 1, 2, 1, 0, 1, 2, 1, 0, 1, 2, 1, 0, 1, 2, 1, 0, 1, 2, 1, 0, 1, 2, 1, 0, 0, 2, 0, 1, 0, 2, 1, 0, 1, 2, 1, 0, 1, 2, 1, 0, 1, 2, 0, 1, 0, 2, 1, 1, 1, 2, 0, 0, 1, 2, 1, 0, 0, 2, 0, 1, 0, 2, 0, 0, 1, 2, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 0, 0, 2, 1, 0, 1, 2, 1, 1, 0, 2, 1, 1, 0, 2, 1, 0, 1, 2, 1, 1, 1, 2, 0, 1, 0, 2, 0, 0, 1, 2, 1, 1, 0, 2, 1, 0, 0, 2, 1, 0, 1, 2, 1, 0, 1, 2, 1, 0, 1, 2, 1, 1, 1, 2, 1, 0, 1, 2, 1, 1, 0, 2, 1, 1, 1, 2, 0, 1, 0, 2, 1, 0, 1, 2, 1, 0, 1, 2, 1, 1, 1, 2, 0, 1, 0, 2, 1, 1, 1, 2, 0, 1, 0, 2, 1, 1, 0, 2, 0, 1, 1, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 2, 1, 1, 1, 2, 0, 1, 1, 2, 1, 0, 0, 2, 1, 0, 1, 2, 0, 0, 0, 2, 1, 0, 0, 2, 0, 0, 1, 2, 0, 1, 0, 2, 0, 1, 0, 2, 0, 1, 0, 2, 0, 0, 0, 2, 0, 0, 0, 2, 0, 1, 0, 2, 1, 0, 1, 2, 0, 1, 0, 2, 1, 0, 0, 2, 0, 0, 1, 2, 0, 0, 1, 2, 0, 0, 1, 2, 1, 0, 1, 2, 0, 0, 1, 2, 1, 0, 1, 2, 0, 0, 1, 2, 0, 1, 0, 2, 0, 1, 0, 2, 0, 1, 0, 2, 1, 1, 1, 2, 0, 1, 0, 2, 0, 0, 0, 2, 1, 0, 0, 2, 1, 1, 1, 2, 1, 0, 1, 2, 1, 0, 0, 2, 1, 0, 1, 2, 1, 0, 0, 2, 1, 0, 0, 2, 1, 0, 1, 2, 1, 1, 1, 2, 0, 1, 0, 2, 0, 1, 0, 2, 1, 0, 1, 2, 1, 0, 0, 2, 1, 0, 1, 2, 1, 0, 1, 2, 1, 0, 1, 2, 1, 1, 1, 2, 1, 1, 0, 2, 1, 1, 0, 2, 0, 0, 1, 2, 0, 1, 0, 2, 1, 0, 1, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 0, 1, 2, 0, 0, 1, 2, 1, 0, 0, 2, 1, 0, 0, 2, 0, 1, 0, 2, 0, 0, 1, 2, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 2, 1, 0, 1, 2, 1, 0, 1, 2, 1, 0, 0, 2, 1, 0, 1, 2, 1, 0, 0, 2, 1, 0, 0, 2, 1, 0, 1, 2, 1, 0, 1, 2, 0, 1, 0, 2, 0, 0, 1, 2, 1, 0, 1, 2, 1, 0, 0, 2, 1, 0, 1, 2, 1, 0, 1, 2, 1, 0, 1, 2, 1, 0, 0, 2, 1, 1, 0, 2, 1, 0, 1, 2, 0, 0, 1, 2, 0, 1, 0, 2, 1, 0, 1, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 0, 1, 2, 0, 0, 1, 2, 1, 0, 0, 2, 0, 1, 0, 2, 0, 1, 0, 2, 1, 0, 0, 2, 2, 2, 2, 2, 2, 0, 0, 0, 2, 0, 1, 0, 2, 0, 0, 0, 2, 1, 0, 1, 2, 1, 1, 1, 2, 1, 0, 1, 2, 1, 1, 1, 2, 0, 0, 0, 2, 0, 1, 0, 2, 0, 1, 0, 2, 1, 0, 1, 2, 0, 0, 0, 2, 1, 0, 0, 2, 0, 0, 0, 2, 0, 1, 0, 2, 1, 0, 0, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 2, 0, 0, 1, 2, 1, 1, 1, 2, 1, 1, 1, 2, 0, 0, 1, 2, 1, 1, 1, 2, 0, 0, 1, 2, 0, 0, 0, 2, 1, 0, 0, 2, 0, 0, 1, 2, 0, 0, 0, 2, 1, 0, 0, 2, 0, 1, 0, 2, 1, 1, 1, 2, 1, 0, 1, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 0, 2, 1, 1, 1, 2, 1, 0, 0, 2, 1, 1, 1, 2, 1, 0, 1, 2, 1, 1, 1, 2, 1, 1, 0, 2, 1, 0, 1, 2, 1, 1, 1, 2, 1, 0, 1, 2, 1, 0, 1, 2, 1, 1, 0, 2, 1, 0, 0, 2, 0, 1, 1, 2, 1, 0, 1, 2, 1, 1, 0, 2, 0, 1, 0, 2, 0, 1, 1, 2, 0, 1, 0, 2, 1, 1, 1, 2, 1, 0, 1, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 0, 2, 0, 0, 1, 2, 0, 1, 1, 2, 0, 0, 0, 2, 1, 1, 1, 2, 0, 0, 0, 2, 1, 0, 1, 2, 1, 1, 1, 2, 0, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 0, 0, 2, 1, 1, 1, 2, 1, 0, 1, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 0, 1, 2, 1, 1, 1, 2, 1, 0, 1, 2, 1, 0, 1, 2, 1, 1, 1, 2, 1, 0, 0, 2, 0, 1, 1, 2, 1, 0, 1, 2, 1, 1, 0, 2, 0, 1, 0, 2, 1, 1, 1, 2, 0, 1, 0, 2, 1, 0, 1, 2, 1, 0, 1, 2, 1, 1, 1, 2, 1, 1, 1, 2, 0, 1, 1, 2, 1, 1, 0, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], spriteFlags: []};
var mapFilterFlags_16380022 = [0];
var buttonDown_16506014 = [false];
function newSeq_14605077(len_14605080) {
  var result_14605082 = [];

    result_14605082 = new Array(len_14605080); for (var i=0;i<len_14605080;++i) {result_14605082[i]=null;}
  return result_14605082;

}
function new_12571272() {
  var result_12571276 = null;

  BeforeRet: do {
    var r_12571401 = null;
    r_12571401 = ({kind: 0, name: [], id: 0, axes: [{Field0: 0.0, Field1: 0.0, Field2: 0}, {Field0: 0.0, Field1: 0.0, Field2: 0}, {Field0: 0.0, Field1: 0.0, Field2: 0}, {Field0: 0.0, Field1: 0.0, Field2: 0}, {Field0: 0.0, Field1: 0.0, Field2: 0}, {Field0: 0.0, Field1: 0.0, Field2: 0}], buttons: new Int32Array(16), deadzone: 0.0, invertX: false, invertY: false, useRightStick: false});
    result_12571276 = r_12571401;
    break BeforeRet;
  } while (false);

  return result_12571276;

}
function newNicoController_12571267(id_12571269) {
  var result_12571270 = null;

    result_12571270 = new_12571272();
    result_12571270.id = ((id_12571269)|0);
    if ((-1 < id_12571269)) {
    result_12571270.kind = 1;
    result_12571270.deadzone = 5.0000000000000000e-01;
    }
    else {
      result_12571270.kind = 0;
      result_12571270.name = nimCopy(null, makeNimstrLit("KEYBOARD"), NTI1188013);
    }
    
    rawEcho(makeNimstrLit("added game controller: "), cstrToNimstr((((id_12571269)|0))+""), makeNimstrLit(": "), reprEnum(result_12571270.kind, NTI12571202), makeNimstrLit(": "), result_12571270.name);

  return result_12571270;

}
function isNimException_1375704() {
    return lastJSError && lastJSError.m_type;

  
}
function init_14605070(org_14605072, app_14605073) {
    var Tmp2;

    basePath_12755256[0] = nimCopy(null, [], NTI1188013);
    assetPath_12755257[0] = nimCopy(null, makeNimstrLit("assets/"), NTI1188013);
    writePath_12755258[0] = nimCopy(null, [], NTI1188013);
    controllers_12755242[0] = nimCopy(null, newSeq_14605077(0), NTI14605081);
    controllers_12755242[0].push(newNicoController_12571267(-1));;
++excHandler;
    Tmp2 = framePtr;
    try {
    audioContext_14332019[0] = new AudioContext();
--excHandler;
} catch (EXC) {
 var prevJSError = lastJSError;
 lastJSError = EXC;
 --excHandler;
    framePtr = Tmp2;
    if (lastJSError && (lastJSError instanceof TypeError)) {
    audioContext_14332019[0] = null;
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    framePtr = Tmp2;
    }
    if (!((audioContext_14332019[0] == null))) {
    rawEcho(makeNimstrLit("audioContext established"));
    sfxGain_14335044[0] = audioContext_14332019[0].createGain();
    sfxGain_14335044[0].gain.value = 1.0000000000000000e+00;
    musicGain_14335045[0] = audioContext_14332019[0].createGain();
    musicGain_14335045[0].gain.value = 1.0000000000000000e+00;
    masterGain_14335046[0] = audioContext_14332019[0].createGain();
    masterGain_14335046[0].gain.value = 1.0000000000000000e+00;
    sfxGain_14335044[0].connect(masterGain_14335046[0]);
    musicGain_14335045[0].connect(masterGain_14335046[0]);
    masterGain_14335046[0].connect(audioContext_14332019[0].destination);
    L3: do {
      var c_14610024 = null;
      var i_16506118 = 0;
      if ((i_16506118 <= 15)) {
      L4: do {
          L5: while (true) {
          if (!true) break L5;
            c_14610024 = audioChannels_14332102[0][chckIndx(i_16506118, 0, (audioChannels_14332102[0]).length-1)];
            c_14610024.gain = audioContext_14332019[0].createGain();
            c_14610024.gain.gain.value = 1.0000000000000000e+00;
            if ((15 <= i_16506118)) {
            break L4;
            }
            
            i_16506118 = addInt(i_16506118, 1);
          }
      } while(false);
      }
      
    } while(false);
    }
    else {
    rawEcho(makeNimstrLit("no audioContext"));
    }
    

  
}
function setPalette_15065034(p_15065036) {
    nimCopy(currentPalette_12755140[0], p_15065036, NTI12571076);

  
}
function RGB_12795071(r_12795073, g_12795074, b_12795075) {
  var result_12795080 = {Field0: 0, Field1: 0, Field2: 0};

  BeforeRet: do {
    var colontmp__16506124 = r_12795073;
    var colontmp__16506125 = g_12795074;
    var colontmp__16506126 = b_12795075;
    nimCopy(result_12795080, {Field0: colontmp__16506124, Field1: colontmp__16506125, Field2: colontmp__16506126}, NTI12795076);
    break BeforeRet;
  } while (false);

  return result_12795080;

}
function loadPalettePico8_14996300() {
  var result_15065093 = {Field0: 0, Field1: arrayConstr(256, {Field0: 0, Field1: 0, Field2: 0}, NTI12571080)};

    nimCopy(result_15065093.Field1[chckIndx(0, 0, (result_15065093.Field1).length-1)], RGB_12795071(0, 0, 0), NTI12571080);
    nimCopy(result_15065093.Field1[chckIndx(1, 0, (result_15065093.Field1).length-1)], RGB_12795071(29, 43, 83), NTI12571080);
    nimCopy(result_15065093.Field1[chckIndx(2, 0, (result_15065093.Field1).length-1)], RGB_12795071(126, 37, 83), NTI12571080);
    nimCopy(result_15065093.Field1[chckIndx(3, 0, (result_15065093.Field1).length-1)], RGB_12795071(0, 135, 81), NTI12571080);
    nimCopy(result_15065093.Field1[chckIndx(4, 0, (result_15065093.Field1).length-1)], RGB_12795071(171, 82, 54), NTI12571080);
    nimCopy(result_15065093.Field1[chckIndx(5, 0, (result_15065093.Field1).length-1)], RGB_12795071(95, 87, 79), NTI12571080);
    nimCopy(result_15065093.Field1[chckIndx(6, 0, (result_15065093.Field1).length-1)], RGB_12795071(194, 195, 199), NTI12571080);
    nimCopy(result_15065093.Field1[chckIndx(7, 0, (result_15065093.Field1).length-1)], RGB_12795071(255, 241, 232), NTI12571080);
    nimCopy(result_15065093.Field1[chckIndx(8, 0, (result_15065093.Field1).length-1)], RGB_12795071(255, 0, 77), NTI12571080);
    nimCopy(result_15065093.Field1[chckIndx(9, 0, (result_15065093.Field1).length-1)], RGB_12795071(255, 163, 0), NTI12571080);
    nimCopy(result_15065093.Field1[chckIndx(10, 0, (result_15065093.Field1).length-1)], RGB_12795071(255, 240, 36), NTI12571080);
    nimCopy(result_15065093.Field1[chckIndx(11, 0, (result_15065093.Field1).length-1)], RGB_12795071(0, 231, 86), NTI12571080);
    nimCopy(result_15065093.Field1[chckIndx(12, 0, (result_15065093.Field1).length-1)], RGB_12795071(41, 173, 255), NTI12571080);
    nimCopy(result_15065093.Field1[chckIndx(13, 0, (result_15065093.Field1).length-1)], RGB_12795071(131, 118, 156), NTI12571080);
    nimCopy(result_15065093.Field1[chckIndx(14, 0, (result_15065093.Field1).length-1)], RGB_12795071(255, 119, 168), NTI12571080);
    nimCopy(result_15065093.Field1[chckIndx(15, 0, (result_15065093.Field1).length-1)], RGB_12795071(255, 204, 170), NTI12571080);
    result_15065093.Field0 = 16;

  return result_15065093;

}
function sysFatal_1305418(message_1305422) {
    raiseException({message: nimCopy(null, message_1305422, NTI1188013), m_type: NTI1194641, parent: null, name: null, trace: [], up: null}, "AssertionDefect");

  
}
function raiseAssert_1305414(msg_1305416) {
    sysFatal_1305418(msg_1305416);

  
}
function failedAssertImpl_1305480(msg_1305482) {
    raiseAssert_1305414(msg_1305482);

  
}
function rotl_14713630(x_14713632, k_14713633) {
  var result_14713634 = 0;

    result_14713634 = ((x_14713632 << k_14713633) | ((x_14713632 >>> 0) >>> ((64 - k_14713633) >>> 0)));

  return result_14713634;

}
function next_14713658(r_14713661) {
  var result_14713662 = 0;

    var s0_14713663 = r_14713661.a0;
    var s1_14713664 = r_14713661.a1;
    result_14713662 = ((s0_14713663 + s1_14713664) >>> 0);
    s1_14713664 = (s1_14713664 ^ s0_14713663);
    r_14713661.a0 = ((rotl_14713630(s0_14713663, 55) ^ s1_14713664) ^ (s1_14713664 << 14));
    r_14713661.a1 = rotl_14713630(s1_14713664, 36);

  return result_14713662;

}
function initRand_14735214(seed_14735216) {
  var result_14735217 = [({a0: 0, a1: 0})];

    if (!(!((seed_14735216 == 0)))) {
    failedAssertImpl_1305480(makeNimstrLit("random.nim(568, 12) `seed != 0` "));
    }
    
    result_14735217[0].a0 = Math.floor(seed_14735216 / Math.pow(2,16));
    result_14735217[0].a1 = (seed_14735216 & 65535);
    next_14713658(result_14735217[0]);

  return result_14735217[0];

}
function randomize_14750222(seed_14750224) {
    nimCopy(state_14713405[0], initRand_14735214(seed_14750224), NTI14713402);

  
}
function epochTime_11725141() {
  var result_11725143 = 0.0;

    result_11725143 = HEX2F_1555648(new Date().getTime(), 1000);

  return result_11725143;

}
function loadConfig_14605055() {
  
}
function new_12755765() {
  var result_12755769 = null;

  BeforeRet: do {
    var r_12755801 = null;
    r_12755801 = ({data: [], channels: 0, w: 0, h: 0, tw: 0, th: 0, filename: [], spriteFlags: []});
    result_12755769 = r_12755801;
    break BeforeRet;
  } while (false);

  return result_12755769;

}
function newSeq_12755839(len_12755842) {
  var result_12755844 = [];

    result_12755844 = new Array(len_12755842); for (var i=0;i<len_12755842;++i) {result_12755844[i]=0;}
  return result_12755844;

}
function newSurface_12755759(w_12755761, h_12755762) {
  var result_12755763 = null;

    result_12755763 = new_12755765();
    result_12755763.data = nimCopy(null, newSeq_12755839(chckRange(mulInt(w_12755761, h_12755762), 0, 2147483647)), NTI12755843);
    result_12755763.channels = 1;
    result_12755763.w = w_12755761;
    result_12755763.h = h_12755762;

  return result_12755763;

}
function setSpritesheet_16250015(index_16250017) {
      var Tmp1;

      if ((index_16250017 < 0)) Tmp1 = true; else {        Tmp1 = (16 <= index_16250017);      }    if (Tmp1) {
    raiseException({message: (makeNimstrLit("Invalid spritesheet ") || []).concat(cstrToNimstr((index_16250017)+"") || []), parent: null, m_type: NTI1194617, name: null, trace: [], up: null}, "Exception");
    }
    
    if ((spritesheets_12755263[0][chckIndx(index_16250017, 0, (spritesheets_12755263[0]).length-1)] == null)) {
    raiseException({message: (makeNimstrLit("No spritesheet loaded: ") || []).concat(cstrToNimstr((index_16250017)+"") || []), parent: null, m_type: NTI1194617, name: null, trace: [], up: null}, "Exception");
    }
    
    spritesheet_12755264[0] = spritesheets_12755263[0][chckIndx(index_16250017, 0, (spritesheets_12755263[0]).length-1)];

  
}
function new_15790303() {
  var result_15790307 = null;

  BeforeRet: do {
    var r_15790401 = null;
    r_15790401 = ({rects: ({data: [], counter: 0}), data: [], w: 0, h: 0});
    result_15790307 = r_15790401;
    break BeforeRet;
  } while (false);

  return result_15790307;

}
function nucruneLen(s_2492025) {
  var result_2492026 = 0;

    result_2492026 = 0;
    var i_2492028 = 0;
    L1: do {
        L2: while (true) {
        if (!(i_2492028 < (s_2492025).length)) break L2;
          if ((s_2492025[chckIndx(i_2492028, 0, (s_2492025).length-1)] <= 127)) {
          i_2492028 = addInt(i_2492028, 1);
          }
          else {
          if ((((s_2492025[chckIndx(i_2492028, 0, (s_2492025).length-1)] >>> 0) >>> 5) == 6)) {
          i_2492028 = addInt(i_2492028, 2);
          }
          else {
          if ((((s_2492025[chckIndx(i_2492028, 0, (s_2492025).length-1)] >>> 0) >>> 4) == 14)) {
          i_2492028 = addInt(i_2492028, 3);
          }
          else {
          if ((((s_2492025[chckIndx(i_2492028, 0, (s_2492025).length-1)] >>> 0) >>> 3) == 30)) {
          i_2492028 = addInt(i_2492028, 4);
          }
          else {
          if ((((s_2492025[chckIndx(i_2492028, 0, (s_2492025).length-1)] >>> 0) >>> 2) == 62)) {
          i_2492028 = addInt(i_2492028, 5);
          }
          else {
          if ((((s_2492025[chckIndx(i_2492028, 0, (s_2492025).length-1)] >>> 0) >>> 1) == 126)) {
          i_2492028 = addInt(i_2492028, 6);
          }
          else {
          i_2492028 = addInt(i_2492028, 1);
          }
          }}}}}
          result_2492026 = addInt(result_2492026, 1);
        }
    } while(false);

  return result_2492026;

}
function initTable_15805011(initialSize_15805015) {
  var result_15805017 = ({data: [], counter: 0});

    var correctSizeHEX60gensym162_15810001 = slotsNeeded_2395048(chckRange(initialSize_15805015, 0, 2147483647));
    result_15805017.counter = 0;
    result_15805017.data = new Array(chckRange(correctSizeHEX60gensym162_15810001, 0, 2147483647)); for (var i=0;i<chckRange(correctSizeHEX60gensym162_15810001, 0, 2147483647);++i) {result_15805017.data[i]={Field0: 0, Field1: 0, Field2: {Field0: 0, Field1: 0, Field2: 0, Field3: 0}};}
  return result_15805017;

}
function hashWangYi1_2330417(x_2330420) {
  var result_2330421 = 0;

            if (typeof BigInt == 'undefined') {
          result_2330421 = x_2330420; // For Node < 10.4, etc. we do the old identity hash
        } else {          // Otherwise we match the low 32-bits of C/C++ hash
          function hi_xor_lo_js(a, b) {
            const prod = BigInt(a) * BigInt(b);
            const mask = (BigInt(1) << BigInt(64)) - BigInt(1);
            return (prod >> BigInt(64)) ^ (prod & mask);
          }
          const P0  = BigInt(0xa0761d64)<<BigInt(32)|BigInt(0x78bd642f);
          const P1  = BigInt(0xe7037ed1)<<BigInt(32)|BigInt(0xa0b428db);
          const P58 = BigInt(0xeb44acca)<<BigInt(32)|BigInt(0xb455d165)^BigInt(8);
          var res   = hi_xor_lo_js(hi_xor_lo_js(P0, BigInt(x_2330420) ^ P1), P58);
          result_2330421  = Number(res & ((BigInt(1) << BigInt(53)) - BigInt(1)));
        }

  return result_2330421;

}
function hash_16070001(x_16070004) {
  var result_16070005 = 0;

    result_16070005 = hashWangYi1_2330417(x_16070004);

  return result_16070005;

}
function isFilled_2393218(hcode_2393220) {
  var result_2393221 = false;

    result_2393221 = !((hcode_2393220 == 0));

  return result_2393221;

}
function HEX3DHEX3D_3385064(a_3385066, b_3385067) {
  var result_3385068 = false;

  BeforeRet: do {
    result_3385068 = (((a_3385066)|0) == ((b_3385067)|0));
    break BeforeRet;
  } while (false);

  return result_3385068;

}
function nextTry_2395014(h_2395016, maxHash_2395017) {
  var result_2395018 = 0;

    result_2395018 = (addInt(h_2395016, 1) & maxHash_2395017);

  return result_2395018;

}
function rawGet_16065332(t_16065336, key_16065337, hc_16065338, hc_16065338_Idx) {
            var Tmp3;

  var result_16065339 = 0;

  BeforeRet: do {
    hc_16065338[hc_16065338_Idx] = hash_16070001(key_16065337);
    if ((hc_16065338[hc_16065338_Idx] == 0)) {
    hc_16065338[hc_16065338_Idx] = 314159265;
    }
    
    if (((t_16065336.data).length == 0)) {
    result_16065339 = -1;
    break BeforeRet;
    }
    
    var h_16075160 = (hc_16065338[hc_16065338_Idx] & ((t_16065336.data).length-1));
    L1: do {
        L2: while (true) {
        if (!isFilled_2393218(t_16065336.data[chckIndx(h_16075160, 0, (t_16065336.data).length-1)].Field0)) break L2;
            if (!(t_16065336.data[chckIndx(h_16075160, 0, (t_16065336.data).length-1)].Field0 == hc_16065338[hc_16065338_Idx])) Tmp3 = false; else {              Tmp3 = HEX3DHEX3D_3385064(t_16065336.data[chckIndx(h_16075160, 0, (t_16065336.data).length-1)].Field1, key_16065337);            }          if (Tmp3) {
          result_16065339 = h_16075160;
          break BeforeRet;
          }
          
          h_16075160 = nextTry_2395014(h_16075160, ((t_16065336.data).length-1));
        }
    } while(false);
    result_16065339 = subInt(-1, h_16075160);
  } while (false);

  return result_16065339;

}
function hasKey_16065316(t_16065321, key_16065322) {
  var result_16065323 = false;

    var hc_16065324 = [0];
    result_16065323 = (0 <= rawGet_16065332(t_16065321, key_16065322, hc_16065324, 0));

  return result_16065323;

}
function HEX3CHEX3DHEX25_1192474(x_1192476, y_1192477) {
  var result_1192478 = false;

    result_1192478 = ((x_1192476 >>> 0) <= (y_1192477 >>> 0));

  return result_1192478;

}
function nuctoUTF8(c_2735474) {
  var result_2735475 = [];

    result_2735475 = nimCopy(null, [], NTI1188013);
    var iHEX60gensym49_2740001 = c_2735474;
    if (HEX3CHEX3DHEX25_1192474(iHEX60gensym49_2740001, 127)) {
    (result_2735475.length = 1);
    result_2735475[chckIndx(0, 0, (result_2735475).length-1)] = chckRange(iHEX60gensym49_2740001, 0, 255);
    }
    else {
    if (HEX3CHEX3DHEX25_1192474(iHEX60gensym49_2740001, 2047)) {
    (result_2735475.length = 2);
    result_2735475[chckIndx(0, 0, (result_2735475).length-1)] = chckRange(((iHEX60gensym49_2740001 >> 6) | 192), 0, 255);
    result_2735475[chckIndx(1, 0, (result_2735475).length-1)] = chckRange(((iHEX60gensym49_2740001 & 63) | 128), 0, 255);
    }
    else {
    if (HEX3CHEX3DHEX25_1192474(iHEX60gensym49_2740001, 65535)) {
    (result_2735475.length = 3);
    result_2735475[chckIndx(0, 0, (result_2735475).length-1)] = chckRange(((iHEX60gensym49_2740001 >> 12) | 224), 0, 255);
    result_2735475[chckIndx(1, 0, (result_2735475).length-1)] = chckRange((((iHEX60gensym49_2740001 >> 6) & 63) | 128), 0, 255);
    result_2735475[chckIndx(2, 0, (result_2735475).length-1)] = chckRange(((iHEX60gensym49_2740001 & 63) | 128), 0, 255);
    }
    else {
    if (HEX3CHEX3DHEX25_1192474(iHEX60gensym49_2740001, 2097151)) {
    (result_2735475.length = 4);
    result_2735475[chckIndx(0, 0, (result_2735475).length-1)] = chckRange(((iHEX60gensym49_2740001 >> 18) | 240), 0, 255);
    result_2735475[chckIndx(1, 0, (result_2735475).length-1)] = chckRange((((iHEX60gensym49_2740001 >> 12) & 63) | 128), 0, 255);
    result_2735475[chckIndx(2, 0, (result_2735475).length-1)] = chckRange((((iHEX60gensym49_2740001 >> 6) & 63) | 128), 0, 255);
    result_2735475[chckIndx(3, 0, (result_2735475).length-1)] = chckRange(((iHEX60gensym49_2740001 & 63) | 128), 0, 255);
    }
    else {
    if (HEX3CHEX3DHEX25_1192474(iHEX60gensym49_2740001, 67108863)) {
    (result_2735475.length = 5);
    result_2735475[chckIndx(0, 0, (result_2735475).length-1)] = chckRange(((iHEX60gensym49_2740001 >> 24) | 248), 0, 255);
    result_2735475[chckIndx(1, 0, (result_2735475).length-1)] = chckRange((((iHEX60gensym49_2740001 >> 18) & 63) | 128), 0, 255);
    result_2735475[chckIndx(2, 0, (result_2735475).length-1)] = chckRange((((iHEX60gensym49_2740001 >> 12) & 63) | 128), 0, 255);
    result_2735475[chckIndx(3, 0, (result_2735475).length-1)] = chckRange((((iHEX60gensym49_2740001 >> 6) & 63) | 128), 0, 255);
    result_2735475[chckIndx(4, 0, (result_2735475).length-1)] = chckRange(((iHEX60gensym49_2740001 & 63) | 128), 0, 255);
    }
    else {
    if (HEX3CHEX3DHEX25_1192474(iHEX60gensym49_2740001, 2147483647)) {
    (result_2735475.length = 6);
    result_2735475[chckIndx(0, 0, (result_2735475).length-1)] = chckRange(((iHEX60gensym49_2740001 >> 30) | 252), 0, 255);
    result_2735475[chckIndx(1, 0, (result_2735475).length-1)] = chckRange((((iHEX60gensym49_2740001 >> 24) & 63) | 128), 0, 255);
    result_2735475[chckIndx(2, 0, (result_2735475).length-1)] = chckRange((((iHEX60gensym49_2740001 >> 18) & 63) | 128), 0, 255);
    result_2735475[chckIndx(3, 0, (result_2735475).length-1)] = chckRange((((iHEX60gensym49_2740001 >> 12) & 63) | 128), 0, 255);
    result_2735475[chckIndx(4, 0, (result_2735475).length-1)] = chckRange((((iHEX60gensym49_2740001 >> 6) & 63) | 128), 0, 255);
    result_2735475[chckIndx(5, 0, (result_2735475).length-1)] = chckRange(((iHEX60gensym49_2740001 & 63) | 128), 0, 255);
    }
    else {
    }
    }}}}}

  return result_2735475;

}
function HEX24_3105214(rune_3105216) {
  var result_3105217 = [];

    result_3105217 = nimCopy(null, nuctoUTF8(rune_3105216), NTI1188013);

  return result_3105217;

}
function mustRehash_16110601(t_16110604) {
  var result_16110605 = false;

    if (!((t_16110604.counter < (t_16110604.data).length))) {
    failedAssertImpl_1305480(makeNimstrLit("hashcommon.nim(34, 9) `\x0At.counter < t.dataLen` "));
    }
    
    result_16110605 = ((mulInt((t_16110604.data).length, 2) < mulInt(t_16110604.counter, 3)) || (subInt((t_16110604.data).length, t_16110604.counter) < 4));

  return result_16110605;

}
function rawInsert_16136130(t_16136136, data_16136139, data_16136139_Idx, key_16136140, val_16136141, hc_16136142, h_16136143) {
    data_16136139[data_16136139_Idx][chckIndx(h_16136143, 0, (data_16136139[data_16136139_Idx]).length-1)].Field1 = key_16136140;
    nimCopy(data_16136139[data_16136139_Idx][chckIndx(h_16136143, 0, (data_16136139[data_16136139_Idx]).length-1)].Field2, val_16136141, NTI12685648);
    data_16136139[data_16136139_Idx][chckIndx(h_16136143, 0, (data_16136139[data_16136139_Idx]).length-1)].Field0 = hc_16136142;

  
}
function enlarge_16135172(t_16135178) {
    var n_16135186 = [];
    n_16135186 = new Array(chckRange(mulInt((t_16135178.data).length, 2), 0, 2147483647)); for (var i=0;i<chckRange(mulInt((t_16135178.data).length, 2), 0, 2147483647);++i) {n_16135186[i]={Field0: 0, Field1: 0, Field2: {Field0: 0, Field1: 0, Field2: 0, Field3: 0}};}    var Tmp1 = t_16135178.data; t_16135178.data = n_16135186; n_16135186 = Tmp1;    L2: do {
      var i_16135358 = 0;
      var colontmp__16506195 = 0;
      colontmp__16506195 = ((n_16135186).length-1);
      var res_16506200 = 0;
      L3: do {
          L4: while (true) {
          if (!(res_16506200 <= colontmp__16506195)) break L4;
            i_16135358 = res_16506200;
            var eh_16135518 = n_16135186[chckIndx(i_16135358, 0, (n_16135186).length-1)].Field0;
            if (isFilled_2393218(eh_16135518)) {
            var j_16135525 = (eh_16135518 & ((t_16135178.data).length-1));
            L5: do {
                L6: while (true) {
                if (!isFilled_2393218(t_16135178.data[chckIndx(j_16135525, 0, (t_16135178.data).length-1)].Field0)) break L6;
                  j_16135525 = nextTry_2395014(j_16135525, ((t_16135178.data).length-1));
                }
            } while(false);
            rawInsert_16136130(t_16135178, t_16135178, "data", n_16135186[chckIndx(i_16135358, 0, (n_16135186).length-1)].Field1, n_16135186[chckIndx(i_16135358, 0, (n_16135186).length-1)].Field2, eh_16135518, j_16135525);
            }
            
            res_16506200 = addInt(res_16506200, 1);
          }
      } while(false);
    } while(false);

  
}
function rawGetKnownHC_16136648(t_16136652, key_16136653, hc_16136654) {
  var result_16136655 = 0;

  BeforeRet: do {
    if (((t_16136652.data).length == 0)) {
    result_16136655 = -1;
    break BeforeRet;
    }
    
    var h_16140160 = (hc_16136654 & ((t_16136652.data).length-1));
    L1: do {
        L2: while (true) {
        if (!isFilled_2393218(t_16136652.data[chckIndx(h_16140160, 0, (t_16136652.data).length-1)].Field0)) break L2;
          if (((t_16136652.data[chckIndx(h_16140160, 0, (t_16136652.data).length-1)].Field0 == hc_16136654) && HEX3DHEX3D_3385064(t_16136652.data[chckIndx(h_16140160, 0, (t_16136652.data).length-1)].Field1, key_16136653))) {
          result_16136655 = h_16140160;
          break BeforeRet;
          }
          
          h_16140160 = nextTry_2395014(h_16140160, ((t_16136652.data).length-1));
        }
    } while(false);
    result_16136655 = subInt(-1, h_16140160);
  } while (false);

  return result_16136655;

}
function HEX5BHEX5DHEX3D_16080122(t_16080128, key_16080129, val_16080130) {
    if (((t_16080128.data).length == 0)) {
    var correctSizeHEX60gensym218_16090001 = slotsNeeded_2395048(32);
    t_16080128.counter = 0;
    t_16080128.data = new Array(chckRange(correctSizeHEX60gensym218_16090001, 0, 2147483647)); for (var i=0;i<chckRange(correctSizeHEX60gensym218_16090001, 0, 2147483647);++i) {t_16080128.data[i]={Field0: 0, Field1: 0, Field2: {Field0: 0, Field1: 0, Field2: 0, Field3: 0}};}    }
    
    var hc_16095601 = [0];
    var index_16095610 = rawGet_16065332(t_16080128, key_16080129, hc_16095601, 0);
    if ((0 <= index_16095610)) {
    nimCopy(t_16080128.data[chckIndx(index_16095610, 0, (t_16080128.data).length-1)].Field2, val_16080130, NTI12685648);
    }
    else {
      if (((t_16080128.data).length == 0)) {
      var correctSizeHEX60gensym221_16105001 = slotsNeeded_2395048(32);
      t_16080128.counter = 0;
      t_16080128.data = new Array(chckRange(correctSizeHEX60gensym221_16105001, 0, 2147483647)); for (var i=0;i<chckRange(correctSizeHEX60gensym221_16105001, 0, 2147483647);++i) {t_16080128.data[i]={Field0: 0, Field1: 0, Field2: {Field0: 0, Field1: 0, Field2: 0, Field3: 0}};}      }
      
      if (mustRehash_16110601(t_16080128)) {
      enlarge_16135172(t_16080128);
      index_16095610 = rawGetKnownHC_16136648(t_16080128, key_16080129, hc_16095601[0]);
      }
      
      index_16095610 = subInt(-1, index_16095610);
      rawInsert_16136130(t_16080128, t_16080128, "data", key_16080129, val_16080130, hc_16095601[0], index_16095610);
      t_16080128.counter = addInt(t_16080128.counter, 1);
    }
    

  
}
function len_16140904(t_16140909) {
  var result_16140910 = 0;

    result_16140910 = t_16140909.counter;

  return result_16140910;

}
function createFontFromSurface_15790297(surface_15790299, chars_15790300) {
  var result_15790301 = null;

  BeforeRet: do {
    var font_15790436 = new_15790303();
    font_15790436.w = surface_15790299.w;
    font_15790436.h = surface_15790299.h;
    font_15790436.data = nimCopy(null, newSeq_12755839(chckRange(mulInt(font_15790436.w, font_15790436.h), 0, 2147483647)), NTI12755843);
    var borderColor_15790453 = 2;
    var solidColor_15790454 = 1;
    var transparentColor_15790455 = 0;
    if ((surface_15790299.channels == 4)) {
    console.log("loading font from RGBA", toJSStr(surface_15790299.filename), "chars", nucruneLen(chars_15790300));
    var borderColorRGBA_15795002 = {Field0: surface_15790299.data[chckIndx(0, 0, (surface_15790299.data).length-1)], Field1: surface_15790299.data[chckIndx(1, 0, (surface_15790299.data).length-1)], Field2: surface_15790299.data[chckIndx(2, 0, (surface_15790299.data).length-1)], Field3: surface_15790299.data[chckIndx(3, 0, (surface_15790299.data).length-1)]};
    var transparentColorRGBA_15795004 = {Field0: surface_15790299.data[chckIndx(4, 0, (surface_15790299.data).length-1)], Field1: surface_15790299.data[chckIndx(5, 0, (surface_15790299.data).length-1)], Field2: surface_15790299.data[chckIndx(6, 0, (surface_15790299.data).length-1)], Field3: surface_15790299.data[chckIndx(7, 0, (surface_15790299.data).length-1)]};
    L1: do {
      var i_15795012 = 0;
      var colontmp__16506134 = 0;
      colontmp__16506134 = mulInt(font_15790436.w, font_15790436.h);
      var i_16506135 = 0;
      L2: do {
          L3: while (true) {
          if (!(i_16506135 < colontmp__16506134)) break L3;
            i_15795012 = i_16506135;
            var col_15795014 = {Field0: surface_15790299.data[chckIndx(addInt(mulInt(i_15795012, surface_15790299.channels), 0), 0, (surface_15790299.data).length-1)], Field1: surface_15790299.data[chckIndx(addInt(mulInt(i_15795012, surface_15790299.channels), 1), 0, (surface_15790299.data).length-1)], Field2: surface_15790299.data[chckIndx(addInt(mulInt(i_15795012, surface_15790299.channels), 2), 0, (surface_15790299.data).length-1)], Field3: surface_15790299.data[chckIndx(addInt(mulInt(i_15795012, surface_15790299.channels), 3), 0, (surface_15790299.data).length-1)]};
            if ((col_15795014["Field3"] == 0)) {
            font_15790436.data[chckIndx(i_15795012, 0, (font_15790436.data).length-1)] = transparentColor_15790455;
            }
            else {
            if ((127 < col_15795014["Field0"])) {
            font_15790436.data[chckIndx(i_15795012, 0, (font_15790436.data).length-1)] = borderColor_15790453;
            }
            else {
              font_15790436.data[chckIndx(i_15795012, 0, (font_15790436.data).length-1)] = solidColor_15790454;
            }
            }
            i_16506135 = addInt(i_16506135, 1);
          }
      } while(false);
    } while(false);
    }
    else {
    if ((surface_15790299.channels == 1)) {
    console.log("loading font from indexed", toJSStr(surface_15790299.filename));
    L4: do {
      var i_15805008 = 0;
      var colontmp__16506138 = 0;
      colontmp__16506138 = mulInt(font_15790436.w, font_15790436.h);
      var i_16506139 = 0;
      L5: do {
          L6: while (true) {
          if (!(i_16506139 < colontmp__16506138)) break L6;
            i_15805008 = i_16506139;
            font_15790436.data[chckIndx(i_15805008, 0, (font_15790436.data).length-1)] = surface_15790299.data[chckIndx(i_15805008, 0, (surface_15790299.data).length-1)];
            i_16506139 = addInt(i_16506139, 1);
          }
      } while(false);
    } while(false);
    }
    }
    nimCopy(font_15790436.rects, initTable_15805011(128), NTI12685671);
    var newChar_15815630 = false;
    var currentRect_15815636 = {Field0: 0, Field1: 0, Field2: 0, Field3: 0};
    var i_15815638 = 0;
    var charPos_15815640 = 0;
    L7: do {
      var x_15815648 = 0;
      var i_16506174 = 0;
      L8: do {
          L9: while (true) {
          if (!(i_16506174 < font_15790436.w)) break L9;
            x_15815648 = i_16506174;
            var color_15815649 = font_15790436.data[chckIndx(x_15815648, 0, (font_15790436.data).length-1)];
            if ((color_15815649 == borderColor_15790453)) {
            currentRect_15815636.Field2 = subInt(x_15815648, currentRect_15815636.Field0);
            if (!((currentRect_15815636.Field2 == 0))) {
            currentRect_15815636.Field3 = subInt(font_15790436.h, 1);
            L10: do {
              var y_15820008 = 0;
              var i_16506143 = 0;
              L11: do {
                  L12: while (true) {
                  if (!(i_16506143 < font_15790436.h)) break L12;
                    y_15820008 = i_16506143;
                    var color_15820009 = font_15790436.data[chckIndx(addInt(mulInt(y_15820008, font_15790436.w), x_15815648), 0, (font_15790436.data).length-1)];
                    if ((color_15820009 == borderColor_15790453)) {
                    currentRect_15815636.Field3 = y_15820008;
                    }
                    
                    i_16506143 = addInt(i_16506143, 1);
                  }
              } while(false);
            } while(false);
            var charId_15820010 = 0;
            if ((chars_15790300[chckIndx(charPos_15815640, 0, (chars_15790300).length-1)] <= 127)) {
            charId_15820010 = chckRange(chars_15790300[chckIndx(charPos_15815640, 0, (chars_15790300).length-1)], -2147483648, 2147483647);
            charPos_15815640 = addInt(charPos_15815640, 1);
            }
            else {
            if ((((chars_15790300[chckIndx(charPos_15815640, 0, (chars_15790300).length-1)] >>> 0) >>> 5) == 6)) {
            if ((charPos_15815640 <= subInt((chars_15790300).length, 2))) {
            charId_15820010 = chckRange((((chars_15790300[chckIndx(charPos_15815640, 0, (chars_15790300).length-1)] & 31) << 6) | (chars_15790300[chckIndx(addInt(charPos_15815640, 1), 0, (chars_15790300).length-1)] & 63)), -2147483648, 2147483647);
            charPos_15815640 = addInt(charPos_15815640, 2);
            }
            else {
              charId_15820010 = 65533;
              charPos_15815640 = addInt(charPos_15815640, 1);
            }
            
            }
            else {
            if ((((chars_15790300[chckIndx(charPos_15815640, 0, (chars_15790300).length-1)] >>> 0) >>> 4) == 14)) {
            if ((charPos_15815640 <= subInt((chars_15790300).length, 3))) {
            charId_15820010 = chckRange(((((chars_15790300[chckIndx(charPos_15815640, 0, (chars_15790300).length-1)] & 15) << 12) | ((chars_15790300[chckIndx(addInt(charPos_15815640, 1), 0, (chars_15790300).length-1)] & 63) << 6)) | (chars_15790300[chckIndx(addInt(charPos_15815640, 2), 0, (chars_15790300).length-1)] & 63)), -2147483648, 2147483647);
            charPos_15815640 = addInt(charPos_15815640, 3);
            }
            else {
              charId_15820010 = 65533;
              charPos_15815640 = addInt(charPos_15815640, 1);
            }
            
            }
            else {
            if ((((chars_15790300[chckIndx(charPos_15815640, 0, (chars_15790300).length-1)] >>> 0) >>> 3) == 30)) {
            if ((charPos_15815640 <= subInt((chars_15790300).length, 4))) {
            charId_15820010 = chckRange((((((chars_15790300[chckIndx(charPos_15815640, 0, (chars_15790300).length-1)] & 7) << 18) | ((chars_15790300[chckIndx(addInt(charPos_15815640, 1), 0, (chars_15790300).length-1)] & 63) << 12)) | ((chars_15790300[chckIndx(addInt(charPos_15815640, 2), 0, (chars_15790300).length-1)] & 63) << 6)) | (chars_15790300[chckIndx(addInt(charPos_15815640, 3), 0, (chars_15790300).length-1)] & 63)), -2147483648, 2147483647);
            charPos_15815640 = addInt(charPos_15815640, 4);
            }
            else {
              charId_15820010 = 65533;
              charPos_15815640 = addInt(charPos_15815640, 1);
            }
            
            }
            else {
            if ((((chars_15790300[chckIndx(charPos_15815640, 0, (chars_15790300).length-1)] >>> 0) >>> 2) == 62)) {
            if ((charPos_15815640 <= subInt((chars_15790300).length, 5))) {
            charId_15820010 = chckRange(((((((chars_15790300[chckIndx(charPos_15815640, 0, (chars_15790300).length-1)] & 3) << 24) | ((chars_15790300[chckIndx(addInt(charPos_15815640, 1), 0, (chars_15790300).length-1)] & 63) << 18)) | ((chars_15790300[chckIndx(addInt(charPos_15815640, 2), 0, (chars_15790300).length-1)] & 63) << 12)) | ((chars_15790300[chckIndx(addInt(charPos_15815640, 3), 0, (chars_15790300).length-1)] & 63) << 6)) | (chars_15790300[chckIndx(addInt(charPos_15815640, 4), 0, (chars_15790300).length-1)] & 63)), -2147483648, 2147483647);
            charPos_15815640 = addInt(charPos_15815640, 5);
            }
            else {
              charId_15820010 = 65533;
              charPos_15815640 = addInt(charPos_15815640, 1);
            }
            
            }
            else {
            if ((((chars_15790300[chckIndx(charPos_15815640, 0, (chars_15790300).length-1)] >>> 0) >>> 1) == 126)) {
            if ((charPos_15815640 <= subInt((chars_15790300).length, 6))) {
            charId_15820010 = chckRange((((((((chars_15790300[chckIndx(charPos_15815640, 0, (chars_15790300).length-1)] & 1) << 30) | ((chars_15790300[chckIndx(addInt(charPos_15815640, 1), 0, (chars_15790300).length-1)] & 63) << 24)) | ((chars_15790300[chckIndx(addInt(charPos_15815640, 2), 0, (chars_15790300).length-1)] & 63) << 18)) | ((chars_15790300[chckIndx(addInt(charPos_15815640, 3), 0, (chars_15790300).length-1)] & 63) << 12)) | ((chars_15790300[chckIndx(addInt(charPos_15815640, 4), 0, (chars_15790300).length-1)] & 63) << 6)) | (chars_15790300[chckIndx(addInt(charPos_15815640, 5), 0, (chars_15790300).length-1)] & 63)), -2147483648, 2147483647);
            charPos_15815640 = addInt(charPos_15815640, 6);
            }
            else {
              charId_15820010 = 65533;
              charPos_15815640 = addInt(charPos_15815640, 1);
            }
            
            }
            else {
              charId_15820010 = chckRange(chars_15790300[chckIndx(charPos_15815640, 0, (chars_15790300).length-1)], -2147483648, 2147483647);
              charPos_15815640 = addInt(charPos_15815640, 1);
            }
            }}}}}
            if (hasKey_16065316(font_15790436.rects, charId_15820010)) {
            raiseException({message: (makeNimstrLit("font already has character: ") || []).concat(HEX24_3105214(charId_15820010) || [],makeNimstrLit(" index: ") || [],cstrToNimstr((i_15815638)+"") || []), parent: null, m_type: NTI1194617, name: null, trace: [], up: null}, "Exception");
            }
            
            HEX5BHEX5DHEX3D_16080122(font_15790436.rects, charId_15820010, currentRect_15815636);
            i_15815638 = addInt(i_15815638, 1);
            }
            
            newChar_15815630 = true;
            currentRect_15815636.Field0 = addInt(x_15815648, 1);
            }
            
            i_16506174 = addInt(i_16506174, 1);
          }
      } while(false);
    } while(false);
    rawEcho(makeNimstrLit("loaded font with "), cstrToNimstr((len_16140904(font_15790436.rects))+""), makeNimstrLit(" chars"));
    if (!((len_16140904(font_15790436.rects) == nucruneLen(chars_15790300)))) {
    raiseException({message: (makeNimstrLit("didn\'t load all characters from font, loaded: ") || []).concat(cstrToNimstr((len_16140904(font_15790436.rects))+"") || [],makeNimstrLit(" bitmaps of specified chars ") || [],cstrToNimstr((nucruneLen(chars_15790300))+"") || []), parent: null, m_type: NTI1194617, name: null, trace: [], up: null}, "Exception");
    }
    
    result_15790301 = font_15790436;
    break BeforeRet;
  } while (false);

  return result_15790301;

}
function setFont_14996237(fontId_14996239) {
  BeforeRet: do {
    if ((16 < fontId_14996239)) {
    break BeforeRet;
    }
    
    currentFontId_12755292[0] = fontId_14996239;
    currentFont_12755291[0] = fonts_12755290[0][chckIndx(currentFontId_12755292[0], 0, (fonts_12755290[0]).length-1)];
  } while (false);

  
}
function loadDefaultFont_16151014(index_16151016) {
    var shouldReplace_16151024 = (currentFont_12755291[0] == fonts_12755290[0][chckIndx(index_16151016, 0, (fonts_12755290[0]).length-1)]);
    fonts_12755290[0][chckIndx(index_16151016, 0, (fonts_12755290[0]).length-1)] = createFontFromSurface_15790297(defaultFontSurface_16150071, makeNimstrLit(" !\"#$%&\'()*+,-./0123456789:;<=>?@abcdefghijklmnopqrstuvwxyz[\\]^_`ABCDEFGHIJKLMNOPQRSTUVWXYZ{}~"));
    if (shouldReplace_16151024) {
    console.log("updating current font ", index_16151016);
    setFont_14996237(chckRange(index_16151016, 0, 15));
    }
    

  
}
function clip_14996410() {
    clipMinX_12755333[0] = 0;
    clipMaxX_12755334[0] = subInt(screenWidth_12755220[0], 1);
    clipMinY_12755335[0] = 0;
    clipMaxY_12755336[0] = subInt(screenHeight_12755223[0], 1);
    clippingRect_12755337[0].Field0 = 0;
    clippingRect_12755337[0].Field1 = 0;
    clippingRect_12755337[0].Field2 = subInt(screenWidth_12755220[0], 1);
    clippingRect_12755337[0].Field3 = subInt(screenHeight_12755223[0], 1);

  
}
function init_15010529(org_15010531, app_15010532) {
    controllers_12755242[0] = nimCopy(null, newSeq_14605077(0), NTI14605081);
    init_14605070(org_15010531, app_15010532);
    setPalette_15065034(loadPalettePico8_14996300());
    initialized_12755155[0] = true;
    randomize_14750222(epochTime_11725141());
    loadConfig_14605055();
    spritesheets_12755263[0][chckIndx(0, 0, (spritesheets_12755263[0]).length-1)] = newSurface_12755759(128, 128);
    spritesheets_12755263[0][chckIndx(0, 0, (spritesheets_12755263[0]).length-1)].tw = 8;
    spritesheets_12755263[0][chckIndx(0, 0, (spritesheets_12755263[0]).length-1)].th = 8;
    setSpritesheet_16250015(0);
    loadDefaultFont_16151014(0);
    clip_14996410();

  
}
function getContext2D_12936722(c_12936724) {
  var result_12936725 = null;

    result_12936725=c_12936724.getContext('2d');

  return result_12936725;

}
function resizeCanvas_14335372(w_14335374, h_14335375, scale_14335376) {
    rawEcho(makeNimstrLit("resizing canvas to "), cstrToNimstr((w_14335374)+""), makeNimstrLit(" x "), cstrToNimstr((h_14335375)+""), makeNimstrLit(" at scale "), cstrToNimstr((scale_14335376)+""));
    swCanvas_12755196[0] = newSurface_12755759(w_14335374, h_14335375);
    screenWidth_12755220[0] = w_14335374;
    screenHeight_12755223[0] = h_14335375;
    screenScale_12755259[0] = scale_14335376;
    if ((canvas_14332016[0] == null)) {
    canvas_14332016[0] = document.createElement("canvas");
    }
    
    canvas_14332016[0].width = w_14335374;
    canvas_14332016[0].height = h_14335375;
    canvas_14332016[0].style.width = toJSStr((cstrToNimstr((mulInt(w_14335374, scale_14335376))+"") || []).concat(makeNimstrLit("px") || []));
    canvas_14332016[0].style.height = toJSStr((cstrToNimstr((mulInt(h_14335375, scale_14335376))+"") || []).concat(makeNimstrLit("px") || []));
    ctx_14332014[0] = getContext2D_12936722(canvas_14332016[0]);
    swCanvas32_14332015[0] = ctx_14332014[0].getImageData(0.0, 0.0, w_14335374, h_14335375);
    stencilBuffer_12755197[0] = newSurface_12755759(w_14335374, h_14335375);

  
}
function max_1275014(x_1275016, y_1275017) {
    var Tmp1;
      var Tmp2;

  var result_1275018 = 0.0;

      if ((y_1275017 <= x_1275016)) Tmp2 = true; else {        Tmp2 = !((y_1275017 == y_1275017));      }    if (Tmp2) {
    Tmp1 = x_1275016;
    }
    else {
    Tmp1 = y_1275017;
    }
    
    result_1275018 = Tmp1;

  return result_1275018;

}
function min_1265281(x_1265283, y_1265284) {
    var Tmp1;
      var Tmp2;

  var result_1265285 = 0.0;

      if ((x_1265283 <= y_1265284)) Tmp2 = true; else {        Tmp2 = !((y_1265284 == y_1265284));      }    if (Tmp2) {
    Tmp1 = x_1265283;
    }
    else {
    Tmp1 = y_1265284;
    }
    
    result_1265285 = Tmp1;

  return result_1265285;

}
function resize_14335368(displayW_14335370, displayH_14335371) {
    rawEcho(makeNimstrLit("display "), cstrToNimstr((displayW_14335370)+""), makeNimstrLit(" x "), cstrToNimstr((displayH_14335371)+""));
    rawEcho(makeNimstrLit("canvas target size "), cstrToNimstr((targetScreenWidth_12755212[0])+""), makeNimstrLit(" x "), cstrToNimstr((targetScreenHeight_12755215[0])+""));
    screenScale_12755259[0] = max_1275014(1.0000000000000000e+00, min_1265281(Math.floor((displayW_14335370 / targetScreenWidth_12755212[0])), Math.floor((displayH_14335371 / targetScreenHeight_12755215[0]))));
    rawEcho(makeNimstrLit("scale "), cstrToNimstr(nimFloatToString(screenScale_12755259[0])));
    if (fixedScreenSize_12755216[0]) {
    var canvasW_14610092 = targetScreenWidth_12755212[0];
    var canvasH_14610093 = targetScreenHeight_12755215[0];
    resizeCanvas_14335372(canvasW_14610092, canvasH_14610093, ((screenScale_12755259[0])|0));
    }
    else {
      screenWidth_12755220[0] = divInt(displayW_14335370, ((screenScale_12755259[0])|0));
      screenHeight_12755223[0] = divInt(displayH_14335371, ((screenScale_12755259[0])|0));
      resizeCanvas_14335372(screenWidth_12755220[0], screenHeight_12755223[0], ((screenScale_12755259[0])|0));
    }
    

  
}
function sgn_14345406(x_14345409) {
  var result_14345410 = 0;

    result_14345410 = (((0 < x_14345409) ? 1:0) - ((x_14345409 < 0) ? 1:0));

  return result_14345410;

}
function find_14370134(a_14370138, item_14370139) {
  var result_14370140 = 0;

  BeforeRet: do {
    result_14370140 = 0;
    L1: do {
      var i_14370173 = null;
      var i_14370173_Idx = 0;
      var i_16506261 = 0;
      L2: do {
          L3: while (true) {
          if (!(i_16506261 < (a_14370138).length)) break L3;
            i_14370173 = a_14370138; i_14370173_Idx = chckIndx(i_16506261, 0, (a_14370138).length-1);
            if ((i_14370173[i_14370173_Idx] == item_14370139)) {
            break BeforeRet;
            }
            
            result_14370140 = addInt(result_14370140, 1);
            i_16506261 = addInt(i_16506261, 1);
          }
      } while(false);
    } while(false);
    result_14370140 = -1;
  } while (false);

  return result_14370140;

}
function contains_14370120(a_14370124, item_14370125) {
  var result_14370126 = false;

  BeforeRet: do {
    result_14370126 = (0 <= find_14370134(a_14370124, item_14370125));
    break BeforeRet;
  } while (false);

  return result_14370126;

}
function toPint_14370366(x_14370369) {
  var result_14370370 = 0;

  BeforeRet: do {
    result_14370370 = x_14370369;
    break BeforeRet;
  } while (false);

  return result_14370370;

}
function toPint_12755100(x_12755102) {
  var result_12755103 = 0;

  BeforeRet: do {
    result_12755103 = Math.floor(x_12755102);
    break BeforeRet;
  } while (false);

  return result_12755103;

}
function setButtonState_12665015(self_12665017, button_12665018, down_12665019) {
    var Tmp1;

  BeforeRet: do {
    if ((15 < button_12665018)) {
    break BeforeRet;
    }
    
    if (down_12665019) {
    Tmp1 = 1;
    }
    else {
    Tmp1 = -2;
    }
    
    self_12665017.buttons[chckIndx(button_12665018, 0, (self_12665017.buttons).length-1)] = Tmp1;
  } while (false);

  
}
function HEX21HEX26_2316070(h_2316072, val_2316073) {
  var result_2316074 = 0;

    var h_2316075 = (h_2316072 >>> 0);
    var val_2316076 = (val_2316073 >>> 0);
    var res_2316077 = ((h_2316075 + val_2316076) >>> 0);
    res_2316077 = ((res_2316077 + (res_2316077 << 10)) >>> 0);
    res_2316077 = (res_2316077 ^ ((res_2316077 >>> 0) >>> 6));
    result_2316074 = (res_2316077|0);

  return result_2316074;

}
function HEX21HEX24_2316105(h_2316107) {
  var result_2316108 = 0;

    var h_2316109 = (h_2316107 >>> 0);
    var res_2316117 = ((h_2316109 + (h_2316109 << 3)) >>> 0);
    res_2316117 = (res_2316117 ^ ((res_2316117 >>> 0) >>> 11));
    res_2316117 = ((res_2316117 + (res_2316117 << 15)) >>> 0);
    result_2316108 = (res_2316117|0);

  return result_2316108;

}
function hash_12571109(a_12571111) {
  var result_12571112 = 0;

    var h_12571113 = 0;
    h_12571113 = HEX21HEX26_2316070(h_12571113, ((a_12571111)|0));
    result_12571112 = HEX21HEX24_2316105(h_12571113);

  return result_12571112;

}
function rawGet_14385340(t_14385344, key_14385345, hc_14385346, hc_14385346_Idx) {
            var Tmp3;

  var result_14385347 = 0;

  BeforeRet: do {
    hc_14385346[hc_14385346_Idx] = hash_12571109(key_14385345);
    if ((hc_14385346[hc_14385346_Idx] == 0)) {
    hc_14385346[hc_14385346_Idx] = 314159265;
    }
    
    if (((t_14385344.data).length == 0)) {
    result_14385347 = -1;
    break BeforeRet;
    }
    
    var h_14395140 = (hc_14385346[hc_14385346_Idx] & ((t_14385344.data).length-1));
    L1: do {
        L2: while (true) {
        if (!isFilled_2393218(t_14385344.data[chckIndx(h_14395140, 0, (t_14385344.data).length-1)].Field0)) break L2;
            if (!(t_14385344.data[chckIndx(h_14395140, 0, (t_14385344.data).length-1)].Field0 == hc_14385346[hc_14385346_Idx])) Tmp3 = false; else {              Tmp3 = (t_14385344.data[chckIndx(h_14395140, 0, (t_14385344.data).length-1)].Field1 == key_14385345);            }          if (Tmp3) {
          result_14385347 = h_14395140;
          break BeforeRet;
          }
          
          h_14395140 = nextTry_2395014(h_14395140, ((t_14385344.data).length-1));
        }
    } while(false);
    result_14385347 = subInt(-1, h_14395140);
  } while (false);

  return result_14385347;

}
function hasKey_14385324(t_14385329, key_14385330) {
  var result_14385331 = false;

    var hc_14385332 = [0];
    result_14385331 = (0 <= rawGet_14385340(t_14385329, key_14385330, hc_14385332, 0));

  return result_14385331;

}
function toNicoKeycode_14332230(x_14332232) {
      var Tmp1;

  var result_14332233 = 0;

  BeforeRet: do {
    var x_14332234 = x_14332232;
      if (!(65 <= x_14332234)) Tmp1 = false; else {        Tmp1 = (x_14332234 <= 90);      }    if (Tmp1) {
    x_14332234 = addInt(x_14332234, 32);
    }
    
    result_14332233 = chckRange(x_14332234, 0, 1073742110);
    break BeforeRet;
  } while (false);

  return result_14332233;

}
function HEX5BHEX5D_14395821(t_14395827, key_14395828) {
  var result_14395830 = null;
  var result_14395830_Idx = 0;

    var hcHEX60gensym22_14395831 = [0];
    var indexHEX60gensym22_14395840 = rawGet_14385340(t_14395827, key_14395828, hcHEX60gensym22_14395831, 0);
    if ((0 <= indexHEX60gensym22_14395840)) {
    result_14395830 = t_14395827.data[chckIndx(indexHEX60gensym22_14395840, 0, (t_14395827.data).length-1)]; result_14395830_Idx = "Field2";
    }
    else {
      raiseException({message: (makeNimstrLit("key not found: ") || []).concat(reprEnum(key_14395828, NTI11726506) || []), parent: null, m_type: NTI1194645, name: null, trace: [], up: null}, "KeyError");
    }
    

  return [result_14395830, result_14395830_Idx];

}
function mustRehash_14430601(t_14430604) {
  var result_14430605 = false;

    if (!((t_14430604.counter < (t_14430604.data).length))) {
    failedAssertImpl_1305480(makeNimstrLit("hashcommon.nim(34, 9) `\x0At.counter < t.dataLen` "));
    }
    
    result_14430605 = ((mulInt((t_14430604.data).length, 2) < mulInt(t_14430604.counter, 3)) || (subInt((t_14430604.data).length, t_14430604.counter) < 4));

  return result_14430605;

}
function rawInsert_14456122(t_14456128, data_14456131, data_14456131_Idx, key_14456132, val_14456133, hc_14456134, h_14456135) {
    data_14456131[data_14456131_Idx][chckIndx(h_14456135, 0, (data_14456131[data_14456131_Idx]).length-1)].Field1 = key_14456132;
    data_14456131[data_14456131_Idx][chckIndx(h_14456135, 0, (data_14456131[data_14456131_Idx]).length-1)].Field2 = val_14456133;
    data_14456131[data_14456131_Idx][chckIndx(h_14456135, 0, (data_14456131[data_14456131_Idx]).length-1)].Field0 = hc_14456134;

  
}
function enlarge_14455161(t_14455167) {
    var n_14455175 = [];
    n_14455175 = new Array(chckRange(mulInt((t_14455167.data).length, 2), 0, 2147483647)); for (var i=0;i<chckRange(mulInt((t_14455167.data).length, 2), 0, 2147483647);++i) {n_14455175[i]={Field0: 0, Field1: 0, Field2: 0};}    var Tmp1 = t_14455167.data; t_14455167.data = n_14455175; n_14455175 = Tmp1;    L2: do {
      var i_14455335 = 0;
      var colontmp__16506320 = 0;
      colontmp__16506320 = ((n_14455175).length-1);
      var res_16506321 = 0;
      L3: do {
          L4: while (true) {
          if (!(res_16506321 <= colontmp__16506320)) break L4;
            i_14455335 = res_16506321;
            var eh_14455491 = n_14455175[chckIndx(i_14455335, 0, (n_14455175).length-1)].Field0;
            if (isFilled_2393218(eh_14455491)) {
            var j_14455498 = (eh_14455491 & ((t_14455167.data).length-1));
            L5: do {
                L6: while (true) {
                if (!isFilled_2393218(t_14455167.data[chckIndx(j_14455498, 0, (t_14455167.data).length-1)].Field0)) break L6;
                  j_14455498 = nextTry_2395014(j_14455498, ((t_14455167.data).length-1));
                }
            } while(false);
            rawInsert_14456122(t_14455167, t_14455167, "data", n_14455175[chckIndx(i_14455335, 0, (n_14455175).length-1)].Field1, n_14455175[chckIndx(i_14455335, 0, (n_14455175).length-1)].Field2, eh_14455491, j_14455498);
            }
            
            res_16506321 = addInt(res_16506321, 1);
          }
      } while(false);
    } while(false);

  
}
function rawGetKnownHC_14456628(t_14456632, key_14456633, hc_14456634) {
  var result_14456635 = 0;

  BeforeRet: do {
    if (((t_14456632.data).length == 0)) {
    result_14456635 = -1;
    break BeforeRet;
    }
    
    var h_14460140 = (hc_14456634 & ((t_14456632.data).length-1));
    L1: do {
        L2: while (true) {
        if (!isFilled_2393218(t_14456632.data[chckIndx(h_14460140, 0, (t_14456632.data).length-1)].Field0)) break L2;
          if (((t_14456632.data[chckIndx(h_14460140, 0, (t_14456632.data).length-1)].Field0 == hc_14456634) && (t_14456632.data[chckIndx(h_14460140, 0, (t_14456632.data).length-1)].Field1 == key_14456633))) {
          result_14456635 = h_14460140;
          break BeforeRet;
          }
          
          h_14460140 = nextTry_2395014(h_14460140, ((t_14456632.data).length-1));
        }
    } while(false);
    result_14456635 = subInt(-1, h_14460140);
  } while (false);

  return result_14456635;

}
function HEX5BHEX5DHEX3D_14400144(t_14400150, key_14400151, val_14400152) {
    if (((t_14400150.data).length == 0)) {
    var correctSizeHEX60gensym15_14410001 = slotsNeeded_2395048(32);
    t_14400150.counter = 0;
    t_14400150.data = new Array(chckRange(correctSizeHEX60gensym15_14410001, 0, 2147483647)); for (var i=0;i<chckRange(correctSizeHEX60gensym15_14410001, 0, 2147483647);++i) {t_14400150.data[i]={Field0: 0, Field1: 0, Field2: 0};}    }
    
    var hc_14415601 = [0];
    var index_14415610 = rawGet_14385340(t_14400150, key_14400151, hc_14415601, 0);
    if ((0 <= index_14415610)) {
    t_14400150.data[chckIndx(index_14415610, 0, (t_14400150.data).length-1)].Field2 = val_14400152;
    }
    else {
      if (((t_14400150.data).length == 0)) {
      var correctSizeHEX60gensym18_14425001 = slotsNeeded_2395048(32);
      t_14400150.counter = 0;
      t_14400150.data = new Array(chckRange(correctSizeHEX60gensym18_14425001, 0, 2147483647)); for (var i=0;i<chckRange(correctSizeHEX60gensym18_14425001, 0, 2147483647);++i) {t_14400150.data[i]={Field0: 0, Field1: 0, Field2: 0};}      }
      
      if (mustRehash_14430601(t_14400150)) {
      enlarge_14455161(t_14400150);
      index_14415610 = rawGetKnownHC_14456628(t_14400150, key_14400151, hc_14415601[0]);
      }
      
      index_14415610 = subInt(-1, index_14415610);
      rawInsert_14456122(t_14400150, t_14400150, "data", key_14400151, val_14400152, hc_14415601[0], index_14415610);
      t_14400150.counter = addInt(t_14400150.counter, 1);
    }
    

  
}
function createWindow_14345310(title_14345312, w_14345313, h_14345314, scale_14345315, fullscreen_14345316) {
    function HEX3Aanonymous_14345317(e_14345320) {
        resize_14335368(window.innerWidth, window.innerHeight);

      
    }
    function HEX3Aanonymous_14345334(e_14345337) {
        var e_14345338 = e_14345337;
        mouseDetected_12755338[0] = true;
        var scale_14345339 = (canvas_14332016[0].clientWidth / screenWidth_12755220[0]);
        mouseX_12755339[0] = (((e_14345338.offsetX / scale_14345339))|0);
        mouseY_12755340[0] = (((e_14345338.offsetY / scale_14345339))|0);
        mouseRawX_12755341[0] = e_14345338.offsetX;
        mouseRawY_12755342[0] = e_14345338.offsetY;

      
    }
    function HEX3Aanonymous_14345383(e_14345386) {
        var e_14345387 = e_14345386;
        mouseButtonsDown_12755352[0][chckIndx(e_14345387.button, 0, (mouseButtonsDown_12755352[0]).length-1)] = true;
        e_14345387.preventDefault();

      
    }
    function HEX3Aanonymous_14345401(e_14345404) {
        var e_14345405 = e_14345404;
        mouseWheelState_12755357[0] = sgn_14345406(e_14345405.deltaY);
        e_14345405.preventDefault();

      
    }
    function HEX3Aanonymous_14345460(e_14345463) {
        var e_14345464 = e_14345463;
        mouseButtonsDown_12755352[0][chckIndx(e_14345464.button, 0, (mouseButtonsDown_12755352[0]).length-1)] = false;
        e_14345464.preventDefault();

      
    }
    function HEX3Aanonymous_14345478(e_14345481) {
        e_14345481.preventDefault();

      
    }
    function HEX3Aanonymous_14345495(e_14345498) {
        if ((fullscreen_14345316 && !(requestedFullscreen_14345291[0]))) {
        canvas_14332016[0].requestFullscreen();
        }
        
        var e_14345499 = e_14345498;
        e_14345499.preventDefault();
        var scale_14345500 = (canvas_14332016[0].clientWidth / screenWidth_12755220[0]);
        if (touchMouseEmulation_12755143[0]) {
        mouseButtonsDown_12755352[0][chckIndx(0, 0, (mouseButtonsDown_12755352[0]).length-1)] = true;
        mouseX_12755339[0] = (((subInt(e_14345499.touches[chckIndx(0, 0, (e_14345499.touches).length-1)].pageX, e_14345499.target.offsetLeft) / scale_14345500))|0);
        mouseY_12755340[0] = (((subInt(e_14345499.touches[chckIndx(0, 0, (e_14345499.touches).length-1)].pageY, e_14345499.target.offsetTop) / scale_14345500))|0);
        }
        
        L1: do {
          var t_14355214 = null;
          var t_14355214_Idx = 0;
          var i_16506218 = 0;
          var L_16506219 = (e_14345499.changedTouches).length;
          L2: do {
              L3: while (true) {
              if (!(i_16506218 < L_16506219)) break L3;
                t_14355214 = e_14345499.changedTouches; t_14355214_Idx = chckIndx(i_16506218, 0, (e_14345499.changedTouches).length-1);
                var sx_14355215 = subInt(t_14355214[t_14355214_Idx].pageX, e_14345499.target.offsetLeft);
                var sy_14355216 = subInt(t_14355214[t_14355214_Idx].pageY, e_14345499.target.offsetTop);
                touches_12755142[0].push({state: 0, id: t_14355214[t_14355214_Idx].identifier, sx: sx_14355215, sy: sy_14355216, x: (((sx_14355215 / scale_14345500))|0), y: (((sy_14355216 / scale_14345500))|0), xrel: 0.0, yrel: 0.0, xrelraw: 0.0, yrelraw: 0.0});;
                i_16506218 = addInt(i_16506218, 1);
                if (!(((e_14345499.changedTouches).length == L_16506219))) {
                failedAssertImpl_1305480(makeNimstrLit("iterators.nim(204, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          } while(false);
        } while(false);

      
    }
    function HEX3Aanonymous_14355329(e_14355332) {
        var e_14355333 = e_14355332;
        e_14355333.preventDefault();
        var scale_14355334 = (canvas_14332016[0].clientWidth / screenWidth_12755220[0]);
        if (touchMouseEmulation_12755143[0]) {
        mouseX_12755339[0] = (((subInt(e_14355333.touches[chckIndx(0, 0, (e_14355333.touches).length-1)].pageX, e_14355333.target.offsetLeft) / scale_14355334))|0);
        mouseY_12755340[0] = (((subInt(e_14355333.touches[chckIndx(0, 0, (e_14355333.touches).length-1)].pageY, e_14355333.target.offsetTop) / scale_14355334))|0);
        }
        
        L1: do {
          var t_14355342 = null;
          var t_14355342_Idx = 0;
          var i_16506256 = 0;
          var L_16506257 = (e_14355333.changedTouches).length;
          L2: do {
              L3: while (true) {
              if (!(i_16506256 < L_16506257)) break L3;
                t_14355342 = e_14355333.changedTouches; t_14355342_Idx = chckIndx(i_16506256, 0, (e_14355333.changedTouches).length-1);
                L4: do {
                  var et_14365215 = null;
                  var i_16506253 = 0;
                  var L_16506254 = (touches_12755142[0]).length;
                  L5: do {
                      L6: while (true) {
                      if (!(i_16506253 < L_16506254)) break L6;
                        et_14365215 = touches_12755142[0][chckIndx(i_16506253, 0, (touches_12755142[0]).length-1)];
                        if ((et_14365215.id == t_14355342[t_14355342_Idx].identifier)) {
                        if (!(contains_14370120([0, 3, 4], et_14365215.state))) {
                        et_14365215.state = 2;
                        }
                        
                        var sx_14370230 = subInt(t_14355342[t_14355342_Idx].pageX, e_14355333.target.offsetLeft);
                        var sy_14370231 = subInt(t_14355342[t_14355342_Idx].pageY, e_14355333.target.offsetTop);
                        et_14365215.xrelraw = (sx_14370230 - et_14365215.sx);
                        et_14365215.yrelraw = (sy_14370231 - et_14365215.sy);
                        et_14365215.xrel = ((sx_14370230 - et_14365215.sx) / scale_14355334);
                        et_14365215.yrel = ((sy_14370231 - et_14365215.sy) / scale_14355334);
                        et_14365215.sx = sx_14370230;
                        et_14365215.sy = sy_14370231;
                        et_14365215.x = (((sx_14370230 / scale_14355334))|0);
                        et_14365215.y = (((sy_14370231 / scale_14355334))|0);
                        break L4;
                        }
                        
                        i_16506253 = addInt(i_16506253, 1);
                        if (!(((touches_12755142[0]).length == L_16506254))) {
                        failedAssertImpl_1305480(makeNimstrLit("iterators.nim(213, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                        }
                        
                      }
                  } while(false);
                } while(false);
                i_16506256 = addInt(i_16506256, 1);
                if (!(((e_14355333.changedTouches).length == L_16506257))) {
                failedAssertImpl_1305480(makeNimstrLit("iterators.nim(204, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          } while(false);
        } while(false);

      
    }
    function HEX3Aanonymous_14370299(e_14370302) {
        var e_14370303 = e_14370302;
        var scale_14370304 = (canvas_14332016[0].clientWidth / screenWidth_12755220[0]);
        e_14370303.preventDefault();
        if (touchMouseEmulation_12755143[0]) {
        mouseButtonsDown_12755352[0][chckIndx(0, 0, (mouseButtonsDown_12755352[0]).length-1)] = false;
        }
        
        L1: do {
          var t_14370312 = null;
          var t_14370312_Idx = 0;
          var i_16506274 = 0;
          var L_16506275 = (e_14370303.changedTouches).length;
          L2: do {
              L3: while (true) {
              if (!(i_16506274 < L_16506275)) break L3;
                t_14370312 = e_14370303.changedTouches; t_14370312_Idx = chckIndx(i_16506274, 0, (e_14370303.changedTouches).length-1);
                L4: do {
                  var et_14370323 = null;
                  var i_16506271 = 0;
                  var L_16506272 = (touches_12755142[0]).length;
                  L5: do {
                      L6: while (true) {
                      if (!(i_16506271 < L_16506272)) break L6;
                        et_14370323 = touches_12755142[0][chckIndx(i_16506271, 0, (touches_12755142[0]).length-1)];
                        if ((et_14370323.id == t_14370312[t_14370312_Idx].identifier)) {
                        et_14370323.state = 3;
                        var sx_14370324 = subInt(t_14370312[t_14370312_Idx].pageX, e_14370303.target.offsetLeft);
                        var sy_14370325 = subInt(t_14370312[t_14370312_Idx].pageY, e_14370303.target.offsetTop);
                        et_14370323.sx = sx_14370324;
                        et_14370323.sy = sy_14370325;
                        et_14370323.xrelraw = (sx_14370324 - et_14370323.sx);
                        et_14370323.yrelraw = (sy_14370325 - et_14370323.sy);
                        et_14370323.xrel = ((sx_14370324 - et_14370323.sx) / scale_14370304);
                        et_14370323.yrel = ((sy_14370325 - et_14370323.sy) / scale_14370304);
                        et_14370323.x = (((sx_14370324 / scale_14370304))|0);
                        et_14370323.y = (((sy_14370325 / scale_14370304))|0);
                        break L4;
                        }
                        
                        i_16506271 = addInt(i_16506271, 1);
                        if (!(((touches_12755142[0]).length == L_16506272))) {
                        failedAssertImpl_1305480(makeNimstrLit("iterators.nim(213, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                        }
                        
                      }
                  } while(false);
                } while(false);
                i_16506274 = addInt(i_16506274, 1);
                if (!(((e_14370303.changedTouches).length == L_16506275))) {
                failedAssertImpl_1305480(makeNimstrLit("iterators.nim(204, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          } while(false);
        } while(false);

      
    }
    function HEX3Aanonymous_14370339(e_14370342) {
        var e_14370343 = e_14370342;
        e_14370343.preventDefault();
        var scale_14370344 = (canvas_14332016[0].clientWidth / screenWidth_12755220[0]);
        if (touchMouseEmulation_12755143[0]) {
        mouseButtonsDown_12755352[0][chckIndx(0, 0, (mouseButtonsDown_12755352[0]).length-1)] = false;
        }
        
        L1: do {
          var t_14370352 = null;
          var t_14370352_Idx = 0;
          var i_16506292 = 0;
          var L_16506293 = (e_14370343.changedTouches).length;
          L2: do {
              L3: while (true) {
              if (!(i_16506292 < L_16506293)) break L3;
                t_14370352 = e_14370343.changedTouches; t_14370352_Idx = chckIndx(i_16506292, 0, (e_14370343.changedTouches).length-1);
                L4: do {
                  var et_14370363 = null;
                  var i_16506289 = 0;
                  var L_16506290 = (touches_12755142[0]).length;
                  L5: do {
                      L6: while (true) {
                      if (!(i_16506289 < L_16506290)) break L6;
                        et_14370363 = touches_12755142[0][chckIndx(i_16506289, 0, (touches_12755142[0]).length-1)];
                        if ((et_14370363.id == t_14370352[t_14370352_Idx].identifier)) {
                        et_14370363.state = 4;
                        var sx_14370364 = subInt(t_14370352[t_14370352_Idx].pageX, e_14370343.target.offsetLeft);
                        var sy_14370365 = subInt(t_14370352[t_14370352_Idx].pageY, e_14370343.target.offsetTop);
                        et_14370363.xrelraw = subInt(toPint_14370366(sx_14370364), toPint_12755100(et_14370363.sx));
                        et_14370363.yrelraw = subInt(toPint_14370366(sy_14370365), toPint_12755100(et_14370363.sy));
                        et_14370363.xrel = (subInt(toPint_14370366(sx_14370364), toPint_12755100(et_14370363.sx)) / scale_14370344);
                        et_14370363.yrel = (subInt(toPint_14370366(sy_14370365), toPint_12755100(et_14370363.sy)) / scale_14370344);
                        et_14370363.x = (((sx_14370364 / scale_14370344))|0);
                        et_14370363.y = (((sy_14370365 / scale_14370344))|0);
                        break L4;
                        }
                        
                        i_16506289 = addInt(i_16506289, 1);
                        if (!(((touches_12755142[0]).length == L_16506290))) {
                        failedAssertImpl_1305480(makeNimstrLit("iterators.nim(213, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                        }
                        
                      }
                  } while(false);
                } while(false);
                i_16506292 = addInt(i_16506292, 1);
                if (!(((e_14370343.changedTouches).length == L_16506293))) {
                failedAssertImpl_1305480(makeNimstrLit("iterators.nim(204, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          } while(false);
        } while(false);

      
    }
    function HEX3Aanonymous_14375009(event_14375012) {
          var Tmp7;
            var Tmp8;

        var event_14375013 = event_14375012;
        L1: do {
          var btn_14375088 = 0;
          var keys_14375089 = [];
          var i_16506307 = 0;
          if ((i_16506307 <= 15)) {
          L2: do {
              L3: while (true) {
              if (!true) break L3;
                btn_14375088 = i_16506307;
                keys_14375089 = keymap_12755232[0][chckIndx(i_16506307, 0, (keymap_12755232[0]).length-1)];
                L4: do {
                  var key_14385214 = null;
                  var key_14385214_Idx = 0;
                  var i_16506300 = 0;
                  var L_16506301 = (keys_14375089).length;
                  L5: do {
                      L6: while (true) {
                      if (!(i_16506300 < L_16506301)) break L6;
                        key_14385214 = keys_14375089; key_14385214_Idx = chckIndx(i_16506300, 0, (keys_14375089).length-1);
                        if ((event_14375013.keyCode == key_14385214[key_14385214_Idx])) {
                        if ((controllers_12755242[0][chckIndx(0, 0, (controllers_12755242[0]).length-1)].buttons[chckIndx(btn_14375088, 0, (controllers_12755242[0][chckIndx(0, 0, (controllers_12755242[0]).length-1)].buttons).length-1)] <= 0)) {
                        setButtonState_12665015(controllers_12755242[0][chckIndx(0, 0, (controllers_12755242[0]).length-1)], btn_14375088, true);
                        }
                        
                        event_14375013.preventDefault();
                        }
                        
                        i_16506300 = addInt(i_16506300, 1);
                        if (!(((keys_14375089).length == L_16506301))) {
                        failedAssertImpl_1305480(makeNimstrLit("iterators.nim(204, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                        }
                        
                      }
                  } while(false);
                } while(false);
                if ((15 <= i_16506307)) {
                break L2;
                }
                
                i_16506307 = addInt(i_16506307, 1);
              }
          } while(false);
          }
          
        } while(false);
          if (!(hasKey_14385324(keysDown_12685629[0], toNicoKeycode_14332230(event_14375013.keyCode)))) Tmp7 = true; else {            Tmp7 = ((Tmp8 = HEX5BHEX5D_14395821(keysDown_12685629[0], toNicoKeycode_14332230(event_14375013.keyCode)), Tmp8)[0][Tmp8[1]] == 0);          }        if (Tmp7) {
        HEX5BHEX5DHEX3D_14400144(keysDown_12685629[0], toNicoKeycode_14332230(event_14375013.keyCode), 1);
        }
        

      
    }
    function HEX3Aanonymous_14460722(event_14460725) {
        var event_14460726 = event_14460725;
        L1: do {
          var btn_14460737 = 0;
          var keys_14460738 = [];
          var i_16506332 = 0;
          if ((i_16506332 <= 15)) {
          L2: do {
              L3: while (true) {
              if (!true) break L3;
                btn_14460737 = i_16506332;
                keys_14460738 = keymap_12755232[0][chckIndx(i_16506332, 0, (keymap_12755232[0]).length-1)];
                L4: do {
                  var key_14460746 = null;
                  var key_14460746_Idx = 0;
                  var i_16506329 = 0;
                  var L_16506330 = (keys_14460738).length;
                  L5: do {
                      L6: while (true) {
                      if (!(i_16506329 < L_16506330)) break L6;
                        key_14460746 = keys_14460738; key_14460746_Idx = chckIndx(i_16506329, 0, (keys_14460738).length-1);
                        if ((event_14460726.keyCode == key_14460746[key_14460746_Idx])) {
                        setButtonState_12665015(controllers_12755242[0][chckIndx(0, 0, (controllers_12755242[0]).length-1)], btn_14460737, false);
                        event_14460726.preventDefault();
                        }
                        
                        i_16506329 = addInt(i_16506329, 1);
                        if (!(((keys_14460738).length == L_16506330))) {
                        failedAssertImpl_1305480(makeNimstrLit("iterators.nim(204, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                        }
                        
                      }
                  } while(false);
                } while(false);
                if ((15 <= i_16506332)) {
                break L2;
                }
                
                i_16506332 = addInt(i_16506332, 1);
              }
          } while(false);
          }
          
        } while(false);
        HEX5BHEX5DHEX3D_14400144(keysDown_12685629[0], toNicoKeycode_14332230(event_14460726.keyCode), 0);

      
    }

    targetScreenWidth_12755212[0] = w_14345313;
    targetScreenHeight_12755215[0] = h_14345314;
    document.title = toJSStr(title_14345312);
    if (fixedScreenSize_12755216[0]) {
    resizeCanvas_14335372(targetScreenWidth_12755212[0], targetScreenHeight_12755215[0], scale_14345315);
    }
    else {
    resize_14335368(window.innerWidth, window.innerHeight);
    }
    
    window.addEventListener("resize", HEX3Aanonymous_14345317, false);
    canvas_14332016[0].onmousemove = HEX3Aanonymous_14345334;
    canvas_14332016[0].onmousedown = HEX3Aanonymous_14345383;
    canvas_14332016[0].addEventListener("wheel", HEX3Aanonymous_14345401, false);
    canvas_14332016[0].onmouseup = HEX3Aanonymous_14345460;
    canvas_14332016[0].addEventListener("contextmenu", HEX3Aanonymous_14345478, false);
    canvas_14332016[0].addEventListener("touchstart", HEX3Aanonymous_14345495, false);
    canvas_14332016[0].addEventListener("touchmove", HEX3Aanonymous_14355329, false);
    canvas_14332016[0].addEventListener("touchend", HEX3Aanonymous_14370299, false);
    canvas_14332016[0].addEventListener("touchcancel", HEX3Aanonymous_14370339, false);
    var holder_14370409 = document.getElementById("nicogame");
    if (!((holder_14370409 == null))) {
    holder_14370409.appendChild(canvas_14332016[0]);
    }
    
    frame_12755294[0] = 0;
    window.onkeydown = HEX3Aanonymous_14375009;
    window.onkeyup = HEX3Aanonymous_14460722;

  
}
function createWindow_16440171(title_16440173, w_16440174, h_16440175, scale_16440176, fullscreen_16440177) {
    createWindow_14345310(title_16440173, w_16440174, h_16440175, scale_16440176, fullscreen_16440177);
    clip_14996410();

  
}
function present_14335377() {
    L1: do {
      var i_14345245 = 0;
      var v_14345246 = null;
      var v_14345246_Idx = 0;
      var i_16506377 = 0;
      var L_16506378 = (swCanvas_12755196[0].data).length;
      L2: do {
          L3: while (true) {
          if (!(i_16506377 < L_16506378)) break L3;
            i_14345245 = i_16506377;
            v_14345246 = swCanvas_12755196[0].data; v_14345246_Idx = chckIndx(i_16506377, 0, (swCanvas_12755196[0].data).length-1);
            swCanvas32_14332015[0].data[chckIndx(mulInt(i_14345245, 4), 0, (swCanvas32_14332015[0].data).length-1)] = currentPalette_12755140[0].Field1[chckIndx(paletteMapDisplay_12755304[0][chckIndx(v_14345246[v_14345246_Idx], 0, (paletteMapDisplay_12755304[0]).length-1)], 0, (currentPalette_12755140[0].Field1).length-1)]["Field0"];
            swCanvas32_14332015[0].data[chckIndx(addInt(mulInt(i_14345245, 4), 1), 0, (swCanvas32_14332015[0].data).length-1)] = currentPalette_12755140[0].Field1[chckIndx(paletteMapDisplay_12755304[0][chckIndx(v_14345246[v_14345246_Idx], 0, (paletteMapDisplay_12755304[0]).length-1)], 0, (currentPalette_12755140[0].Field1).length-1)]["Field1"];
            swCanvas32_14332015[0].data[chckIndx(addInt(mulInt(i_14345245, 4), 2), 0, (swCanvas32_14332015[0].data).length-1)] = currentPalette_12755140[0].Field1[chckIndx(paletteMapDisplay_12755304[0][chckIndx(v_14345246[v_14345246_Idx], 0, (paletteMapDisplay_12755304[0]).length-1)], 0, (currentPalette_12755140[0].Field1).length-1)]["Field2"];
            swCanvas32_14332015[0].data[chckIndx(addInt(mulInt(i_14345245, 4), 3), 0, (swCanvas32_14332015[0].data).length-1)] = 255;
            i_16506377 = addInt(i_16506377, 1);
            if (!(((swCanvas_12755196[0].data).length == L_16506378))) {
            failedAssertImpl_1305480(makeNimstrLit("iterators.nim(147, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      } while(false);
    } while(false);
    ctx_14332014[0].putImageData(swCanvas32_14332015[0], 0.0, 0.0);

  
}
function update_12575262(self_12575264) {
              var Tmp7;
              var Tmp8;

    L1: do {
      var i_12575436 = 0;
      var res_16506384 = 0;
      L2: do {
          L3: while (true) {
          if (!(res_16506384 <= 15)) break L3;
            i_12575436 = chckRange(res_16506384, 0, 15);
            if ((self_12575264.kind == 1)) {
            if ((i_12575436 == 9)) {
            if ((self_12575264.deadzone < self_12575264.axes[chckIndx(4, 0, (self_12575264.axes).length-1)].Field0)) {
            self_12575264.buttons[chckIndx(i_12575436, 0, (self_12575264.buttons).length-1)] = addInt(self_12575264.buttons[chckIndx(i_12575436, 0, (self_12575264.buttons).length-1)], 1);
            }
            else {
              self_12575264.buttons[chckIndx(i_12575436, 0, (self_12575264.buttons).length-1)] = 0;
            }
            
            }
            else {
            if ((i_12575436 == 12)) {
            if ((self_12575264.deadzone < self_12575264.axes[chckIndx(5, 0, (self_12575264.axes).length-1)].Field0)) {
            self_12575264.buttons[chckIndx(i_12575436, 0, (self_12575264.buttons).length-1)] = addInt(self_12575264.buttons[chckIndx(i_12575436, 0, (self_12575264.buttons).length-1)], 1);
            }
            else {
              self_12575264.buttons[chckIndx(i_12575436, 0, (self_12575264.buttons).length-1)] = 0;
            }
            
            }
            }
            }
            
            if ((self_12575264.buttons[chckIndx(i_12575436, 0, (self_12575264.buttons).length-1)] == -1)) {
            self_12575264.buttons[chckIndx(i_12575436, 0, (self_12575264.buttons).length-1)] = 0;
            }
            else {
            if ((self_12575264.buttons[chckIndx(i_12575436, 0, (self_12575264.buttons).length-1)] == -2)) {
            self_12575264.buttons[chckIndx(i_12575436, 0, (self_12575264.buttons).length-1)] = -1;
            }
            }
            if ((1 <= self_12575264.buttons[chckIndx(i_12575436, 0, (self_12575264.buttons).length-1)])) {
            self_12575264.buttons[chckIndx(i_12575436, 0, (self_12575264.buttons).length-1)] = addInt(self_12575264.buttons[chckIndx(i_12575436, 0, (self_12575264.buttons).length-1)], 1);
            }
            
            res_16506384 = addInt(res_16506384, 1);
          }
      } while(false);
    } while(false);
    L4: do {
      var i_12590236 = 0;
      var res_16506392 = 0;
      L5: do {
          L6: while (true) {
          if (!(res_16506392 <= 5)) break L6;
            i_12590236 = chckRange(res_16506392, 0, 5);
              if (!(self_12575264.axes[chckIndx(i_12590236, 0, (self_12575264.axes).length-1)].Field1 < -(self_12575264.deadzone))) Tmp7 = false; else {                Tmp7 = (self_12575264.axes[chckIndx(i_12590236, 0, (self_12575264.axes).length-1)].Field0 < -(self_12575264.deadzone));              }            if (Tmp7) {
            self_12575264.axes[chckIndx(i_12590236, 0, (self_12575264.axes).length-1)].Field2 = addInt(self_12575264.axes[chckIndx(i_12590236, 0, (self_12575264.axes).length-1)].Field2, 1);
            }
            else {
              if (!(self_12575264.deadzone < self_12575264.axes[chckIndx(i_12590236, 0, (self_12575264.axes).length-1)].Field1)) Tmp8 = false; else {                Tmp8 = (self_12575264.deadzone < self_12575264.axes[chckIndx(i_12590236, 0, (self_12575264.axes).length-1)].Field0);              }            if (Tmp8) {
            self_12575264.axes[chckIndx(i_12590236, 0, (self_12575264.axes).length-1)].Field2 = addInt(self_12575264.axes[chckIndx(i_12590236, 0, (self_12575264.axes).length-1)].Field2, 1);
            }
            else {
              self_12575264.axes[chckIndx(i_12590236, 0, (self_12575264.axes).length-1)].Field2 = 0;
            }
            }
            res_16506392 = addInt(res_16506392, 1);
          }
      } while(false);
    } while(false);

  
}
function len_14565139(t_14565144) {
  var result_14565145 = 0;

    result_14565145 = t_14565144.counter;

  return result_14565145;

}
function resetChannel_14470160(self_14470163) {
    var Tmp2;

    if (!((self_14470163.source == null))) {
    self_14470163.source.disconnect();
++excHandler;
    Tmp2 = framePtr;
    try {
    self_14470163.source.stop();
--excHandler;
} catch (EXC) {
 var prevJSError = lastJSError;
 lastJSError = EXC;
 --excHandler;
    framePtr = Tmp2;
    lastJSError = prevJSError;
    } finally {
    framePtr = Tmp2;
    }
    self_14470163.source = null;
    }
    
    self_14470163.kind = 0;

  
}
function note_12735141(n_12735143) {
  var result_12735144 = 0.0;

  BeforeRet: do {
    result_12735144 = (Math.pow(2.0000000000000000e+00, ((n_12735143 - 6.9000000000000000e+01) / 1.2000000000000000e+01)) * 4.4000000000000000e+02);
    break BeforeRet;
  } while (false);

  return result_12735144;

}
function initNoiseBuffer_14610156(samples_14610158, freq_14610159) {
            var Tmp4;

  var result_14610160 = null;

  BeforeRet: do {
    var b_14610161 = audioContext_14332019[0].createBuffer(1, samples_14610158, ((sampleRate_12755147[0])|0));
    var data_14610162 = b_14610161.getChannelData(0);
    var nextClick_14610164 = 0;
    var outputValue_14610165 = 0.0;
    var lfsr_14610168 = 65261;
    L1: do {
      var i_14610176 = 0;
      var i_16506425 = 0;
      L2: do {
          L3: while (true) {
          if (!(i_16506425 < samples_14610158)) break L3;
            i_14610176 = i_16506425;
            var lsb_14610177 = (lfsr_14610168 & 1);
            lfsr_14610168 = (lfsr_14610168 >> 1);
            if ((lsb_14610177 == 1)) {
            lfsr_14610168 = (lfsr_14610168 ^ 46080);
            }
            
            if ((lsb_14610177 == 1)) {
            Tmp4 = 1.0000000000000000e+00;
            }
            else {
            Tmp4 = -1.0000000000000000e+00;
            }
            
            outputValue_14610165 = Tmp4;
            nextClick_14610164 = subInt(nextClick_14610164, 1);
            if ((nextClick_14610164 <= 0)) {
            nextClick_14610164 = ((((1.0000000000000000e+00 / freq_14610159) * sampleRate_12755147[0]))|0);
            }
            
            data_14610162[chckIndx(i_14610176, 0, (data_14610162).length-1)] = outputValue_14610165;
            i_16506425 = addInt(i_16506425, 1);
          }
      } while(false);
    } while(false);
    result_14610160 = b_14610161;
    break BeforeRet;
  } while (false);

  return result_14610160;

}
function synthSetOsc_14332224(self_14332227, newShape_14332228, trigger_14332229) {
      var Tmp1;
      var Tmp2;
      var Tmp3;

  BeforeRet: do {
    if ((audioContext_14332019[0] == null)) {
    break BeforeRet;
    }
    
      if (!(newShape_14332228 == self_14332227.shape)) Tmp1 = false; else {        Tmp1 = !((self_14332227.source == null));      }    if (Tmp1) {
    break BeforeRet;
    }
    
    self_14332227.shape = newShape_14332228;
    if (!((self_14332227.source == null))) {
    self_14332227.source.disconnect();
    self_14332227.source.stop();
    self_14332227.source = null;
    }
    
      if ((self_14332227.shape == 7)) Tmp2 = true; else {        Tmp2 = (self_14332227.shape == 8);      }    if (Tmp2) {
    var osc_14665019 = audioContext_14332019[0].createBufferSource();
    if ((self_14332227.shape == 7)) {
    if ((noiseBuffer_14332020[0] == null)) {
    noiseBuffer_14332020[0] = initNoiseBuffer_14610156(4096, 4.0960000000000000e+03);
    }
    
    osc_14665019.buffer = noiseBuffer_14332020[0];
    }
    else {
    if ((self_14332227.shape == 8)) {
    if ((noiseBuffer2_14332021[0] == null)) {
    noiseBuffer2_14332021[0] = initNoiseBuffer_14610156(128, 1.2800000000000000e+02);
    }
    
    osc_14665019.buffer = noiseBuffer2_14332021[0];
    }
    }
    self_14332227.source = osc_14665019;
    osc_14665019.loop = true;
    }
    else {
      var osc_14665048 = audioContext_14332019[0].createOscillator();
      switch (self_14332227.shape) {
      case 1:
        Tmp3 = makeNimstrLit("sine");
        break;
      case 2:
        Tmp3 = makeNimstrLit("square");
        break;
      case 5:
        Tmp3 = makeNimstrLit("sawtooth");
        break;
      case 6:
        Tmp3 = makeNimstrLit("triangle");
        break;
      default: 
        Tmp3 = makeNimstrLit("sine");
        break;
      }
      osc_14665048.type = toJSStr(Tmp3);
      osc_14665048.frequency.value = self_14332227.freq;
      if ((self_14332227.shape == 3)) {
      var d_14665054 = 1.2500000000000000e-01;
      var real_14665058 = new Float64Array(32);
      var imag_14665062 = new Float64Array(32);
      real_14665058[chckIndx(0, 0, (real_14665058).length-1)] = d_14665054;
      imag_14665062[chckIndx(0, 0, (imag_14665062).length-1)] = 0.0;
      L4: do {
        var i_14665071 = 0;
        var i_16506414 = 1;
        L5: do {
            L6: while (true) {
            if (!(i_16506414 < 32)) break L6;
              i_14665071 = i_16506414;
              real_14665058[chckIndx(i_14665071, 0, (real_14665058).length-1)] = ((2.0000000000000000e+00 / (i_14665071 * 3.1415926535897931e+00)) * Math.sin(((i_14665071 * 3.1415926535897931e+00) * d_14665054)));
              imag_14665062[chckIndx(i_14665071, 0, (imag_14665062).length-1)] = 0.0;
              i_16506414 = addInt(i_16506414, 1);
            }
        } while(false);
      } while(false);
      var p_14665085 = audioContext_14332019[0].createPeriodicWave(Float32Array.from(real_14665058), Float32Array.from(imag_14665062));
      osc_14665048.setPeriodicWave(p_14665085);
      }
      else {
      if ((self_14332227.shape == 4)) {
      var d_14665091 = 2.5000000000000000e-01;
      var real_14665095 = new Float64Array(32);
      var imag_14665099 = new Float64Array(32);
      real_14665095[chckIndx(0, 0, (real_14665095).length-1)] = d_14665091;
      imag_14665099[chckIndx(0, 0, (imag_14665099).length-1)] = 0.0;
      L7: do {
        var i_14665108 = 0;
        var i_16506419 = 1;
        L8: do {
            L9: while (true) {
            if (!(i_16506419 < 32)) break L9;
              i_14665108 = i_16506419;
              real_14665095[chckIndx(i_14665108, 0, (real_14665095).length-1)] = ((2.0000000000000000e+00 / (i_14665108 * 3.1415926535897931e+00)) * Math.sin(((i_14665108 * 3.1415926535897931e+00) * d_14665091)));
              imag_14665099[chckIndx(i_14665108, 0, (imag_14665099).length-1)] = 0.0;
              i_16506419 = addInt(i_16506419, 1);
            }
        } while(false);
      } while(false);
      var p_14665122 = audioContext_14332019[0].createPeriodicWave(Float32Array.from(real_14665095), Float32Array.from(imag_14665099));
      osc_14665048.setPeriodicWave(p_14665122);
      }
      }
      self_14332227.source = osc_14665048;
    }
    
    self_14332227.source.start();
    self_14332227.source.connect(self_14332227.gain);
    self_14332227.gain.connect(sfxGain_14335044[0]);
  } while (false);

  
}
function lerp_14500011(a_14500014, b_14500015, t_14500016) {
  var result_14500017 = 0.0;

  BeforeRet: do {
    result_14500017 = (a_14500014 + ((b_14500015 - a_14500014) * t_14500016));
    break BeforeRet;
  } while (false);

  return result_14500017;

}
function clamp_14520015(x_14520018, a_14520019, b_14520020) {
  var result_14520021 = 0.0;

  BeforeRet: do {
    if ((x_14520018 < a_14520019)) {
    result_14520021 = a_14520019;
    break BeforeRet;
    }
    
    if ((b_14520020 < x_14520018)) {
    result_14520021 = b_14520020;
    break BeforeRet;
    }
    
    result_14520021 = x_14520018;
    break BeforeRet;
  } while (false);

  return result_14520021;

}
function clamp_14525043(x_14525046, a_14525047, b_14525048) {
  var result_14525049 = 0.0;

  BeforeRet: do {
    if ((x_14525046 < a_14525047)) {
    result_14525049 = a_14525047;
    break BeforeRet;
    }
    
    if ((b_14525048 < x_14525046)) {
    result_14525049 = b_14525048;
    break BeforeRet;
    }
    
    result_14525049 = x_14525046;
    break BeforeRet;
  } while (false);

  return result_14525049;

}
function lerp_14525023(a_14525026, b_14525027, t_14525028) {
  var result_14525029 = 0.0;

  BeforeRet: do {
    result_14525029 = (a_14525026 + ((b_14525027 - a_14525026) * t_14525028));
    break BeforeRet;
  } while (false);

  return result_14525029;

}
function audioClock_14475052(self_14475055) {
      var Tmp2;
      var Tmp4;

  BeforeRet: do {
    switch (self_14475055.kind) {
    case 0:
      break;
    case 1:
      if ((0 < self_14475055.length)) {
      self_14475055.length = subInt(self_14475055.length, 1);
      if ((self_14475055.length == 0)) {
      resetChannel_14470160(self_14475055);
      break BeforeRet;
      }
      
      }
      
      if ((0 <= self_14475055.synthDataIndex)) {
      var i_14485010 = divInt(self_14475055.synthDataIndex, addInt(((self_14475055.synthData.Field0)|0), 1));
      if ((i_14485010 < ((self_14475055.synthData.Field2)|0))) {
      self_14475055.basefreq = note_12735141(((self_14475055.synthData.Field1[chckIndx(i_14485010, 0, (self_14475055.synthData.Field1).length-1)].Field0)|0));
      self_14475055.targetFreq = self_14475055.basefreq;
      self_14475055.freq = self_14475055.basefreq;
      self_14475055.trigger = true;
      self_14475055.init = chckRange(self_14475055.synthData.Field1[chckIndx(i_14485010, 0, (self_14475055.synthData.Field1).length-1)].Field1, 0, 15);
      self_14475055.env = 0;
      self_14475055.envPhase = 0;
      self_14475055.pchange = 0;
      synthSetOsc_14332224(self_14475055, self_14475055.synthData.Field1[chckIndx(i_14485010, 0, (self_14475055.synthData.Field1).length-1)].Field2, false);
      self_14475055.synthDataIndex = addInt(self_14475055.synthDataIndex, 1);
      }
      else {
        if ((0 < self_14475055.synthData.Field3)) {
        if (!((self_14475055.synthData.Field3 == 15))) {
        self_14475055.synthData.Field3 = ((self_14475055.synthData.Field3 - 1) & 0xff);
        }
        
        if ((0 < self_14475055.synthData.Field3)) {
        self_14475055.synthDataIndex = 0;
        }
        
        }
        else {
        resetChannel_14470160(self_14475055);
        }
        
      }
      
      }
      
      if ((self_14475055.glide == 0)) {
      self_14475055.freq = self_14475055.targetFreq;
      }
      else {
        self_14475055.freq = lerp_14500011(self_14475055.freq, self_14475055.targetFreq, (1.0000000000000000e+00 - (self_14475055.glide / 1.6000000000000000e+01)));
      }
      
      self_14475055.envPhase = addInt(self_14475055.envPhase, 1);
      if (!((self_14475055.pchange == 0))) {
      self_14475055.targetFreq = (self_14475055.targetFreq + ((self_14475055.targetFreq * self_14475055.pchange) / 1.2800000000000000e+02));
      if (((sampleRate_12755147[0] / 2.0000000000000000e+00) < self_14475055.targetFreq)) {
      self_14475055.targetFreq = (sampleRate_12755147[0] / 2.0000000000000000e+00);
      }
      
      self_14475055.basefreq = self_14475055.targetFreq;
      self_14475055.freq = self_14475055.targetFreq;
      }
      
      if ((0 < self_14475055.vibamount)) {
      self_14475055.targetFreq = (self_14475055.basefreq + (((Math.sin((self_14475055.envPhase / self_14475055.vibspeed)) * self_14475055.basefreq) * 2.9999999999999999e-02) * self_14475055.vibamount));
      }
      
      if (!((self_14475055.source == null))) {
++excHandler;
      Tmp2 = framePtr;
      try {
      self_14475055.source.frequency.value = self_14475055.freq;
--excHandler;
} catch (EXC) {
 var prevJSError = lastJSError;
 lastJSError = EXC;
 --excHandler;
      framePtr = Tmp2;
++excHandler;
      Tmp4 = framePtr;
      try {
      self_14475055.source.playbackRate.value = (self_14475055.freq / 1.0000000000000000e+03);
--excHandler;
} catch (EXC) {
 var prevJSError = lastJSError;
 lastJSError = EXC;
 --excHandler;
      framePtr = Tmp4;
      lastJSError = prevJSError;
      } finally {
      framePtr = Tmp4;
      }
      lastJSError = prevJSError;
      } finally {
      framePtr = Tmp2;
      }
      }
      
      if ((self_14475055.env < 0)) {
      self_14475055.envValue = clamp_14520015(lerp_14500011((self_14475055.init / 1.5000000000000000e+01), 0.0, HEX2F_1555648(self_14475055.envPhase, mulInt(negInt(self_14475055.env), 4))), 0.0, 1.0000000000000000e+00);
      if ((self_14475055.envValue <= 0.0)) {
      resetChannel_14470160(self_14475055);
      break BeforeRet;
      }
      
      }
      else {
      if ((0 < self_14475055.env)) {
      self_14475055.envValue = clamp_14520015(lerp_14500011((self_14475055.init / 1.5000000000000000e+01), 1.0000000000000000e+00, HEX2F_1555648(self_14475055.envPhase, mulInt(self_14475055.env, 4))), 0.0, 1.0000000000000000e+00);
      }
      else {
      if ((self_14475055.env == 0)) {
      self_14475055.envValue = (self_14475055.init / 1.5000000000000000e+01);
      }
      }}
      self_14475055.gain.gain.value = clamp_14525043(lerp_14525023(self_14475055.gain.gain.value, self_14475055.envValue, 9.0000000000000002e-01), 0.0, 1.0000000000000000e+00);
      break;
    default: 
      break;
    }
  } while (false);

  
}
function audioClock_14525136() {
    if (!((audioContext_14332019[0] == null))) {
    sfxGain_14335044[0].gain.value = sfxVolume_12755145[0];
    musicGain_14335045[0].gain.value = musicVolume_12755146[0];
    masterGain_14335046[0].gain.value = masterVolume_12755144[0];
    L1: do {
      var channel_14530059 = null;
      var i_16506397 = 0;
      if ((i_16506397 <= 15)) {
      L2: do {
          L3: while (true) {
          if (!true) break L3;
            channel_14530059 = audioChannels_14332102[0][chckIndx(i_16506397, 0, (audioChannels_14332102[0]).length-1)];
            audioClock_14475052(channel_14530059);
            if ((15 <= i_16506397)) {
            break L2;
            }
            
            i_16506397 = addInt(i_16506397, 1);
          }
      } while(false);
      }
      
    } while(false);
    }
    

  
}
function step_14530097() {
              var Tmp11;
              var Tmp15;

  BeforeRet: do {
    if ((0 < loading_12755191[0])) {
    console.log("loading...", loading_12755191[0]);
    present_14335377();
    frame_12755294[0] = addInt(frame_12755294[0], 1);
    break BeforeRet;
    }
    
    mouseRelX_12755343[0] = (subInt(mouseRawX_12755341[0], lastMouseRawX_12755347[0]) / screenScale_12755259[0]);
    mouseRelY_12755344[0] = (subInt(mouseRawY_12755342[0], lastMouseRawY_12755348[0]) / screenScale_12755259[0]);
    L1: do {
      var i_14540071 = 0;
      var b_14540072 = false;
      var i_16506344 = 0;
      if ((i_16506344 <= 2)) {
      L2: do {
          L3: while (true) {
          if (!true) break L3;
            i_14540071 = i_16506344;
            b_14540072 = mouseButtonsDown_12755352[0][chckIndx(i_16506344, 0, (mouseButtonsDown_12755352[0]).length-1)];
            if (b_14540072) {
            mouseButtons_12755356[0][chckIndx(i_14540071, 0, (mouseButtons_12755356[0]).length-1)] = addInt(mouseButtons_12755356[0][chckIndx(i_14540071, 0, (mouseButtons_12755356[0]).length-1)], 1);
            }
            else {
              if ((0 < mouseButtons_12755356[0][chckIndx(i_14540071, 0, (mouseButtons_12755356[0]).length-1)])) {
              mouseButtons_12755356[0][chckIndx(i_14540071, 0, (mouseButtons_12755356[0]).length-1)] = -1;
              }
              else {
                mouseButtons_12755356[0][chckIndx(i_14540071, 0, (mouseButtons_12755356[0]).length-1)] = 0;
              }
              
            }
            
            if ((2 <= i_16506344)) {
            break L2;
            }
            
            i_16506344 = addInt(i_16506344, 1);
          }
      } while(false);
      }
      
    } while(false);
    L4: do {
      var controller_14555214 = null;
      var controller_14555214_Idx = 0;
      var i_16506348 = 0;
      var L_16506349 = (controllers_12755242[0]).length;
      L5: do {
          L6: while (true) {
          if (!(i_16506348 < L_16506349)) break L6;
            controller_14555214 = controllers_12755242[0]; controller_14555214_Idx = chckIndx(i_16506348, 0, (controllers_12755242[0]).length-1);
            update_12575262(controller_14555214[controller_14555214_Idx]);
            i_16506348 = addInt(i_16506348, 1);
            if (!(((controllers_12755242[0]).length == L_16506349))) {
            failedAssertImpl_1305480(makeNimstrLit("iterators.nim(204, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      } while(false);
    } while(false);
    if (!((updateFunc_12755277[0] == null))) {
    updateFunc_12755277[0](timeStep_12755253[0]);
    }
    
    if (!((drawFunc_12755280[0] == null))) {
    drawFunc_12755280[0]();
    }
    
    L7: do {
      var k_14575229 = 0;
      var v_14575230 = 0;
      var L_16506359 = len_14565139(keysDown_12685629[0]);
      L8: do {
        var h_16506361 = 0;
        var colontmp__16506362 = 0;
        colontmp__16506362 = ((keysDown_12685629[0].data).length-1);
        var res_16506363 = 0;
        L9: do {
            L10: while (true) {
            if (!(res_16506363 <= colontmp__16506362)) break L10;
              h_16506361 = res_16506363;
              if (isFilled_2393218(keysDown_12685629[0].data[chckIndx(h_16506361, 0, (keysDown_12685629[0].data).length-1)].Field0)) {
              k_14575229 = keysDown_12685629[0].data[chckIndx(h_16506361, 0, (keysDown_12685629[0].data).length-1)].Field1;
              v_14575230 = keysDown_12685629[0].data[chckIndx(h_16506361, 0, (keysDown_12685629[0].data).length-1)].Field2;
              if ((0 < chckRange(v_14575230, -2147483648, 2147483647))) {
              (Tmp11 = HEX5BHEX5D_14395821(keysDown_12685629[0], k_14575229), Tmp11)[0][Tmp11[1]] = ((Tmp11[0][Tmp11[1]] + 1) >>> 0);
              }
              
              if (!((len_14565139(keysDown_12685629[0]) == L_16506359))) {
              failedAssertImpl_1305480(makeNimstrLit("tables.nim(663, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              res_16506363 = addInt(res_16506363, 1);
            }
        } while(false);
      } while(false);
    } while(false);
    lastMouseRawX_12755347[0] = mouseRawX_12755341[0];
    lastMouseRawY_12755348[0] = mouseRawY_12755342[0];
    L12: do {
      var touch_14580188 = null;
      var i_16506368 = 0;
      var L_16506369 = (touches_12755142[0]).length;
      L13: do {
          L14: while (true) {
          if (!(i_16506368 < L_16506369)) break L14;
            touch_14580188 = touches_12755142[0][chckIndx(i_16506368, 0, (touches_12755142[0]).length-1)];
              if ((touch_14580188.state == 0)) Tmp15 = true; else {                Tmp15 = (touch_14580188.state == 2);              }            if (Tmp15) {
            touch_14580188.state = 1;
            }
            
            i_16506368 = addInt(i_16506368, 1);
            if (!(((touches_12755142[0]).length == L_16506369))) {
            failedAssertImpl_1305480(makeNimstrLit("iterators.nim(213, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      } while(false);
    } while(false);
    var posHEX60gensym50_14585002 = 0;
    L16: do {
      var iHEX60gensym50_14585015 = 0;
      var colontmp__16506372 = 0;
      colontmp__16506372 = (touches_12755142[0]).length;
      var i_16506373 = 0;
      L17: do {
          L18: while (true) {
          if (!(i_16506373 < colontmp__16506372)) break L18;
            iHEX60gensym50_14585015 = i_16506373;
            var it_14585020 = nimCopy(null, touches_12755142[0][chckIndx(iHEX60gensym50_14585015, 0, (touches_12755142[0]).length-1)], NTI12571064);
            if (!(contains_14370120([3, 4], it_14585020.state))) {
            if (!((posHEX60gensym50_14585002 == iHEX60gensym50_14585015))) {
            nimCopy(touches_12755142[0][chckIndx(posHEX60gensym50_14585002, 0, (touches_12755142[0]).length-1)], touches_12755142[0][chckIndx(iHEX60gensym50_14585015, 0, (touches_12755142[0]).length-1)], NTI12571064);
            }
            
            posHEX60gensym50_14585002 = addInt(posHEX60gensym50_14585002, 1);
            }
            
            i_16506373 = addInt(i_16506373, 1);
          }
      } while(false);
    } while(false);
    if (touches_12755142[0].length < chckRange(posHEX60gensym50_14585002, 0, 2147483647)) { for (var i=touches_12755142[0].length;i<chckRange(posHEX60gensym50_14585002, 0, 2147483647);++i) touches_12755142[0].push(({id: 0, x: 0, y: 0, sx: 0.0, sy: 0.0, xrel: 0.0, yrel: 0.0, xrelraw: 0.0, yrelraw: 0.0, state: 0})); }
               else { touches_12755142[0].length = chckRange(posHEX60gensym50_14585002, 0, 2147483647); };
    present_14335377();
    audioClock_14525136();
    mouseWheelState_12755357[0] = 0;
    frame_12755294[0] = addInt(frame_12755294[0], 1);
  } while (false);

  
}
function run_14705051() {
    if (!((interval_14332018[0] == null))) {
    window.clearInterval(interval_14332018[0]);
    }
    
    interval_14332018[0] = window.setInterval(step_14530097, (((timeStep_12755253[0] * 1.0000000000000000e+03))|0));

  
}
function run_16440690(init_16440694, update_16440698, draw_16440701) {
    if (!(!((update_16440698 == null)))) {
    failedAssertImpl_1305480(makeNimstrLit("nico.nim(2909, 9) `update != nil` "));
    }
    
    if (!(!((draw_16440701 == null)))) {
    failedAssertImpl_1305480(makeNimstrLit("nico.nim(2910, 9) `draw != nil` "));
    }
    
    initFunc_12755273[0] = init_16440694;
    updateFunc_12755277[0] = update_16440698;
    drawFunc_12755280[0] = draw_16440701;
    if (!((initFunc_12755273[0] == null))) {
    initFunc_12755273[0]();
    }
    
    if (!(running_12755156[0])) {
    running_12755156[0] = true;
    run_14705051();
    }
    

  
}
function joinPath_14711002(a_14711004, b_14711005) {
  var result_14711006 = [];

  BeforeRet: do {
    if ((a_14711004[chckIndx(((a_14711004).length-1), 0, (a_14711004).length-1)] == 47)) {
    result_14711006 = nimCopy(null, (a_14711004 || []).concat(b_14711005 || []), NTI1188013);
    break BeforeRet;
    }
    
    result_14711006 = nimCopy(null, (a_14711004 || []).concat(makeNimstrLit("/") || [],b_14711005 || []), NTI1188013);
    break BeforeRet;
  } while (false);

  return result_14711006;

}
function readFile_14465043(filename_14465045) {
  var result_14465046 = [];

  BeforeRet: do {
    var xhr_14465047 = new XMLHttpRequest();
    xhr_14465047.open("GET", toJSStr(filename_14465045), false, null, null);
    xhr_14465047.send();
    if ((xhr_14465047.status == 200)) {
    result_14465046 = nimCopy(null, cstrToNimstr(xhr_14465047.responseText), NTI1188013);
    break BeforeRet;
    }
    else {
      raiseException({message: (makeNimstrLit("unable to open file: ") || []).concat(filename_14465045 || []), parent: null, m_type: NTI1194623, name: null, trace: [], up: null}, "IOError");
    }
    
  } while (false);

  return result_14465046;

}
function nsuRemoveSuffixCharSet(s_10205054, s_10205054_Idx, chars_10205056) {
          var Tmp3;

  BeforeRet: do {
    if (((s_10205054[s_10205054_Idx]).length == 0)) {
    break BeforeRet;
    }
    
    var last_10205058 = ((s_10205054[s_10205054_Idx]).length-1);
    L1: do {
        L2: while (true) {
          if (!(-1 < last_10205058)) Tmp3 = false; else {            Tmp3 = (chars_10205056[s_10205054[s_10205054_Idx][chckIndx(last_10205058, 0, (s_10205054[s_10205054_Idx]).length-1)]] != undefined);          }        if (!Tmp3) break L2;
          last_10205058 = subInt(last_10205058, 1);
        }
    } while(false);
    (s_10205054[s_10205054_Idx].length = chckRange(addInt(last_10205058, 1), 0, 2147483647));
  } while (false);

  
}
function newSurfaceRGBA_12755886(w_12755888, h_12755889) {
  var result_12755890 = null;

    result_12755890 = new_12755765();
    result_12755890.data = nimCopy(null, newSeq_12755839(chckRange(mulInt(mulInt(w_12755888, h_12755889), 4), 0, 2147483647)), NTI12755843);
    result_12755890.channels = 4;
    result_12755890.w = w_12755888;
    result_12755890.h = h_12755889;

  return result_12755890;

}
function loadSurfaceRGBA_14470032(filename_14470034, callback_14470038) {
    filename_14470034 = nimCopy(null, filename_14470034, NTI1188013);
    function HEX3Aanonymous_14470046(event_14470049) {
        loading_12755191[0] = subInt(loading_12755191[0], 1);
        var target_14470056 = event_14470049.target;
        console.log("image loaded: ", target_14470056.src);
        var canvas_14470057 = document.createElement("canvas");
        var ctx_14470058 = getContext2D_12936722(canvas_14470057);
        var w_14470059 = target_14470056.width;
        var h_14470060 = target_14470056.height;
        canvas_14470057.width = w_14470059;
        canvas_14470057.height = h_14470060;
        ctx_14470058.drawImage(target_14470056, 0.0, 0.0);
        var imgData_14470061 = ctx_14470058.getImageData(0.0, 0.0, w_14470059, h_14470060);
        var surface_14470062 = newSurfaceRGBA_12755886(w_14470059, h_14470060);
        surface_14470062.filename = nimCopy(null, filename_14470034, NTI1188013);
        surface_14470062.data = nimCopy(null, imgData_14470061.data, NTI12936044);
        callback_14470038(surface_14470062);

      
    }
    function HEX3Aanonymous_14470091(event_14470094) {
        callback_14470038(null);

      
    }

    loading_12755191[0] = addInt(loading_12755191[0], 1);
    var img_14470045 = document.createElement("img");
    img_14470045.addEventListener("load", HEX3Aanonymous_14470046, false);
    img_14470045.addEventListener("error", HEX3Aanonymous_14470091, false);
    img_14470045.src = toJSStr(filename_14470034);

  
}
function loadFont_16155014(index_16155016, filename_16155017) {
    var Tmp2;
    function HEX3Aanonymous_16160005(surface_16160007) {
        fonts_12755290[0][chckIndx(index_16155016, 0, (fonts_12755290[0]).length-1)] = createFontFromSurface_15790297(surface_16160007, chars_16155026[0]);
        if (shouldReplace_16155025) {
        console.log("updating current font ", index_16155016);
        setFont_14996237(chckRange(index_16155016, 0, 15));
        }
        

      
    }

    var shouldReplace_16155025 = (currentFont_12755291[0] == fonts_12755290[0][chckIndx(index_16155016, 0, (fonts_12755290[0]).length-1)]);
    var chars_16155026 = [[]];
    var datPath_16155027 = [];
++excHandler;
    Tmp2 = framePtr;
    try {
    datPath_16155027 = nimCopy(null, joinPath_14711002(assetPath_12755257[0], (filename_16155017 || []).concat(makeNimstrLit(".dat") || [])), NTI1188013);
    chars_16155026[0] = nimCopy(null, readFile_14465043(datPath_16155027), NTI1188013);
--excHandler;
} catch (EXC) {
 var prevJSError = lastJSError;
 lastJSError = EXC;
 --excHandler;
    framePtr = Tmp2;
    if (lastJSError && (isObj(lastJSError.m_type, NTI1194623))) {
    raiseException({message: (makeNimstrLit("Missing ") || []).concat(datPath_16155027 || [],makeNimstrLit(" needed if not passing chars to loadFont") || []), parent: null, m_type: NTI1194617, name: null, trace: [], up: null}, "Exception");
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    framePtr = Tmp2;
    }
    nsuRemoveSuffixCharSet(chars_16155026, 0, ConstSet2);
    loadSurfaceRGBA_14470032(joinPath_14711002(assetPath_12755257[0], filename_16155017), HEX3Aanonymous_16160005);

  
}
function gameInit_16506028() {
    loadFont_16155014(0, makeNimstrLit("font.png"));

  
}
function axis_12600056(self_12600058, axis_12600059) {
  var result_12600060 = 0.0;

  BeforeRet: do {
    result_12600060 = self_12600058.axes[chckIndx(axis_12600059, 0, (self_12600058.axes).length-1)].Field0;
    break BeforeRet;
  } while (false);

  return result_12600060;

}
function btn_12615014(self_12615016, button_12615017) {
    var Tmp1;
    var Tmp2;
    var Tmp3;
    var Tmp4;

  var result_12615018 = false;

  BeforeRet: do {
    if ((button_12615017 == 0)) {
    if ((0 < self_12615016.buttons[chckIndx(button_12615017, 0, (self_12615016.buttons).length-1)])) Tmp1 = true; else {      Tmp1 = (axis_12600056(self_12615016, 0) < -(self_12615016.deadzone));    }    result_12615018 = Tmp1;
    break BeforeRet;
    }
    else {
    if ((button_12615017 == 1)) {
    if ((0 < self_12615016.buttons[chckIndx(button_12615017, 0, (self_12615016.buttons).length-1)])) Tmp2 = true; else {      Tmp2 = (self_12615016.deadzone < axis_12600056(self_12615016, 0));    }    result_12615018 = Tmp2;
    break BeforeRet;
    }
    else {
    if ((button_12615017 == 2)) {
    if ((0 < self_12615016.buttons[chckIndx(button_12615017, 0, (self_12615016.buttons).length-1)])) Tmp3 = true; else {      Tmp3 = (axis_12600056(self_12615016, 1) < -(self_12615016.deadzone));    }    result_12615018 = Tmp3;
    break BeforeRet;
    }
    else {
    if ((button_12615017 == 3)) {
    if ((0 < self_12615016.buttons[chckIndx(button_12615017, 0, (self_12615016.buttons).length-1)])) Tmp4 = true; else {      Tmp4 = (self_12615016.deadzone < axis_12600056(self_12615016, 1));    }    result_12615018 = Tmp4;
    break BeforeRet;
    }
    }}}
    result_12615018 = (0 < self_12615016.buttons[chckIndx(button_12615017, 0, (self_12615016.buttons).length-1)]);
    break BeforeRet;
  } while (false);

  return result_12615018;

}
function btn_15010021(b_15010023) {
  var result_15070022 = false;

  BeforeRet: do {
    L1: do {
      var c_15070030 = null;
      var c_15070030_Idx = 0;
      var i_16506434 = 0;
      var L_16506435 = (controllers_12755242[0]).length;
      L2: do {
          L3: while (true) {
          if (!(i_16506434 < L_16506435)) break L3;
            c_15070030 = controllers_12755242[0]; c_15070030_Idx = chckIndx(i_16506434, 0, (controllers_12755242[0]).length-1);
            if (btn_12615014(c_15070030[c_15070030_Idx], b_15010023)) {
            result_15070022 = true;
            break BeforeRet;
            }
            
            i_16506434 = addInt(i_16506434, 1);
            if (!(((controllers_12755242[0]).length == L_16506435))) {
            failedAssertImpl_1305480(makeNimstrLit("iterators.nim(204, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      } while(false);
    } while(false);
    result_15070022 = false;
    break BeforeRet;
  } while (false);

  return result_15070022;

}
function gameUpdate_16506043(dt_16506045) {
    buttonDown_16506014[0] = btn_15010021(4);

  
}
function get_12745014(s_12745016, x_12745017, y_12745018) {
      var Tmp1;
      var Tmp2;

  var result_12745019 = 0;

  BeforeRet: do {
      if (((x_12745017 < 0) || (y_12745018 < 0))) Tmp2 = true; else {        Tmp2 = (s_12745016.w <= x_12745017);      }      if (Tmp2) Tmp1 = true; else {        Tmp1 = (s_12745016.h <= y_12745018);      }    if (Tmp1) {
    result_12745019 = 0;
    break BeforeRet;
    }
    
    result_12745019 = s_12745016.data[chckIndx(addInt(mulInt(y_12745018, s_12745016.w), x_12745017), 0, (s_12745016.data).length-1)];
    break BeforeRet;
  } while (false);

  return result_12745019;

}
function stencilTest_14996574(x_14996576, y_14996577, nv_14996578) {
  var result_14996579 = false;

  BeforeRet: do {
    if ((stencilMode_12755207[0] == 0)) {
    result_14996579 = true;
    break BeforeRet;
    }
    
    var v_14996585 = get_12745014(stencilBuffer_12755197[0], x_14996576, y_14996577);
    switch (stencilMode_12755207[0]) {
    case 0:
      result_14996579 = true;
      break BeforeRet;
      break;
    case 1:
      result_14996579 = (nv_14996578 == v_14996585);
      break BeforeRet;
      break;
    case 2:
      result_14996579 = (nv_14996578 < v_14996585);
      break BeforeRet;
      break;
    case 3:
      result_14996579 = (v_14996585 < nv_14996578);
      break BeforeRet;
      break;
    case 4:
      result_14996579 = (nv_14996578 <= v_14996585);
      break BeforeRet;
      break;
    case 5:
      result_14996579 = (v_14996585 <= nv_14996578);
      break BeforeRet;
      break;
    case 6:
      result_14996579 = !((nv_14996578 == v_14996585));
      break BeforeRet;
      break;
    }
  } while (false);

  return result_14996579;

}
function ditherPass_15065493(x_15065495, y_15065496) {
  var result_15065497 = false;

  BeforeRet: do {
    var x4_15065498 = modInt(x_15065495, 4);
    var y4_15065499 = modInt(y_15065496, 4);
    var bit_15065500 = ((((y4_15065499 * 4) & 0xffff) + x4_15065498) & 0xffff);
    result_15065497 = !(((gDitherPattern_12755250[0] & (1 << bit_15065500)) == 0));
    break BeforeRet;
  } while (false);

  return result_15065497;

}
function set_12735277(s_12735279, x_12735280, y_12735281, v_12735282) {
      var Tmp1;
      var Tmp2;

  BeforeRet: do {
      if (((x_12735280 < 0) || (y_12735281 < 0))) Tmp2 = true; else {        Tmp2 = (s_12735279.w <= x_12735280);      }      if (Tmp2) Tmp1 = true; else {        Tmp1 = (s_12735279.h <= y_12735281);      }    if (Tmp1) {
    break BeforeRet;
    }
    
    s_12735279.data[chckIndx(addInt(mulInt(y_12735281, s_12735279.w), x_12735280), 0, (s_12735279.data).length-1)] = v_12735282;
  } while (false);

  
}
function psetRaw_15010768(x_15010770, y_15010771, c_15010772) {
    if (stencilTest_14996574(x_15010770, y_15010771, stencilRef_12755209[0])) {
    if (ditherPass_15065493(x_15010770, y_15010771)) {
    set_12735277(swCanvas_12755196[0], x_15010770, y_15010771, c_15010772);
    }
    else {
    if ((0 <= ditherColor_15065339[0])) {
    set_12735277(swCanvas_12755196[0], x_15010770, y_15010771, ditherColor_15065339[0]);
    }
    }
    if (stencilWrite_12755208[0]) {
    set_12735277(stencilBuffer_12755197[0], x_15010770, y_15010771, stencilRef_12755209[0]);
    }
    
    }
    

  
}
function cls_15110143() {
    L1: do {
      var y_15110150 = 0;
      var res_16506444 = clipMinY_12755335[0];
      L2: do {
          L3: while (true) {
          if (!(res_16506444 <= clipMaxY_12755336[0])) break L3;
            y_15110150 = res_16506444;
            L4: do {
              var x_15110156 = 0;
              var res_16506439 = clipMinX_12755333[0];
              L5: do {
                  L6: while (true) {
                  if (!(res_16506439 <= clipMaxX_12755334[0])) break L6;
                    x_15110156 = res_16506439;
                    psetRaw_15010768(x_15110156, y_15110150, 0);
                    res_16506439 += 1;
                  }
              } while(false);
            } while(false);
            res_16506444 += 1;
          }
      } while(false);
    } while(false);

  
}
function setColor_14996289(colId_14996291) {
    currentColor_12755318[0] = colId_14996291;

  
}
function HEX5BHEX5D_16170273(t_16170279, key_16170280) {
  var result_16170282 = null;

    var hcHEX60gensym22_16170283 = [0];
    var indexHEX60gensym22_16170292 = rawGet_16065332(t_16170279, key_16170280, hcHEX60gensym22_16170283, 0);
    if ((0 <= indexHEX60gensym22_16170292)) {
    result_16170282 = t_16170279.data[chckIndx(indexHEX60gensym22_16170292, 0, (t_16170279.data).length-1)].Field2;
    }
    else {
      raiseException({message: (makeNimstrLit("key not found: ") || []).concat(HEX24_3105214(key_16170280) || []), parent: null, m_type: NTI1194645, name: null, trace: [], up: null}, "KeyError");
    }
    

  return result_16170282;

}
function textWidth_14996277(text_14996279, scale_14996280) {
  var result_16195322 = 0;

    if ((currentFont_12755291[0] == null)) {
    raiseException({message: makeNimstrLit("No font selected"), parent: null, m_type: NTI1194617, name: null, trace: [], up: null}, "Exception");
    }
    
    L1: do {
      var c_16200002 = 0;
      var i_16506482 = 0;
      var result_16506483 = 0;
      L2: do {
          L3: while (true) {
          if (!(i_16506482 < (text_14996279).length)) break L3;
            if ((text_14996279[chckIndx(i_16506482, 0, (text_14996279).length-1)] <= 127)) {
            result_16506483 = chckRange(text_14996279[chckIndx(i_16506482, 0, (text_14996279).length-1)], -2147483648, 2147483647);
            i_16506482 = addInt(i_16506482, 1);
            }
            else {
            if ((((text_14996279[chckIndx(i_16506482, 0, (text_14996279).length-1)] >>> 0) >>> 5) == 6)) {
            if ((i_16506482 <= subInt((text_14996279).length, 2))) {
            result_16506483 = chckRange((((text_14996279[chckIndx(i_16506482, 0, (text_14996279).length-1)] & 31) << 6) | (text_14996279[chckIndx(addInt(i_16506482, 1), 0, (text_14996279).length-1)] & 63)), -2147483648, 2147483647);
            i_16506482 = addInt(i_16506482, 2);
            }
            else {
              result_16506483 = 65533;
              i_16506482 = addInt(i_16506482, 1);
            }
            
            }
            else {
            if ((((text_14996279[chckIndx(i_16506482, 0, (text_14996279).length-1)] >>> 0) >>> 4) == 14)) {
            if ((i_16506482 <= subInt((text_14996279).length, 3))) {
            result_16506483 = chckRange(((((text_14996279[chckIndx(i_16506482, 0, (text_14996279).length-1)] & 15) << 12) | ((text_14996279[chckIndx(addInt(i_16506482, 1), 0, (text_14996279).length-1)] & 63) << 6)) | (text_14996279[chckIndx(addInt(i_16506482, 2), 0, (text_14996279).length-1)] & 63)), -2147483648, 2147483647);
            i_16506482 = addInt(i_16506482, 3);
            }
            else {
              result_16506483 = 65533;
              i_16506482 = addInt(i_16506482, 1);
            }
            
            }
            else {
            if ((((text_14996279[chckIndx(i_16506482, 0, (text_14996279).length-1)] >>> 0) >>> 3) == 30)) {
            if ((i_16506482 <= subInt((text_14996279).length, 4))) {
            result_16506483 = chckRange((((((text_14996279[chckIndx(i_16506482, 0, (text_14996279).length-1)] & 7) << 18) | ((text_14996279[chckIndx(addInt(i_16506482, 1), 0, (text_14996279).length-1)] & 63) << 12)) | ((text_14996279[chckIndx(addInt(i_16506482, 2), 0, (text_14996279).length-1)] & 63) << 6)) | (text_14996279[chckIndx(addInt(i_16506482, 3), 0, (text_14996279).length-1)] & 63)), -2147483648, 2147483647);
            i_16506482 = addInt(i_16506482, 4);
            }
            else {
              result_16506483 = 65533;
              i_16506482 = addInt(i_16506482, 1);
            }
            
            }
            else {
            if ((((text_14996279[chckIndx(i_16506482, 0, (text_14996279).length-1)] >>> 0) >>> 2) == 62)) {
            if ((i_16506482 <= subInt((text_14996279).length, 5))) {
            result_16506483 = chckRange(((((((text_14996279[chckIndx(i_16506482, 0, (text_14996279).length-1)] & 3) << 24) | ((text_14996279[chckIndx(addInt(i_16506482, 1), 0, (text_14996279).length-1)] & 63) << 18)) | ((text_14996279[chckIndx(addInt(i_16506482, 2), 0, (text_14996279).length-1)] & 63) << 12)) | ((text_14996279[chckIndx(addInt(i_16506482, 3), 0, (text_14996279).length-1)] & 63) << 6)) | (text_14996279[chckIndx(addInt(i_16506482, 4), 0, (text_14996279).length-1)] & 63)), -2147483648, 2147483647);
            i_16506482 = addInt(i_16506482, 5);
            }
            else {
              result_16506483 = 65533;
              i_16506482 = addInt(i_16506482, 1);
            }
            
            }
            else {
            if ((((text_14996279[chckIndx(i_16506482, 0, (text_14996279).length-1)] >>> 0) >>> 1) == 126)) {
            if ((i_16506482 <= subInt((text_14996279).length, 6))) {
            result_16506483 = chckRange((((((((text_14996279[chckIndx(i_16506482, 0, (text_14996279).length-1)] & 1) << 30) | ((text_14996279[chckIndx(addInt(i_16506482, 1), 0, (text_14996279).length-1)] & 63) << 24)) | ((text_14996279[chckIndx(addInt(i_16506482, 2), 0, (text_14996279).length-1)] & 63) << 18)) | ((text_14996279[chckIndx(addInt(i_16506482, 3), 0, (text_14996279).length-1)] & 63) << 12)) | ((text_14996279[chckIndx(addInt(i_16506482, 4), 0, (text_14996279).length-1)] & 63) << 6)) | (text_14996279[chckIndx(addInt(i_16506482, 5), 0, (text_14996279).length-1)] & 63)), -2147483648, 2147483647);
            i_16506482 = addInt(i_16506482, 6);
            }
            else {
              result_16506483 = 65533;
              i_16506482 = addInt(i_16506482, 1);
            }
            
            }
            else {
              result_16506483 = chckRange(text_14996279[chckIndx(i_16506482, 0, (text_14996279).length-1)], -2147483648, 2147483647);
              i_16506482 = addInt(i_16506482, 1);
            }
            }}}}}
            c_16200002 = result_16506483;
            if (!(hasKey_16065316(currentFont_12755291[0].rects, c_16200002))) {
            raiseException({message: (makeNimstrLit("character not in font: \'") || []).concat(HEX24_3105214(c_16200002) || [],makeNimstrLit("\'") || []), parent: null, m_type: NTI1194617, name: null, trace: [], up: null}, "Exception");
            }
            
            result_16195322 = addInt(result_16195322, toPint_14370366(addInt(mulInt(HEX5BHEX5D_16170273(currentFont_12755291[0].rects, c_16200002).Field2, ((scale_14996280)|0)), ((scale_14996280)|0))));
          }
      } while(false);
    } while(false);

  return result_16195322;

}
function substr_1571022(s_1571024, first_1571025, last_1571026) {
  var result_1571027 = [];

    var first_1571028 = nimMax(first_1571025, 0);
    var L_1571030 = nimMax(addInt(subInt(nimMin(last_1571026, ((s_1571024).length-1)), first_1571028), 1), 0);
    result_1571027 = nimCopy(null, mnewString(chckRange(L_1571030, 0, 2147483647)), NTI1188013);
    L1: do {
      var i_1571039 = 0;
      var colontmp__16506556 = 0;
      colontmp__16506556 = subInt(L_1571030, 1);
      var res_16506557 = 0;
      L2: do {
          L3: while (true) {
          if (!(res_16506557 <= colontmp__16506556)) break L3;
            i_1571039 = res_16506557;
            result_1571027[chckIndx(i_1571039, 0, (result_1571027).length-1)] = s_1571024[chckIndx(addInt(i_1571039, first_1571028), 0, (s_1571024).length-1)];
            res_16506557 = addInt(res_16506557, 1);
          }
      } while(false);
    } while(false);

  return result_1571027;

}
function HEX2BHEX3D_15405035(x_15405039, x_15405039_Idx, y_15405040) {
    x_15405039[x_15405039_Idx] = (x_15405039[x_15405039_Idx] + y_15405040);

  
}
function fontBlit_15490053(font_15490055, srcRect_15490056, dstRect_15490057, color_15490058) {
                        var Tmp8;
                        var Tmp9;
                        var Tmp10;
                        var Tmp11;
                        var Tmp12;

    var dx_15490059 = [dstRect_15490057.Field0];
    var dy_15490060 = [dstRect_15490057.Field1];
    var sx_15490061 = [srcRect_15490056.Field0];
    var sy_15490062 = [srcRect_15490056.Field1];
    var dw_15490063 = dstRect_15490057.Field2;
    var dh_15490064 = dstRect_15490057.Field3;
    var sw_15490065 = srcRect_15490056.Field2;
    var sh_15490066 = srcRect_15490056.Field3;
    L1: do {
      var y_15490074 = 0;
      var i_16506582 = 0;
      L2: do {
          L3: while (true) {
          if (!(i_16506582 < dstRect_15490057.Field3)) break L3;
            y_15490074 = i_16506582;
            dx_15490059[0] = dstRect_15490057.Field0;
            sx_15490061[0] = srcRect_15490056.Field0;
            L4: do {
              var x_15490082 = 0;
              var i_16506580 = 0;
              L5: do {
                  L6: while (true) {
                  if (!(i_16506580 < dstRect_15490057.Field2)) break L6;
                    x_15490082 = i_16506580;
                    L7: do {
                        if (((sx_15490061[0] < 0.0) || (sy_15490062[0] < 0.0))) Tmp9 = true; else {                          Tmp9 = (toPint_14370366((font_15490055.w - 1)) < toPint_12755100(sx_15490061[0]));                        }                        if (Tmp9) Tmp8 = true; else {                          Tmp8 = (toPint_14370366((font_15490055.h - 1)) < toPint_12755100(sy_15490062[0]));                        }                      if (Tmp8) {
                      break L7;
                      }
                      
                        if (((toPint_12755100(dx_15490059[0]) < toPint_14370366(clipMinX_12755333[0])) || (toPint_12755100(dy_15490060[0]) < toPint_14370366(clipMinY_12755335[0])))) Tmp11 = true; else {                          Tmp11 = (toPint_14370366(clipMaxX_12755334[0]) < toPint_12755100(dx_15490059[0]));                        }                        if (Tmp11) Tmp10 = true; else {                          Tmp10 = (toPint_14370366(clipMaxY_12755336[0]) < toPint_12755100(dy_15490060[0]));                        }                      if (Tmp10) {
                      break L7;
                      }
                      
                        if (!(font_15490055.data[((toPint_12755100(sy_15490062[0]) * toPint_14370366(font_15490055.w)) + toPint_12755100(sx_15490061[0]))] == 1)) Tmp12 = false; else {                          Tmp12 = ditherPass_15065493(((dx_15490059[0])|0), ((dy_15490060[0])|0));                        }                      if (Tmp12) {
                      swCanvas_12755196[0].data[((toPint_12755100(dy_15490060[0]) * toPint_14370366(swCanvas_12755196[0].w)) + toPint_12755100(dx_15490059[0]))] = currentColor_12755318[0];
                      }
                      else {
                      if ((0 <= ditherColor_15065339[0])) {
                      swCanvas_12755196[0].data[((toPint_12755100(dy_15490060[0]) * toPint_14370366(swCanvas_12755196[0].w)) + toPint_12755100(dx_15490059[0]))] = ditherColor_15065339[0];
                      }
                      }
                      HEX2BHEX3D_15405035(sx_15490061, 0, (1.0000000000000000e+00 * (sw_15490065 / dw_15490063)));
                      HEX2BHEX3D_15405035(dx_15490059, 0, 1.0000000000000000e+00);
                    } while(false);
                    i_16506580 += 1;
                  }
              } while(false);
            } while(false);
            HEX2BHEX3D_15405035(sy_15490062, 0, (1.0000000000000000e+00 * (sh_15490066 / dh_15490064)));
            HEX2BHEX3D_15405035(dy_15490060, 0, 1.0000000000000000e+00);
            i_16506582 += 1;
          }
      } while(false);
    } while(false);

  
}
function glyph_14996240(c_14996242, x_14996243, y_14996244, scale_14996245) {
    var Tmp2;

  var result_16165079 = 0;

  BeforeRet: do {
    if ((currentFont_12755291[0] == null)) {
    raiseException({message: makeNimstrLit("No font selected"), parent: null, m_type: NTI1194617, name: null, trace: [], up: null}, "Exception");
    }
    
    if (!(hasKey_16065316(currentFont_12755291[0].rects, c_14996242))) {
    break BeforeRet;
    }
    
    var src_16175028 = nimCopy(null, HEX5BHEX5D_16170273(currentFont_12755291[0].rects, c_14996242), NTI12685648);
    var dst_16175030 = nimCopy(null, {Field0: ((x_14996243)|0), Field1: ((y_14996244)|0), Field2: mulInt(src_16175028.Field2, ((scale_14996245)|0)), Field3: mulInt(src_16175028.Field3, ((scale_14996245)|0))}, NTI12685648);
++excHandler;
    Tmp2 = framePtr;
    try {
    fontBlit_15490053(currentFont_12755291[0], src_16175028, dst_16175030, currentColor_12755318[0]);
--excHandler;
} catch (EXC) {
 var prevJSError = lastJSError;
 lastJSError = EXC;
 --excHandler;
    framePtr = Tmp2;
    if (lastJSError && (isObj(lastJSError.m_type, NTI1194649))) {
    console.log("index error glyph: ", c_14996242, " @ ", x_14996243, ",", y_14996244);
    reraiseException();
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    framePtr = Tmp2;
    }
    result_16165079 = toPint_14370366(addInt(mulInt(src_16175028.Field2, ((scale_14996245)|0)), ((scale_14996245)|0)));
    break BeforeRet;
  } while (false);

  return result_16165079;

}
function print_14996259(text_14996261, x_14996262, y_14996263, scale_14996264) {
            var Tmp6;

    if ((currentFont_12755291[0] == null)) {
    raiseException({message: makeNimstrLit("No font selected"), parent: null, m_type: NTI1194617, name: null, trace: [], up: null}, "Exception");
    }
    
    var x_16185002 = subInt(x_14996262, cameraX_12755295[0]);
    var y_16185003 = subInt(y_14996263, cameraY_12755296[0]);
    var ix_16185004 = x_16185002;
    L1: do {
      var line_16185005 = [];
      var first_16506550 = 0;
      var last_16506551 = 0;
      var eolpos_16506552 = 0;
      L2: do {
          L3: while (true) {
          if (!true) break L3;
            L4: do {
                L5: while (true) {
                if (!((last_16506551 < (text_14996261).length) && !((ConstSet3[text_14996261[chckIndx(last_16506551, 0, (text_14996261).length-1)]] != undefined)))) break L5;
                  last_16506551 = addInt(last_16506551, 1);
                }
            } while(false);
            eolpos_16506552 = last_16506551;
            if ((last_16506551 < (text_14996261).length)) {
            if ((text_14996261[chckIndx(last_16506551, 0, (text_14996261).length-1)] == 10)) {
            last_16506551 = addInt(last_16506551, 1);
            }
            else {
            if ((text_14996261[chckIndx(last_16506551, 0, (text_14996261).length-1)] == 13)) {
            last_16506551 = addInt(last_16506551, 1);
            if (((last_16506551 < (text_14996261).length) && (text_14996261[chckIndx(last_16506551, 0, (text_14996261).length-1)] == 10))) {
            last_16506551 = addInt(last_16506551, 1);
            }
            
            }
            }
            }
            
            if (false) {
            Tmp6 = subInt(last_16506551, 1);
            }
            else {
            Tmp6 = subInt(eolpos_16506552, 1);
            }
            
            line_16185005 = substr_1571022(text_14996261, first_16506550, Tmp6);
            L7: do {
              var c_16185006 = 0;
              var i_16506517 = 0;
              var result_16506518 = 0;
              L8: do {
                  L9: while (true) {
                  if (!(i_16506517 < (line_16185005).length)) break L9;
                    if ((line_16185005[chckIndx(i_16506517, 0, (line_16185005).length-1)] <= 127)) {
                    result_16506518 = chckRange(line_16185005[chckIndx(i_16506517, 0, (line_16185005).length-1)], -2147483648, 2147483647);
                    i_16506517 = addInt(i_16506517, 1);
                    }
                    else {
                    if ((((line_16185005[chckIndx(i_16506517, 0, (line_16185005).length-1)] >>> 0) >>> 5) == 6)) {
                    if ((i_16506517 <= subInt((line_16185005).length, 2))) {
                    result_16506518 = chckRange((((line_16185005[chckIndx(i_16506517, 0, (line_16185005).length-1)] & 31) << 6) | (line_16185005[chckIndx(addInt(i_16506517, 1), 0, (line_16185005).length-1)] & 63)), -2147483648, 2147483647);
                    i_16506517 = addInt(i_16506517, 2);
                    }
                    else {
                      result_16506518 = 65533;
                      i_16506517 = addInt(i_16506517, 1);
                    }
                    
                    }
                    else {
                    if ((((line_16185005[chckIndx(i_16506517, 0, (line_16185005).length-1)] >>> 0) >>> 4) == 14)) {
                    if ((i_16506517 <= subInt((line_16185005).length, 3))) {
                    result_16506518 = chckRange(((((line_16185005[chckIndx(i_16506517, 0, (line_16185005).length-1)] & 15) << 12) | ((line_16185005[chckIndx(addInt(i_16506517, 1), 0, (line_16185005).length-1)] & 63) << 6)) | (line_16185005[chckIndx(addInt(i_16506517, 2), 0, (line_16185005).length-1)] & 63)), -2147483648, 2147483647);
                    i_16506517 = addInt(i_16506517, 3);
                    }
                    else {
                      result_16506518 = 65533;
                      i_16506517 = addInt(i_16506517, 1);
                    }
                    
                    }
                    else {
                    if ((((line_16185005[chckIndx(i_16506517, 0, (line_16185005).length-1)] >>> 0) >>> 3) == 30)) {
                    if ((i_16506517 <= subInt((line_16185005).length, 4))) {
                    result_16506518 = chckRange((((((line_16185005[chckIndx(i_16506517, 0, (line_16185005).length-1)] & 7) << 18) | ((line_16185005[chckIndx(addInt(i_16506517, 1), 0, (line_16185005).length-1)] & 63) << 12)) | ((line_16185005[chckIndx(addInt(i_16506517, 2), 0, (line_16185005).length-1)] & 63) << 6)) | (line_16185005[chckIndx(addInt(i_16506517, 3), 0, (line_16185005).length-1)] & 63)), -2147483648, 2147483647);
                    i_16506517 = addInt(i_16506517, 4);
                    }
                    else {
                      result_16506518 = 65533;
                      i_16506517 = addInt(i_16506517, 1);
                    }
                    
                    }
                    else {
                    if ((((line_16185005[chckIndx(i_16506517, 0, (line_16185005).length-1)] >>> 0) >>> 2) == 62)) {
                    if ((i_16506517 <= subInt((line_16185005).length, 5))) {
                    result_16506518 = chckRange(((((((line_16185005[chckIndx(i_16506517, 0, (line_16185005).length-1)] & 3) << 24) | ((line_16185005[chckIndx(addInt(i_16506517, 1), 0, (line_16185005).length-1)] & 63) << 18)) | ((line_16185005[chckIndx(addInt(i_16506517, 2), 0, (line_16185005).length-1)] & 63) << 12)) | ((line_16185005[chckIndx(addInt(i_16506517, 3), 0, (line_16185005).length-1)] & 63) << 6)) | (line_16185005[chckIndx(addInt(i_16506517, 4), 0, (line_16185005).length-1)] & 63)), -2147483648, 2147483647);
                    i_16506517 = addInt(i_16506517, 5);
                    }
                    else {
                      result_16506518 = 65533;
                      i_16506517 = addInt(i_16506517, 1);
                    }
                    
                    }
                    else {
                    if ((((line_16185005[chckIndx(i_16506517, 0, (line_16185005).length-1)] >>> 0) >>> 1) == 126)) {
                    if ((i_16506517 <= subInt((line_16185005).length, 6))) {
                    result_16506518 = chckRange((((((((line_16185005[chckIndx(i_16506517, 0, (line_16185005).length-1)] & 1) << 30) | ((line_16185005[chckIndx(addInt(i_16506517, 1), 0, (line_16185005).length-1)] & 63) << 24)) | ((line_16185005[chckIndx(addInt(i_16506517, 2), 0, (line_16185005).length-1)] & 63) << 18)) | ((line_16185005[chckIndx(addInt(i_16506517, 3), 0, (line_16185005).length-1)] & 63) << 12)) | ((line_16185005[chckIndx(addInt(i_16506517, 4), 0, (line_16185005).length-1)] & 63) << 6)) | (line_16185005[chckIndx(addInt(i_16506517, 5), 0, (line_16185005).length-1)] & 63)), -2147483648, 2147483647);
                    i_16506517 = addInt(i_16506517, 6);
                    }
                    else {
                      result_16506518 = 65533;
                      i_16506517 = addInt(i_16506517, 1);
                    }
                    
                    }
                    else {
                      result_16506518 = chckRange(line_16185005[chckIndx(i_16506517, 0, (line_16185005).length-1)], -2147483648, 2147483647);
                      i_16506517 = addInt(i_16506517, 1);
                    }
                    }}}}}
                    c_16185006 = result_16506518;
                    x_16185002 = addInt(x_16185002, glyph_14996240(c_16185006, x_16185002, y_16185003, scale_14996264));
                  }
              } while(false);
            } while(false);
            x_16185002 = ix_16185004;
            y_16185003 = addInt(y_16185003, toPint_14370366(currentFont_12755291[0].h));
            if ((eolpos_16506552 == last_16506551)) {
            break L2;
            }
            
            first_16506550 = last_16506551;
          }
      } while(false);
    } while(false);

  
}
function printc_14996265(text_14996267, x_14996268, y_14996269, scale_14996270) {
    var width_16205216 = textWidth_14996277(text_14996267, scale_14996270);
    print_14996259(text_14996267, subInt(x_14996268, divInt(width_16205216, 2)), y_14996269, scale_14996270);

  
}
function gameDraw_16506059() {
    var Tmp1;

    cls_15110143();
    if (buttonDown_16506014[0]) {
    Tmp1 = 7;
    }
    else {
    Tmp1 = 3;
    }
    
    setColor_14996289(Tmp1);
    printc_14996265(makeNimstrLit("hello world"), toPint_14370366(divInt(screenWidth_12755220[0], 2)), toPint_14370366(divInt(screenHeight_12755223[0], 2)), 1);

  
}
init_15010529(makeNimstrLit("myOrg"), makeNimstrLit("myApp"));
createWindow_16440171(makeNimstrLit("myApp"), 128, 128, 4, false);
run_16440690(gameInit_16506028, gameUpdate_16506043, gameDraw_16506059);
